,,
Will the comparison-counting algorithm work correctly for arrays with equal values?,Analyse,
"Trace the algorithm for the graph given. An example can be found in the text. b. After the next fringe vertex is added to the tree, add all the unseen vertices adjacent to it to the priority queue of fringe vertices. ",Understand,
"Just follow the description of the algorithm given in the statement of the problem. Note that a new key is always inserted in a leaf and that full nodes are always split on the way down, even though the leaf for the new key may have a room for it. b. Can a split of a full node cause a cascade of splits through the chain of its ancestors? Can we get a taller search tree than necessary?",Analyse,
Use the method of backward substitutions to solve the recurrence given in the text.,Apply,
Which sorting algorithm other than heapsort uses a priority queue?,Remember,
"Since this greedy algorithm is arguably simpler than the augmenting-path algorithm given in the section, should we expect a positive or negative answer? Of course, this point cannot be substituted for a more specific argument or a counterexample. ",Evaluate,
Apply the shortest-augmenting path algorithm to find a maximum flow and a minimum cut in the following networks. a. 5 2 1 2 5 6 4 4 3 7 4 8 6 b. 3 2 4 2 1 1 4 4 6 7 3 5 5 2,Apply,
Use the table generated by the dynamic programming algorithm in solving the problem's instance in Example 1 of the section.,Apply,
Indicate the time efficiency classes of the three main operations of the priority queue implemented as a. an unsorted array. b. a sorted array. c. a binary search tree. d. an AVL tree. e. a heap.,Evaluate,
Trace the algorithm on the input given,Apply,
Set up sums and simplify them by using the standard formulas and rules for sum manipulation. Do not forget to include the multiplications outside the inner loop.,Apply,
"One can find arguments supporting either view. There is a well-established principle pertinent to the matter, though: scientific facts or mathematical expressions of them are not patentable. (Why do you think this is the case?) But should this preclude granting patents for all algorithms? ",Evaluate,
"For the partitioning procedure outlined in this section: a. Prove that if the scanning indices stop while pointing to the same element, i.e., i = j, the value they are pointing to must be equal to p. b. Prove that when the scanning indices stop, j cannot point to an element more than one position to the left of the one pointed to by i. ",Analyse,
Just follow Euclid's algorithm as described in the text. b. Compare the number of divisions made by the two algorithms.,Apply,
Is Horner's rule more time efficient at the expense of being less space efficient than the brute-force algorithm?,Remember,
Consider all the possibilities of partitioning the nodes between the left and right subtrees. b. Compute the values in question using the two formulas. c. Use the formula for the nth Catalan number and Stirling's formula for n!. ,Apply,
Give examples of using an index in real-life applications that do not involve computers.,Analyse,
Does it return a correct comparison count for every array of size 2?,Analyse,
"Considering the case of two jobs might help. Of course, after forming a hypothesis, you will have to prove the algorithm's optimality for an arbitrary input or find a specific counterexample showing that it is not the case. ",Create,
Check how fast the count values grow with doubling the input size.,Analyse,
"After combining the two nodes with the lowest probabilities, resolve the tie arising on the next iteration in two different ways. For each of the two Huffman codes obtained, compute the mean and variance of the codeword length. ",Apply,
Trace the algorithm on the input given. You will have to use it again in order to compute the products of two-digit numbers as well.,Apply,
Outline an algorithm for finding the largest key in a B-tree.,Apply,
Explain how the maximum-flow problem for a network with several sources and sinks can be transformed into the same problem for a network with a single source and a single sink. b. Some networks have capacity constraints on the flow amounts that can flow through their intermediate vertices. Explain how the maximum-flow problem for such a network can be transformed to the maximum-flow problem for a network with edge capacity constraints only.,Analyse,
Thinking about searching for information should lead to a variety of examples.,Understand,
Compare the definitions of the two techniques.,Understand,
"If you have to solve the searching problem for a list of n numbers, how can you take advantage of the fact that the list is known to be sorted? Give separate answers for a. lists represented as arrays. b. lists represented as linked lists. ",Evaluate,
"Use the fact that |xn - x| is the distance between xn, the middle of interval [an, bn], and root x. ",Apply,
"Fill in a table with the time efficiency classes of efficient implementations of the three operations: finding the largest element, finding and deleting the largest element, and adding a new element. ",Analyse,
"Find a trivial lower-bound class for each of the following problems and indicate, if you can, whether this bound is tight. a. finding the largest element in an array b. checking completeness of a graph represented by its adjacency matrix c. generating all the subsets of an n-element set d. determining whether n given real numbers are all distinct ",Analyse,
"Write an equation of the tangent line to the graph of the function at (xn, f (xn)) and find its x-intercept. ",Apply,
"Old World puzzle A peasant finds himself on a riverbank with a wolf, a goat, and a head of cabbage. He needs to transport all three to the other side of the river in his boat. However, the boat has room for only the peasant himself and one other item (either the wolf, the goat, or the cabbage). In his absence, the wolf would eat the goat, and the goat would eat the cabbage. Solve this problem for the peasant or prove it has no solution. (Note: The peasant is a vegetarian but does not like cabbage and hence can eat neither the goat nor the cabbage to help him solve the problem. And it goes without saying that the wolf is a protected species.) ",Create,
"Show that the number of distinct binary search trees b(n) that can be constructed for a set of n orderable keys satisfies the recurrence relation n-1 b(n) = b(k)b(n - 1 - k) for n > 0, b(0) = ",Evaluate,
Prove first that 2h l by induction on h. b. Prove first that 3h l by induction on h.,Apply,
Why is the time efficiency of algorithm OptimalBST cubic? b. Why is the space efficiency of algorithm OptimalBST quadratic?,Evaluate,
Start by finding the target positions for all the statures.,Apply,
"You do not have to check the inequality for each subset S of V if you can point out a subset for which the inequality does not hold. Otherwise, fill in a table for all the subsets S of the indicated set V with columns for S, R(S), and |R(S)| |S|. b. Think time efficiency. ",Evaluate,
"Some textbooks define the number of significant digits in the approximation of number by number as the largest nonnegative integer k for which | - | < 5 . 10-k. || According to this definition, how many significant digits are there in the approximation of by a. ",Apply,
"Apply the nearest-neighbor algorithm to the instance defined by the intercity distance matrix below. Start the algorithm at the first city, assuming that the cities are numbered from 1 to ",Apply,
Start by transforming the logarithms to the same base. b. The easiest way is to prove that lim log2(n + 1) >,Evaluate,
Sketch the graph to determine a general location of the root and choose an initial interval bracketing it. Use an appropriate inequality given in Section,Apply,
Design a (n2) algorithm for finding an optimal binary search tree.,Create,
Prove by mathematical induction that a. h log2 l for any binary tree with height h and the number of leaves l. b. h log3 l for any ternary tree with height h and the number of leaves l.,Apply,
"Describe how one can implement each of the following operations on an array so that the time it takes does not depend on the array's size n. a. Delete the ith element of an array (1 i n). b. Delete the ith element of a sorted array (the remaining array has to stay sorted, of course). ",Create,
Where will A[i] be in the sorted array?,Analyse,
How would you construct an optimal binary search tree for a set of n keys if all the keys are equally likely to be searched for? What will be the average number of comparisons in a successful search in such a tree if n = 2k?,Analyse,
Compare the values of the functions lg lg n and lg n for n = 2k.,Apply,
"This is a straightforward question. You may assume that the three elements to be sorted are distinct. (If you need help, see decision trees for the threeelement selection sort and three-element insertion sort in the section.) ",Apply,
"Design a divide-and-conquer algorithm for computing the number of levels in a binary tree. (In particular, the algorithm must return 0 and 1 for the empty and single-node trees, respectively.) What is the time efficiency class of your algorithm? ",Create,
Perform one iteration of the algorithm for two arbitrarily chosen integers m < n.,Apply,
Compute a nontrivial lower bound for sorting a four-element array and then identify a sorting algorithm whose number of comparisons in the worst case matches the lower bound.,Evaluate,
"Use the property underlying the bisection method. b. Use the definition of division of polynomial p(x) by x - x0, i.e., the equality p(x) = q(x)(x - x0) + r, where x0 is a root of p(x), q(x) and r are the quotient and remainder of this division, respectively. c. Differentiate both sides of the equality given in part (b) and substitute x0 in the result. ",Apply,
"Can you compute the height of a binary tree with the same asymptotic efficiency as the section's divide-and-conquer algorithm but without using a stack explicitly or implicitly? Of course, you may use a different algorithm altogether. ",Create,
"How do we multiply by powers of 10? b. Try to repeat the argument for, say, 98. Counting the number of one-digit additions made by the pen-and-pencil algorithm in multiplying, say, two four-digit numbers, should help answer the general question. ",Analyse,
Find on the Internet or in your library a procedure for finding a real root of the general cubic equation ax3 + bx2 + cx + d = 0 with real coefficients. b. What general algorithm design technique is it based on?,Analyse,
"Sort the following lists by heapsort by using the array representation of heaps. a. 1, 2, 3, 4, 5 (in increasing order) b. 5, 4, 3, 2, 1 (in increasing order) c. S, O, R, T, I, N, G (in alphabetical order) ",Apply,
Change the bounds of the innermost loop of algorithm OptimalBST by exploiting the monotonicity of the root table mentioned at the end of the section.,Apply,
True or false: The root of an optimal binary search tree always contains the key with the highest search probability?,Apply,
"Write pseudocode for an algorithm for finding real roots of equation ax2 + bx + c = 0 for arbitrary real coefficients a, b, and c. (You may assume the availability of the square root function sqrt (x).) ",Apply,
"Given the fact that both traversals can reach a new vertex if and only if it is adjacent to one of the previously visited vertices, which vertices will be visited by the time either traversal halts (i.e., its stack or queue becomes empty)? ",Analyse,
"You will have to prove two facts: i. f (s) 2f (sa) for any instance of the knapsack problem, where f (sa) is the value of the approximate solution obtained by the enhanced greedy algorithm and f (s) is the optimal value of the exact solution to the same instance. ii. The smallest constant for which such an assertion is true is ",Analyse,
"Note that you are asked here about a recurrence for the function's values, not about a recurrence for the number of times its operation is executed. Just follow the pseudocode to set it up. It is easier to solve this recurrence by forward substitutions (see Appendix B). b. This question is very similar to one we have already discussed. c. You may want to include the subtractions needed to decrease n. ",Apply,
Find the smallest and the largest number of keys that a heap of height h can contain. b. Prove that the height of a heap with n nodes is equal to log2 n .,Analyse,
Check the algorithm's pseudocode to see what it does upon encountering equal values.,Apply,
"Describe the algorithm used by your favorite ATM machine in dispensing cash. (You may give your description in either English or pseudocode, whichever you find more convenient.) ",Understand,
Reduce the problem to finding a maximum matching in a bipartite graph.,Apply,
"First, determine the time efficiency of each of the three steps of the algorithm. ",Analyse,
Is heapsort a stable sorting algorithm?,Understand,
"As a rule, sorting algorithms that can exchange far-apart elements are not stable. ",Analyse,
Represent each of the given polynomials by a linked list with nodes containing exponent i and coefficient ai for each nonzero term aixi.,Apply,
Name the algorithms for the searching problem that you already know. Give a good succinct description of each algorithm in English,Remember,
Check whether the algorithm can reverse a relative ordering of equal elements.,Analyse,
Indicate how many roots each of the following equations has: a. xex - 1 = 0 b. x - ln x = 0 c. x sin x - 1 = 0,Apply,
Use either DFS or BFS.,Apply,
Try to design an algorithm that always makes less than mn comparisons.,Create,
"Construct a heap for the list 1, 8, 6, 5, 3, 7, 4 by the bottom-up algorithm.",Apply,
"First, express the right-hand side as a function of h. Then, prove the obtained equality by either using the formula for the sum i2i given in Appendix A or by mathematical induction on h. ",Apply,
"The following algorithm seeks to compute the number of leaves in a binary tree. ALGORITHM LeafCounter(T ) //Computes recursively the number of leaves in a binary tree //Input: A binary tree T //Output: The number of leaves in T if T = return 0 else return LeafCounter(Tleft)+ LeafCounter(Tright) Is this algorithm correct? If it is, prove it; if it is not, make an appropriate correction. ",Analyse,
What structure does a complete tree of height h with the largest number of nodes have? What about a complete tree with the smallest number of nodes? b. Use the results established in part (a).,Analyse,
"Show the stack after each operation of the following sequence that starts with the empty stack: push(a), push(b), pop, push(c), push(d), pop b. Show the queue after each operation of the following sequence that starts with the empty queue: enqueue(a), enqueue(b), dequeue, enqueue(c), enqueue(d), dequeue ",Understand,
Use a space-for-time trade-off.,Apply,
Follow the insertion algorithm outlined in the section.,Understand,
Solving the problem for n = 2 and n = 3 should lead you to the critical insight. b. Where would you put the post office if it did not have to be at one of the village locations?,Evaluate,
Trace Strassen's algorithm on the input given,Apply,
"Since maximum-flow algorithms require processing edges in both directions, it is convenient to modify the adjacency matrix representation of a network as follows. If there is a directed edge from vertex i to vertex j of capacity uij , then the element in the ith row and the j th column is set to uij , and the element in the j th row and the ith column is set to -uij ; if there is no edge between vertices i and j , both these elements are set to zero. Outline a simple algorithm for identifying a source and a sink in a network presented by such a matrix and indicate its time efficiency. ",Create,
"For quicksort with the median-of-three pivot selection, are strictly increasing arrays the worst-case input, the best-case input, or neither? b. Answer the same question for strictly decreasing arrays. ",Evaluate,
Describe the standard algorithm for finding the binary representation of a positive decimal integer a. in English. b. in pseudocode.,Remember,
What property of a BFS forest indicates a cycle's presence? (The answer is similar to the one for a DFS forest.) b. Find two examples supporting this answer.,Analyse,
"The sample variance of n measurements x1, . . . , xn can be computed as either in=1(xi - xų)2 n xi where xų = i=1 n-1 n or n xi2 - ( n xi )2/ n i=1 i=1 . n-1 Find and compare the number of divisions, multiplications, and additions/ subtractions (additions and subtractions are usually bunched together) that are required for computing the variance according to each of these formulas. ",Apply,
"As the given definition of the number of significant digits requires, compute the relative errors of the approximations. One of the answers doesn't agree with our intuitive idea of this notion. ",Evaluate,
"Estimate how many times faster quicksort will sort an array of one million random numbers than insertion sort. b. True or false: For every n > 1, there are n-element arrays that are sorted faster by insertion sort than by quicksort? ",Analyse,
"Since Prim's algorithm needs weights on a graph's edges, some weights have to be assigned. As to the second question, think of other algorithms that can solve this problem. ",Understand,
"Let A be the adjacency matrix of an undirected graph. Explain what property of the matrix indicates that i. the graph is complete. ii. the graph has a loop, i.e., an edge connecting a vertex to itself. iii. the graph has an isolated vertex, i.e., a vertex with no edges incident to it. b. Answer the same questions for the adjacency list representation. ",Evaluate,
The definition of a matching and its cardinality should lead you to the answers to these questions with no difficulty.,Apply,
"How many outcomes does the problem have? b. Of course, there are many ways to solve this simple problem. c. Thinking about a, b, and c as points on the real line should help. ",Analyse,
"Write an equation of the line through the points (an, f (an)) and (bn, f (bn)) and find its x-intercept. ",Apply,
Give an example showing that quicksort is not a stable sorting algorithm.,Analyse,
Perform the BFS traversal the same way it is done in the text,Apply,
Just trace the algorithms for n =,Apply,
Trace the algorithm in the same way it is done in the section for another instance of the string-matching problem.,Analyse,
Apply the formula for the area of a trapezoid to each of the n approximating trapezoid strips and sum them up.,Remember,
Consider the problem of finding the distance between the two closest numbers in an array of n numbers. (The distance between two numbers x and y is computed as |x - y|.) a. Design a presorting-based algorithm for solving this problem and determine its efficiency class. b. Compare the efficiency of this algorithm with that of the brute-force algorithm (see Problem 9 in Exercises,Create,
This is not an easy task. None of the standard sorting algorithms can do this. Try to design a special algorithm that squeezes as much information as possible from each of its comparisons.,Create,
Apply Horner's rule to convert 110100101 from binary to decimal.,Apply,
Applying Prim's algorithm to a weighted graph that is not connected should help in answering this question.,Apply,
"Prove that if d divides both m and n (i.e., m = sd and n = td for some positive integers s and t), then it also divides both n and r = m mod n and vice versa. Use the formula m = qn + r (0 r < n) and the fact that if d divides two integers u and v, it also divides u + v and u - v (why?). ",Apply,
"Use the standard rules of sum manipulation and, in particular, the geometric series formula. b. You will need to take logarithms base m/2 in your derivation. ",Apply,
"How many even numbers are there among the first n Fibonacci numbers, i.e., among the numbers F (0), F (1), . . . , F (n - 1)? Give a closed-form formula valid for every n > ",Analyse,
Use the composite trapezoidal rule with n = 4 to approximate the following definite integrals. Find the truncation error of each approximation and compare it with the one given by formula (,Apply,
Give an example of an array of n elements for which the sentinel mentioned in the text is actually needed. What should be its value? Also explain why a single sentinel suffices for any input.,Analyse,
The answer is no. Give a counterexample.,Evaluate,
Find the order of growth of the following sums. Use the (g(n)) notation with the simplest function g(n) possible. a. ni =-01(i 2 +1)2 b. n-1 lg i2 i=2 ij-=10(i + j ) n-1 c. in=1(i + 1)2i-1 d. i=0,Analyse,
"Apply quicksort to sort the list E, X, A, M, P , L, E in alphabetical order. Draw the tree of the recursive calls made. ",Apply,
"Prove that every element xn of the sequence is (i) positive, (ii) greater than D (by computing xn+1 - D), and (iii) decreasing (by computing xn+1 - xn). Then take the limit of both sides of equality (",Evaluate,
"Do some research on al-Khorezmi (also al-Khwarizmi), the man from whose name the word ""algorithm"" is derived. In particular, you should learn what the origins of the words ""algorithm"" and ""algebra"" have in common. ",Understand,
"Which of the following formulas can be considered an algorithm for computing the area of a triangle whose side lengths are given positive numbers a, b, and c? a. S= p(p - a)(p - b)(p - c), where p = (a + b + c)/2 b. S= 1 bc sin A, where A is the angle between sides b and c 2 c. S = 1 aha , where ha is the height to base a 2 ",Evaluate,
Apply Horner's rule to evaluate the polynomial p(x) = 3x4 - x3 + 2x + 5 at x = -,Apply,
Find the minimum order of the B-tree that guarantees that the number of disk accesses in searching in a file of 100 million records does not exceed,Apply,
"Consider a network that is a rooted tree, with the root as its source, the leaves as its sinks, and all the edges directed along the paths from the root to the leaves. Design an efficient algorithm for finding a maximum flow in such a network. What is the time efficiency of your algorithm? ",Create,
Trace the algorithm for n = 2; take advantage of this trace in tracing the algorithm for n = 3 and then use the latter for n =,Apply,
Is it always true that the bottom-up and top-down algorithms yield the same heap for the same input?,Analyse,
Generalize the optimal binary search algorithm by taking into account unsuccessful searches.,Create,
Which of the following binary trees are AVL trees? 5 5 5 3 6 4 6 3 6 2 8 2 8 1 2 7 9 1 3 7 9 (a) (b) (c),Evaluate,
The recurrence for the number of multiplications in Pan's algorithm is similar to that for Strassen's algorithm. Use the Master Theorem to find the order of growth of its solution.,Apply,
Follow the analysis plan used in the text when the algorithm was mentioned for the first time.,Analyse,
"Though the final answer is correct, its derivation contains an error you have to find. ",Analyse,
"If the assertion were true, would we not have a simpler algorithm for constructing an optimal binary search tree? ",Evaluate,
"Prove that if p(x) is a polynomial of an odd degree, then it must have at least one real root. b. Prove that if x0 is a root of an n-degree polynomial p(x), the polynomial can be factored into p(x) = (x - x0)q(x), where q(x) is a polynomial of degree n - 1",Evaluate,
See an application of this algorithm to another bipartite graph in the section.,Analyse,
Trace the algorithm as we did in solving another system in the section.,Apply,
Take advantage of the standard traversals of such trees.,Apply,
Deleting an arbitrary element of a heap can be done by generalizing the algorithm for deleting its root.,Create,
Apply the dynamic programming algorithm to the instance given as it is done in Example 2 of the section. Note that there are two optimal coin combinations here.,Apply,
Write down driving directions for going from your school to your home with the precision required from an algorithm's description. b. Write down a recipe for cooking your favorite dish with the precision required by an algorithm.,Create,
