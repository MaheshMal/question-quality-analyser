 in chapter we described various mechanisms that allow processes to synchronize their actions. we also discussed a number of schemes to ensure the atomicity of a transaction that executes either in isolation or concurrently with other transactions. in chapter we described various methods that an operating system can use to deal with the deadlock problem. in this chapter we examine how centralized synchronization mechanisms can be extended to a distributed environment. we also discuss methods for handling deadlocks in a distributed system. objectives to describe various methods for achieving mutual exclusion in a distributed system. to explain how atomic transactions can be implemented in a distributed system. to show how some of the concurrency control schemes discussed in chapter can be modified for use in a distributed environment. to present schemes for handling deadlock prevention deadlock avoidance and deadlock detection in a distributed system