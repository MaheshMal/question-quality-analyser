Linux VServer Virtual Machine Architecture

     Linux VServer is an open-source, fast, lightweight approach to implement-
     ing virtual machines on a Linux server [SOLT07, LIGN05]. Only a single copy
     of the Linux kernel is involved. VServer consists of a relatively modest modifi-
     cation to the kernel plus a small set of OS userland5 tools. The VServer Linux
     kernel supports a number of separate virtual servers. The kernel manages all sys-
     tem resources and tasks, including process scheduling, memory, disk space, and
     processor time. This is closer in concept to the process VM rather than the system
     VM of Figure 2.14.
        Each virtual server is isolated from the others using Linux kernel capabilities.
     This provides security and makes it easy to set up multiple virtual machines on a
     single platform. The isolation involves four elements: chroot, chcontext, chbind, and
     capabilities.
        The chroot command is a UNIX or Linux command to make the root directory
     (/) become something other than its default for the lifetime of the current process.
     It can only be run by privileged users and is used to give a process (commonly a net-
     work server such as FTP or HTTP) access to a restricted portion of the file system.
     This command provides file system isolation. All commands executed by the virtual
     server can only affect files that start with the defined root for that server.
        The chcontext Linux utility allocates a new security context and executes
     commands in that context. The usual or hosted security context is the context 0.
     This context has the same privileges as the root user (UID 0): This context can
     see and kill other tasks in the other contexts. Context number 1 is used to view
     5The term userland refers to all application software that runs in user space rather than kernel space. OS
     userland usually refers to the various programs and libraries that the operating system uses to interact
     with the kernel: software that performs input/output, manipulates file system objects, etc.

                                                             Server                    Server
                                                       applications              applications
                                   VMhost                    VM1                       VMn                 Virtual platform
      Hosting platform       VM admin.
                             Remote admin.
                             Core services
                             /dev  /usr  /home  /proc  /dev  /usr  /home  /proc  /dev  /usr  /home  /proc
                                                       Standard OS image
      Figure 2.21                  Linux VServer Architecture
      other contexts but cannot affect them. All other contexts provide complete isola-
      tion: Processes from one context can neither see nor interact with processes from
      another context. This provides the ability to run similar contexts on the same com-
      puter without any interaction possible at the application level. Thus, each virtual
      server has its own execution context that provides process isolation.
      The chbind utility executes a command, and locks the resulting process and
      its children into using a specific IP address. Once called, all packets sent out by this
      virtual server through the system's network interface are assigned the sending IP
      address derived from the argument given to chbind. This system call provides net-
      work isolation: Each virtual server uses a separate and distinct IP address. Incoming
      traffic intended for one virtual server cannot be accessed by other virtual servers.
      Finally, each virtual server is assigned a set of capabilities. The concept of
      capabilities, as used in Linux, refers to a partitioning of the privileges available to
      a root user, such as the ability to read files or to trace processes owned by another
      user. Thus, each virtual server can be assigned a limited subset of the root user's
      privileges. This provides root isolation. VServer can also set resource limits, such as
      limits to the amount of virtual memory a process may use.
      Figure 2.21, based on [SOLT07], shows the general architecture of Linux
      VServer. VServer provides a shared, virtualized OS image, consisting of a root file
      system, and a shared set of system libraries and kernel services. Each VM can be
      booted, shut down, and rebooted independently. Figure 2.21 shows three group-
      ings of software running on the computer system. The hosting platform includes the
      shared OS image and a privileged host VM, whose function is to monitor and man-
      age the other VMs. The virtual platform creates virtual machines and is the view of
      the system seen by the applications running on the individual VMs.
