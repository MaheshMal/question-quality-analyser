 and the file can be deleted. however when cycles exist the reference count may not be even when it is no longer possible to refer to a directory or file. this anomaly results from the possibility of self referencing or a cycle in the directory structure. in this case we generally need to use a garbage collection scheme to determine when the last reference has been deleted and the disk space can be reallocated. garbage collection involves traversing the entire file system marking everything that can be accessed. then a second pass collects everything that is not marked onto a list of free space. a similar marking procedure can be used to ensure that a traversal or search will cover everything in the file system once and only once. garbage collection for a disk based file system. however is extremely time consuming and is thus seldom attempted. garbage collection is necessary only because of possible cycles in the graph. thus an acyclic graph structure is much easier to work with. the difficulty is to avoid cycles as new links are added to the structure. how do we know when a new link will complete a cycle? there are algorithms to detect cycles in graphs however they are computationally expensive especially when the graph is on disk storage. a simpler algorithm in the special case of directories and links is to bypass links during directory traversal. cycles are avoided and no extra overhead is incurred. . file system mounting just as a file must be opened before it is used a file system must be mounted before it can be available to processes on the system. more specifically the directory structure can be built out of multiple volumes which must be mounted to make them available within the file system name space. the mount procedure is straightforward. the operating system is given the name of the device and the mount point the location within the file structure where the file system is to be attached. typically a mount point is an empty directory. for instance on a unix system a file system containing a user's home directories might be mounted as home then to access the directory structure within that file system we could precede the directory names with ftiome as in homc janc. mounting that file system under users would result in the path name users jane which we could use to reach the same directory. next the operating system verifies that the device contains a valid file system. it does so by asking the device driver to read the device directory and verifying that the directory has the expected format. finally the operating system notes in its directory structure that a file system is mounted at the specified mount point. this scheme enables the operating system to traverse its directory structure switching among file systems as appropriate. to illustrate file mounting consider the file system depicted in figure . where the triangles represent subtrees of directories that are of interest. figure . a shows an existing file system while figure . b shows an unmounted volume residing on device' dsk. at this point only the files on the existing file system can be accessed. figure . shows the effects of mounting the volume residing on device dsk over users. if the volume is unmounted the file system is restored to the situation depicted in figure . . systems impose semantics to clarify functionality. for example a system may disallow a mount over a directory that contains files or it may make the chapter file system interface users fred sue jane doc a b figure . file system a existing system b unmounted volume. mounted file system available at that directory and obscure the directory's existing files until the file system is unmounted terminating the use of the file system and allowing access to the original files in that directory. as another example a system may allow the same file system to be mounted repeatedly at different mount points or it may only allow one mount per file system. consider the actions of the macintosh operating system. whenever the system encounters a disk for the first time hard disks are found at boot time and floppy disks are seen when they are inserted into the drive the macintosh operating system searches for a file system on the device. if it finds one it automatically mounts the file system at the root level adding a folder icon on the screen labeled with the name of the file system as stored in the device directory . the user is then able to click on the icon and thus display the newly motinted file system. the microsoft windows family of operating systems nt small xp maintains an extended two level directory structure with devices jane doc figure . mount point