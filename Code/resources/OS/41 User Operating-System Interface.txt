 resource allocation. when there are multiple users or multiple jobs running at the same time resources must be allocated to each of hem. many different types of resources are managed by the operating system. some such as cpu cycles main memory and file storage may have special allocation code whereas others such as i o devices may have much more general request and release code. for instance in determining how best to use the cpu operating systems have cpu scheduling routines that take into account the speed of the cpu the jobs that must be executed the number of registers available and other factors. there may also be routines to allocate printers modems usb storage drives and other peripheral devices. accounting. we want to keep track of which users use how much and what kinds of computer resources. this record keeping may be used for accounting so that users can be billed or simply for accumulating usage statistics. usage statistics may be a valuable tool for researchers who wish to reconfigiire the system to improve computing services. protection and security. the owners of information stored in a multiuser or networked computer system may want to control use of that information. when several separate processes execute concurrently it should not be possible for one process to interfere with the others or with the operating system itself. protection involves ensuring that all access to system resources is controlled. security of the system from outsiders is also important. such security starts with requiring each user to authenticate himself or herself to the system usually by means of a password to gain access to system resources. it extends to defending external i o devices including modems and network adapters from invalid access attempts and to recording all such connections for detection of break ins. if a system is to be protected and secure precautions must be instituted throughout it. a chain is only as strong as its weakest link. . user operating system interface there are two fundamental approaches for users to interface with the operating system. one technique is to provide a command line interface or command interpreter that allows users to directly enter commands that are to be performed by the operating system. the second approach allows the user to interface with the operating system via a graphical user interface or gui. . . command interpreter some operating systems include the command interpreter in the kernel. others such as windows xp and unix treat the command interpreter as a special program that is running when a job is initiated or when a user first logs on on interactive systems . on systems with multiple command interpreters to choose from the interpreters are known as shells. for example on unix and linux systems there are several different shells a user may choose from including the bourne shell c shell bourne again shell the korn shell etc. most shells provide similar functionality with only minor differences most users choose a shell based upon personal preference. chapter operating system structures the main function of the command interpreter is to get and execute the next user specified command. many of the commands given at this level manipulate files create delete list print copy execute and so on. the ms dos and unix shells operate in this way. there are two general ways in which these commands can be implemented. in one approach the command interpreter itself contains the code to execute the command. for example a command to delete a file may cause the command interpreter to jump to a section of its code that sets up the parameters and makes the appropriate system call. in this case the number of commands that can be given determines the size of the command interpreter since each command requires its own implementing code. an alternative approach used by unix among other operating systems implements most commands through system programs. in this case the command interpreter does not understand the command in any way it merely uses the command to identify a file to be loaded into memory and executed. thus the unix command to delete a file rm file.txt would search for a file called rm load the file into memory and execute it with the parameter f i l e . txt. the function associated with the rm command would be defined completely by the code in the file rm. in this way programmers can add new commands to the system easily by creating new files with the proper names. the command interpreter program which can be small does not have to be changed for new commands to be added. . . graphical user interfaces a second strategy for interfacing with the operating system is through a userfriendly graphical user interface or gui. rather than having users directly enter commands via a command line interface a gui allows provides a mouse based window and menu system as an interface. a gui provides a desktop metaphor where the mouse is moved to position its pointer on images or icons on the screen the desktop that represent programs files directories and system functions. depending on the mouse pointer's location clicking a button on the mouse can invoke a program select a file or directory known as a folder or pull down a menu that contains commands. graphical user interfaces first appeared due in part to research taking place in the early s at xerox parc research facility. the first gui appeared on the xerox alto computer in . however graphical interfaces became more widespread with the advent of apple macintosh computers in the s. the user interface to the macintosh operating system mac os has undergone various changes over the years the most significant being the adoption of the aqua interface that appeared with mac os x. microsoft's first version of windows version . was based upon a gui interface to the ms dos operating system. the various versions of windows systems proceeding this initial version have made cosmetic changes to the appearance of the gui and several enhancements to its functionality including the windows explorer. traditionally unix systems have been dominated by command line interfaces although there are various gui interfaces available including the common desktop environment cde and x windows systems that are common on