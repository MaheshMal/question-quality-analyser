 in this section we explore the characteristics of real time systems and address issues related to designing both soft and hard real time operating systems. the following characteristics are typical of many real time systems single purpose small size . system characteristics inexpensively mass produced specific timing requirements we next examine each of these characteristics. unlike pcs which are put to many uses a real time system typically serves only a single purpose such as controlling antilock brakes or delivering music on an mp player. it is unlikely that a real time system controlling an airliner's navigation system will also play dvds! the design of a real time operating system reflects its single purpose nature and is often quite simple. many real time systems exist in environments where physical space is constrained. consider the amount of space available in a wristwatch or a microwave oven it is considerably less than what is available in a desktop computer. as a result of space constraints most real time systems lack both the cpu processing power and the amount of memory available in standard desktop pcs. whereas most contemporary desktop and server systems use or bit processors many real time systems run on or bit processors. similarly a desktop pc might have several gigabytes of physical memory whereas a real time system might have less than a megabyte. we refer to the footprint of a system as the amount of memory required to run the operating system and its applications. because the amount of memory is limited most real time operating systems must have small footprints. next consider where many real time systems are implemented they are often found in home appliances and consumer devices. devices such as digital cameras microwave ovens and thermostats are mass produced in very costconscious environments. thus the microprocessors for real time systems must also be inexpensively mass produced. one technique for reducing the cost of an embedded controller is to use an alternative technique for organizing the components of the computer system. rather than organizing the computer around the structure shown in figure . where buses provide the interconnection mechanism to individual components many embedded system controllers use a strategy known as system on chip soc . here the cpu memory including cache memorymouse keyboard printer monitor disks cpu disk usb controller graphics controller adapter memory figure . bus oriented organization. chapter real time systems management unit mmu and any attached peripheral ports such as usb ports are contained in a single integrated circuit. the soc strategy is typically less expensive than the bus oriented organization of figure . . we turn now to the final characteristic identified above for real time systems specific timing requirements. it is in fact the defining characteristic of such systems. accordingly the defining characteristic of both hard and soft realtime operating systems is to support the timing requirements of real time tasks and the remainder of this chapter focuses on this issue. real time operating systems meet timing requirements by using scheduling algorithms that give real time processes the highest scheduling priorities. furthermore schedulers must ensure that the priority of a real time task does not degrade over time. a second somewhat related technique for addressing timing requirements is by minimizing the response time to events such as interrupts