 manager when the memory is not being used. in chapter we will explore virtual memory which allows developers to write programs that behave as if the system has more memory than is physically available. currently not many handheld devices use virtual memory techniques so program developers must work within the confines of limited physical memory. a second issue of concern to developers of handheld devices is the speed of the processor used in the devices. processors for most handheld devices run at a fraction of the speed of a processor in a pc. faster processors require more power. to include a faster processor in a handheld device would require a larger battery which would take up more space and would have to be replaced or recharged more frequently. most handheld devices use smaller slower processors that consume less power. therefore the operating system and applications must be designed not to tax the processor. the last issue confronting program designers for handheld devices is i o. a lack of physical space limits input methods to small keyboards handwriting recognition or small screen based keyboards. the small display screens limit output options. whereas a monitor for a home computer may measure up to inches the display for a handheld device is often no more than inches square. familiar tasks such as reading e mail and browsing web pages must be condensed into smaller displays. one approach for displaying the content in web pages is web clipping where only a small subset of a web page is delivered and displayed on the handheld device. some handheld devices use wireless technology such as bluetooth or . allowing remote access to e mail and web browsing. cellular telephones with connectivity to the internet fall into this category. however for pdas that do not provide wireless access downloading data typically requires the user to first download the data to a pc or workstation and then download the data to the pda. some pdas allow data to be directly copied from one device to another using an infrared link. generally the limitations in the functionality of pdas are balanced by their convenience and portability. their use continues to expand as network connections become more available and other options such as digital cameras and mp players expand their utility. . computing environments so far we have provided an overview of computer system organization and major operating system components. we conclude with a brief overview of how these are used in a variety of computing environments. . . traditional computing as computing matures the lines separating many of the traditional computing environments are blurring. consider the typical office environment. just a few years ago this environment consisted of pcs connected to a network with servers providing file and print services. remote access was awkward and portability was achieved by use of laptop computers. terminals attached to mainframes were prevalent at many companies as well with even fewer remote access and portability options. chapter introduction the current trend is toward providing more ways to access these computing environments. web technologies are stretching the boundaries of traditional computing. companies establish portals which provide web accessibility to their internal servers. network computers are essentially terminals that understand web based computing. handheld computers can synchronize with pcs to allow very portable use of company information. handheld pdas can also connect to wireless networks to use the company's web portal as well as the myriad other web resources . at home most users had a single computer with a slow modem connection to the office the internet or both. today network connection speeds once available only at great cost are relatively inexpensive giving home users more access to more data. these fast data connections are allowing home computers to serve up web pages and to run networks that include printers client pcs and servers. some homes even have firewalls to protect their networks from security breaches. those firewalls cost thousands of dollars a few years ago and did not even exist a decade ago. in the latter half of the previous century computing resources were scarce. before that they were nonexistent! for a period of time systems were either batch or interactive. batch system processed jobs in bulk with predetermined input from files or other sources of data . interactive systems waited for input from users. to optimize the use of the computing resources multiple users shared time on these systems. time sharing systems used a timer and scheduling algorithms to rapidly cycle processes through the cpu giving each user a share of the resources. today traditional time sharing systems are uncommon. the same scheduling technique is still in use on workstations and servers but frequently the processes are all owned by the same user or a single user and the operating system . user processes and system processes that provide services to the user are managed so that each frequently gets a slice of computer time. consider the windows created while a user is working on a pc for example and the fact that they may be performing different tasks at the same time. . . client server computing as pcs have become faster more powerful and cheaper designers have shifted away from centralized system architecture. terminals connected to centralized systems are now being supplanted by pcs. correspondingly userinterface functionality once handled directly by the centralized systems is increasingly being handled by the pcs. as a result many of todays systems act as server systems to satisfy requests generated by client systems. this form of specialized distributed system called client server system has the general structure depicted in figure . . server systems can be broadly categorized as compute servers and file servers the compute server system provides an interface to which a client can send a request to perform an action for example read data in response the server executes the action and sends back results to the client. a server running a database that responds to client requests for data is an example of such a svstem. . computing environments client client ! i client client network server figure . general structure of a client server system. the file server system provides a file system interface where clients can create update read and delete files. an example of such a system is a web server that delivers files to clients running web browsers.' . . peer to peer computing another structure for a distributed system is the peer to peer p p system model. in this model clients and servers are not distinguished from one another instead all nodes within the system are considered peers and each may act as either a client or a server depending on whether it is requesting or providing a service. peer to peer systems offer an advantage over traditional client server systems. in a client server system the server is a bottleneck but in a peer to peer system services can be provided by several nodes distributed throughout the network. to participate in a peer to peer system a node must first join the network of peers. once a node has joined the network it can begin providing services to and requesting services from other nodes in the network. determining what services are available is accomplished in one of two general ways when a node joins a network it registers its service with a centralized lookup service on the network. any node desiring a specific service first contacts this centralized lookup service to determine which node provides the service. the remainder of the communication takes place between the client and the service provider. a peer acting as a client must first discover what node provides a desired service by broadcasting a request for the service to all other nodes in the network. the node or nodes providing that service responds to the peer making the request. to support this approach a discovery protocol must be provided that allows peers to discover services provided by other peers in the network. peer to peer networks gained widespread popularity in the late s with several file sharing services such as napster and gnutella that enable peers to exchange files with one another. the napster system uses an approach similar to the first type described above a centralized server maintains an index of all files stored on peer nodes in the napster network and the actual exchanging of files takes place between the peer nodes. the gnutella system uses a technique similar to the second type a client broadcasts file requests to other nodes in the system and nodes that can service the request respond directly to the client. the future of exchanging files remains uncertain because chapter introduction many of the files are copyrighted music for example and there are laws governing the distribution of copyrighted material. in any case though peerto peer technology undoubtedly will play a role in the future of many sendees such as searching file exchange and e mail. . . web based computing the web has become ubiquitous leading to more access by a wider variety of devices than was dreamt of a few years ago. pcs are still the most prevalent access devices with workstations handheld pdas and even cell phones also providing access. web computing has increased the emphasis on networking. devices that were not previously networked now include wired or wireless access. devices that were networked now have faster network connectivity provided by either improved networking technology optimized network implementation code or both. the implementation of web based computing has given rise to new categories of devices such as load balancers which distribute network connections among a pool of similar servers. operating systems like windows which acted as web clients have evolved into linux and windows xp which can act as web servers as well as clients. generally the web has increased the complexity of devices because their users require them to be web enabled