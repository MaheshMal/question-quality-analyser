 a real time system is a computer system that requires not only that the computing results be correct but also that the results be produced within a specified deadline period. results produced after the deadline has passed even if correct may be of no real value. to illustrate consider an autonomous robot that delivers mail in an office complex. if its vision control system identifies a wall after the robot has walked into it despite correctly identifying the wall the system has not met its requirement. contrast this timing requirement with the much less strict demands of other systems. in an interactive desktop computer system it is desirable to provide a quick response time to the interactive user but it is not mandatory to do so. some systems such as a batch processing system may have no timing requirements whatsoever. real time systems executing on traditional computer hardware are used in a wide range of applications. in addition many real time systems are chapter real time systems embedded in specialized devices such as ordinary home appliances for example microwave ovens and dishwashers consumer digital devices for example cameras and mp players and communication devices for example cellular telephones and blackberry handheld devices . they are also present in larger entities such as automobiles and airplanes. an embedded system is a computing device that is part of a larger system in which the presence of a computing device is often not obvious to the user. to illustrate consider an embedded system for controlling a home dishwasher. the embedded system may allow various options for scheduling the operation of the dishwasher the water temperature the type of cleaning light or heavy even a timer indicating when the dishwasher is to start. most likely the user of the dishwasher is unaware that there is in fact a computer embedded in the appliance. as another example consider an embedded system controlling antilock brakes in an automobile. each wheel in the automobile has a sensor detecting how much sliding and traction are occurring and each sensor continually sends its data to the system controller. taking the results from these sensors the controller tells the braking mechanism in each wheel how much braking pressure to apply. again to the user in this instance the driver of the automobile the presence of an embedded computer system may not be apparent. it is important to note however that not all embedded systems are real time. for example an embedded system controlling a home furnace may have no real time requirements whatsoever. some real time systems are identified as safety critical systems. in a safety critical system incorrect operation usually due to a missed deadline results in some sort of catastrophe. examples of safety critical systems include weapons systems antilock brake systems flight management systems and health related embedded systems such as pacemakers. in these scenarios the real time system must respond to events by the specified deadlines otherwise serious injury or worse might occur. however a significant majority of embedded systems do not qualify as safety critical including fax machines microwave ovens wristwatches and networking devices such as switches and routers. for these devices missing deadline requirements results in nothing more than perhaps an unhappy user. real time computing is of two types hard and soft. a hard real time system has the most stringent requirements guaranteeing that critical realtime tasks be completed within their deadlines. safety critical systems are typically hard real time systems. a soft real time system is less restrictive simply providing that a critical real time task will receive priority over other tasks and that it will retain that priority until it completes. many commercial operating systems as well as linux provide soft real time support