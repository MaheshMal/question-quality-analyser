Beowulf and Linux Clusters

      In 1994, the Beowulf project was initiated under the sponsorship of the NASA
      High Performance Computing and Communications (HPCC) project. Its goal was
      to investigate the potential of clustered PCs for performing important computa-
      tion tasks beyond the capabilities of contemporary workstations at minimum cost.
      Today, the Beowulf approach is widely implemented and is perhaps the most impor-
      tant cluster technology available.
      Beowulf Features
      Key features of Beowulf include the following [RIDG97]:
      ·  Mass market commodity components
      ·  Dedicated processors (rather than scavenging cycles from idle workstations)
      ·  A dedicated, private network (LAN or WAN or internetted combination)
      ·  No custom components

                                                                        Distributed
                                                                        shared storage
                                                                        Linux
                                                                        workstations
                         Ethernet or
                  interconnected ethernets
   Figure 16.18  Generic Beowulf Configuration
·  Easy replication from multiple vendors
·  Scalable I/O
·  A freely available software base
·  Use of freely available distribution computing tools with minimal changes
·  Return of the design and improvements to the community
   Although elements of Beowulf software have been implemented on a
number of different platforms, the most obvious choice for a base is Linux,
and most Beowulf implementations use a cluster of Linux workstations and/or
PCs. Figure 16.18 depicts a representative configuration. The cluster consists of
a number of workstations, perhaps of differing hardware platforms, all running
the Linux operating system. Secondary storage at each workstation may be made
available for distributed access (for distributed file sharing, distributed virtual
memory, or other uses). The cluster nodes (the Linux systems) are interconnected
with a commodity networking approach, typically Ethernet. The Ethernet sup-
port may be in the form of a single Ethernet switch or an interconnected set of
switches. Commodity Ethernet products at the standard data rates (10 Mbps, 100
Mbps, 1 Gbps) are used.
Beowulf Software
The Beowulf software environment is implemented as an add-on to commercially
available, royalty-free base Linux distributions. The principal source of open-source
Beowulf software is the Beowulf site at www.beowulf.org, but numerous other
organizations also offer free Beowulf tools and utilities.
   Each node in the Beowulf cluster runs its own copy of the Linux kernel and
can function as an autonomous Linux system. To support the Beowulf cluster
concept, extensions are made to the Linux kernel to allow the individual nodes

     to participate in a number of global namespaces. The following are examples of
     Beowulf system software:
     ·  Beowulf distributed process space (BPROC): This package allows a process
        ID space to span multiple nodes in a cluster environment and also provides
        mechanisms for starting processes on other nodes. The goal of this package is
        to provide key elements needed for a single system image on Beowulf cluster.
        BPROC provides a mechanism to start processes on remote nodes without
        ever logging into another node and by making all the remote processes visible
        in the process table of the cluster's front-end node.
     ·  Beowulf Ethernet channel bonding: This is a mechanism that joins multiple
        low-cost networks into a single logical network with higher bandwidth. The
        only additional work over using single network interface is the computation-
        ally simple task of distributing the packets over the available device trans-
        mit queues. This approach allows load balancing over multiple Ethernets
        connected to Linux workstations.
     ·  Pvmsync: This is a programming environment that provides synchronization
        mechanisms and shared data objects for processes in a Beowulf cluster.
     ·  EnFuzion: EnFuzion consists of a set of tools for doing parametric computing,
        as described in Section 16.4. Parametric computing involves the execution of
        a program as a large number of jobs, each with different parameters or start-
        ing conditions. EnFusion emulates a set of robot users on a single root node
        machine, each of which will log into one of the many clients that form a clus-
        ter. Each job is set up to run with a unique, programmed scenario, with an
        appropriate set of starting conditions [KAPP00].
