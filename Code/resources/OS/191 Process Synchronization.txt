 a cooperating process is one that can affect or be affected by other processes executing in the system. cooperating processes can either directly share a logical address space that is both code and data or be allowed to share data only through files or messages. the former case is achieved through the use of lightweight processes or threads which we discussed in chapter . concurrent access to shared data may result in data inconsistency. in this chapter we discuss various mechanisms to ensure the orderly execution of cooperating processes that share a logical address space so that data consistency is maintained. objectives to introduce the critical section problem whose solutions can be used to ensure the consistency of shared data. to present both software and hardware solutions of the critical section problem. to intoduce the concept of atomic transaction and describe mechanisms to ensure atomicity