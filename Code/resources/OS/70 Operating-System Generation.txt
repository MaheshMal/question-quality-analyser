 it is possible to design code and implement an operating system specifically for one machine at one site. more commonly however operating systems are designed to run on any of a class of machines at a variety of sites with a variety of peripheral configurations. the system must then be configured or generated for each specific computer site a process sometimes known as system generation sysgen . the operating system is normally distributed on disk or cd rom. to generate a system we use a special program. the sysgen program reads from a given file or asks the operator of the system for information concerning the specific configuration of the hardware system or probes the hardware directly to determine what components are there. the following kinds of information must be determined. what cpu is to be used? what options extended instruction sets floatingpoint arithmetic and so on are installed? for multiple cpu systems each cpu must be described. how much memory is available? some systems will determine this value themselves by referencing memory location after memory location until an illegal address fault is generated. this procedure defines the final legal address and hence the amount of available memory. what devices are available? the system will need to know how to address each device the device number the device interrupt number the device's type and model and any special device characteristics. what operating system options are desired or what parameter values are to be used? these options or values might include how many buffers of which sizes should be used what type of cpu scheduling algorithm is desired what the maximum number of processes to be supported is and soon. once this information is determined it can be used in several ways. at one extreme a system administrator can use it to modify a copy of the source code of the operating system. the operating system then is completely compiled. data declarations initializations and constants along with conditional compilation produce an output object version of the operating system that is tailored to the system described. at a slightly less tailored level the system description can cause the creation of tables and the selection of modules from a precompiled library. these modules are linked together to form the generated operating system. selection allows the library to contain the device drivers for all supported i o devices but only those needed are linked into the operating system. because the system is not recompiled system generation is faster but the resulting system may be overly general. at the other extreme it is possible to construct a system that is completely table driven. all the code is always part of the system and selection occurs at execution time rather than at compile or link time. system generation involves simply creating the appropriate tables to describe the system