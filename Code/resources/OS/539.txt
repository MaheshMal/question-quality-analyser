Key Terms, Review Questions, and Problems

Key Terms
block                    input/output (I/O)                            redundant array of
block-oriented device    I/O buffer                                    independent disks
circular buffer          I/O channel                                   removable disk
device I/O               I/O processor                                 rotational delay
direct memory access     logical I/O                                   sector
disk access time         magnetic disk                                 seek time
disk cache               nonremovable disk                             stream-oriented device
gap                      programmed I/O                                track
hard disk                read/write head                               transfer time
interrupt-driven I/O
       Review Questions
       11.1       List and briefly define three techniques for performing I/O.
       11.2       What is the difference between logical I/O and device I/O?
       11.3       What is the difference between block-oriented devices and stream-oriented devices?
                  Give a few examples of each.
       11.4       Why would you expect improved performance using a double buffer rather than a
                  single buffer for I/O?
       11.5       What delay elements are involved in a disk read or write?
       11.6       Briefly define the disk scheduling policies illustrated in Figure 11.7.
       11.7       Briefly define the seven RAID levels.
       11.8       What is the typical disk sector size?

     Problems
     11.1   Consider a program that accesses a single I/O device and compare unbuffered I/O to
            the use of a buffer. Show that the use of the buffer can reduce the running time by at
            most a factor of two.
     11.2   Generalize the result of Problem 11.1 to the case in which a program refers to n devices.
     11.3   a.  Perform the same type of analysis as that of Table 11.2 for the following sequence
                of disk track requests: 27, 129, 110, 186, 147, 41, 10, 64, 120. Assume that the
                disk head is initially positioned over track 100 and is moving in the direction of
                decreasing track number.
            b.  Do the same analysis, but now assume that the disk head is moving in the direction
                of increasing track number.
     11.4   Consider a disk with N tracks numbered from 0 to (N - 1) and assume that requested
            sectors are distributed randomly and evenly over the disk. We want to calculate the
            average number of tracks traversed by a seek.
            a.  Calculate the probability of a seek of length j when the head is currently posi-
                tioned over track t. (Hint: This is a matter of determining the total number of
                combinations, recognizing that all track positions for the destination of the seek
                are equally likely.)
            b.  Calculate the probability of a seek of length K, for an arbitrary current position
                of the head. (Hint: This involves the summing over all possible combinations of
                movements of K tracks.)
            c.  Calculate the average number of tracks traversed by a seek, using the formula for
                expected value
                                                       N-1
                                               E[x] =  ai *    Pr [x = i]
                                                       i=0
                                          n       n(n + 1)     n           n(n + 1)(2n + 1)
                Hint: Use the equalities a     =       2    ;  a i2  =     6                 .
                                          i=1                  i=1
            d.  Show that for large values of N, the average number of tracks traversed by a seek
                approaches N/3.
     11.5   The following equation was suggested both for cache memory and disk cache memory:
                                               TS = TC + M * TD
            Generalize this equation to a memory hierarchy with N levels instead of just 2.
     11.6   For the frequency-based replacement algorithm (Figure 11.9), define Fnew, Fmiddle,
            and Fold as the fraction of the cache that comprises the new, middle, and old sections,
            respectively. Clearly, Fnew + Fmiddle + Fold = 1. Characterize the policy when
            a.  Fold  =  1  -  Fnew
            b.  Fold = 1/(cache size)
     11.7   Calculate how much disk space (in sectors, tracks, and surfaces) will be required to
            store 300,000 120-byte logical records if the disk is fixed sector with 512 bytes/
            sector, with 96 sectors/track, 110 tracks per surface, and 8 usable surfaces. Ignore
            any file header record(s) and track indexes, and assume that records cannot span
            two sectors.
     11.8   Consider the disk system described in Problem 11.7, and assume that the disk rotates
            at 360 rpm. A processor reads one sector from the disk using interrupt-driven I/O,
            with one interrupt per byte. If it takes 2.5 s to process each interrupt, what percent-
            age of the time will the processor spend handling I/O (disregard seek time)?
     11.9   Repeat the preceding problem using DMA, and assume one interrupt per sector.
     11.10  A 32-bit computer has two selector channels and one multiplexor channel. Each selec-
            tor channel supports two magnetic disk and two magnetic tape units. The multiplexor

       channel has two line printers, two card readers, and ten VDT terminals connected to
       it. Assume the following transfer rates:
       Disk drive                                800 Kbytes/s
       Magnetic tape drive                       200 Kbytes/s
       Line printer                              6.6 Kbytes/s
       Card reader                               1.2 Kbytes/s
       VDT                                       1 Kbyte/s
       Estimate the maximum aggregate I/O transfer rate in this system.
11.11  It should be clear that disk striping can improve the data transfer rate when the strip
       size is small compared to the I/O request size. It should also be clear that RAID 0
       provides improved performance relative to a single large disk, because multiple I/O
       requests can be handled in parallel. However, in this latter case, is disk striping neces-
       sary? That is, does disk striping improve I/O request rate performance compared to a
       comparable disk array without striping?
11.12  Consider a 4-drive, 200 GB-per-drive RAID array. What is the available data storage
       capacity for each of the RAID levels, 0, 1, 3, 4, 5, and 6?

