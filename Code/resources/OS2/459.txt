SUMMARY
     Input/output is an often neglected, but important, topic.  A substantial fraction
of any operating system is concerned with I/O.  I/O can be accomplished in one of
three ways. First, there is programmed I/O, in which the main CPU inputs or out-
puts each byte or word and sits in a tight loop waiting until it can get or send the
next one. Second, there is interrupt-driven I/O, in which the CPU starts an I/O
transfer for a character or word and goes off to do something else until an interrupt
arrives signaling completion of the I/O.     Third, there is DMA, in which a separate
chip manages the complete transfer of a block of data, given an interrupt only
when the entire block has been transferred.
     I/O can be structured in four levels: the interrupt-service procedures, the device
drivers, the device-independent I/O software, and the I/O libraries and spoolers that
run in user space. The device drivers handle the details of running the devices and
providing uniform interfaces to the rest of the operating system. The device-inde-
pendent I/O software does things like buffering and error reporting.
     Disks come in a variety of types, including magnetic disks, RAIDs, flash
drives, and optical disks.  On rotating disks, disk arm scheduling algorithms can
often be used to improve disk performance, but the presence of virtual geometries
complicates matters.  By pairing two disks, a stable storage medium with certain
useful properties can be constructed.
     Clocks are used for keeping track of the real time, limiting how long processes
can run, handling watchdog timers, and doing accounting.



SEC. 5.10                               