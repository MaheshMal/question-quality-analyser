ANDROID
from being stored in unencrypted form anywhere in the system.         If the password is
correct, the login program looks in /etc/passwd to see the name of the user's pre-
ferred shell, possibly bash, but possibly some other shell such as csh or ksh.             The
login program then uses setuid and setgid to give itself the user's UID and GID
(remember, it started out as SETUID root).  Then it opens the keyboard for stan-
dard input (file descriptor 0), the screen for standard output (file descriptor 1), and
the screen for standard error (file descriptor 2).  Finally, it executes the preferred
shell, thus terminating itself.
     At this point the preferred shell is running with the correct UID and GID and
standard input, output, and error all set to their default devices. All processes that it
forks off (i.e., commands typed by the user) automatically inherit the shell's UID
and GID, so they also will have the correct owner and group. All files they create
also get these values.
     When any process attempts to open a file, the system first checks the protec-
tion bits in the file's i-node against the caller's effective UID and effective GID to
see if the access is permitted. If so, the file is opened and a file descriptor returned.
If not, the file is not opened and -1 is returned. No checks are made on subsequent
read or write calls. As a consequence, if the protection mode changes after a file is
already open, the new mode will not affect processes that already have the file
open.
     The Linux security model and its implementation are essentially the same as in
most other traditional UNIX systems.
10.8 