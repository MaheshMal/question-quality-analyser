History
      In the mid-1980s, Microsoft and IBM cooperated to develop the OS/2 operating
      system, which was written in assembly language for single-processor Intel
      80286 systems. In 1988, Microsoft decided to end the joint effort with IBM
      and develop its own "new technology" (or NT) portable operating system to
      support both the OS/2 and POSIX application-programming interfaces (APIs). In
                                                                                         829



830  Chapter 19  Windows 7
     October 1988, Dave Cutler, the architect of the DEC VAX/VMS operating system,
     was hired and given the charter of building Microsoft's new operating system.
     Originally, the team planned to use the OS/2 API as NT's native environment,
     but during development, NT was changed to use a new 32-bit Windows API
     (called Win32), based on the popular 16-bit API used in Windows 3.0. The first
     versions of NT were Windows NT 3.1 and Windows NT 3.1 Advanced Server.
     (At that time, 16-bit Windows was at Version 3.1.) Windows NT Version 4.0
     adopted the Windows 95 user interface and incorporated Internet web-server
     and web-browser software. In addition, user-interface routines and all graphics
     code were moved into the kernel to improve performance, with the side effect of
     decreased system reliability. Although previous versions of NT had been ported
     to other microprocessor architectures, the Windows 2000 version, released
     in February 2000, supported only Intel (and compatible) processors due to
     marketplace factors. Windows 2000 incorporated significant changes. It added
     Active Directory (an X.500-based directory service), better networking and
     laptop support, support for plug-and-play devices, a distributed file system,
     and support for more processors and more memory.
     In October 2001, Windows XP was released as both an update to the
     Windows 2000 desktop operating system and a replacement for Windows
     95/98. In 2002, the server edition of Windows XP became available (called
     Windows .Net Server). Windows XP updated the graphical user interface
     (GUI) with a visual design that took advantage of more recent hardware
     advances and many new ease-of-use features. Numerous features were added
     to automatically repair problems in applications and the operating system
     itself. As a result of these changes, Windows XP provided better networking and
     device experience (including zero-configuration wireless, instant messaging,
     streaming   media,  and  digital  photography/video),  dramatic   performance
     improvements for both the desktop and large multiprocessors, and better
     reliability and security than earlier Windows operating systems.
     The long-awaited update to Windows XP, called Windows Vista, was
     released in November 2006, but it was not well received. Although Win-
     dows Vista included many improvements that later showed up in Windows
     7, these improvements were overshadowed by Windows Vista's perceived
     sluggishness and compatibility problems. Microsoft responded to criticisms
     of Windows Vista by improving its engineering processes and working more
     closely with the makers of Windows hardware and applications. The result was
     Windows 7, which was released in October 2009, along with corresponding
     server editions of Windows. Among the significant engineering changes is the
     increased use of execution tracing rather than counters or profiling to analyze
     system behavior. Tracing runs constantly in the system, watching hundreds of
     scenarios execute. When one of these scenarios fails, or when it succeeds but
     does not perform well, the traces can be analyzed to determine the cause.
     Windows 7 uses a clientÂ­server architecture (like Mach) to implement two
     operating-system personalities, Win32 and POSIX, with user-level processes
     called subsystems. (At one time, Windows also supported an OS/2 subsystem,
     but it was removed in Windows XP due to the demise of OS/2.) The subsystem
     architecture allows enhancements to be made to one operating-system person-
     ality without affecting the application compatibility of the other. Although the
     POSIX subsystem continues to be available for Windows 7, the Win32 API has
     become very popular, and the POSIX APIs are used by only a few sites. The
     subsystem approach continues to be interesting to study from an operating-
