Summary
                     Java program             class loader                   Java API
                      .class files                                           .class files
                                                   Java
                                              interpreter
                                              host system
                                           (Windows, Linux, etc.)
                              Figure 16.10    The Java virtual machine.
      ensures that the bytecode does not perform pointer arithmetic, which could
      provide illegal memory access. If the class passes verification, it is run by the
      Java interpreter. The JVM also automatically manages memory by performing
      garbage collection --the practice of reclaiming memory from objects no longer
      in use and returning it to the system. Much research focuses on garbage
      collection algorithms for increasing the performance of Java programs in the
      virtual machine.
      The JVM may be implemented in software on top of a host operating
      system, such as Windows, Linux, or Mac OS X, or as part of a Web browser.
      Alternatively, the JVM may be implemented in hardware on a chip specifically
      designed to run Java programs. If the JVM is implemented in software, the
      Java interpreter interprets the bytecode operations one at a time. A faster
      software technique is to use a just-in-time (JIT) compiler. Here, the first time a
      Java method is invoked, the bytecodes for the method are turned into native
      machine language for the host system. These operations are then cached so that
      subsequent invocations of a method are performed using the native machine
      instructions, and the bytecode operations need not be interpreted all over again.
      Running the JVM in hardware is potentially even faster. Here, a special Java
      chip executes the Java bytecode operations as native code, thus bypassing the
      need for either a software interpreter or a just-in-time compiler.
16.8  