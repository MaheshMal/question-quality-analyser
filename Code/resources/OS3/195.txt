Thread Libraries
                                                           user thread
                       k  k  k                          k  kernel thread
                          Figure 4.8  Two-level model.
     create). The many-to-many model suffers from neither of these shortcomings:
     developers can create as many user threads as necessary, and the corresponding
     kernel threads can run in parallel on a multiprocessor. Also, when a thread
     performs a blocking system call, the kernel can schedule another thread for
     execution.
     One variation on the many-to-many model still multiplexes many user-
     level threads to a smaller or equal number of kernel threads but also allows a
     user-level thread to be bound to a kernel thread. This variation is sometimes
     referred to as the two-level model (Figure 4.8). The Solaris operating system
     supported the two-level model in versions older than Solaris 9. However,
     beginning with Solaris 9, this system uses the one-to-one model.
4.4  