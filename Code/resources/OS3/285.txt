Basic Concepts
     In a single-processor system, only one process can run at a time. Others
     must wait until the CPU is free and can be rescheduled. The objective of
     multiprogramming is to have some process running at all times, to maximize
     CPU utilization. The idea is relatively simple. A process is executed until
     it must wait, typically for the completion of some I/O request. In a simple
     computer system, the CPU then just sits idle. All this waiting time is wasted;
     no useful work is accomplished. With multiprogramming, we try to use this
     time productively. Several processes are kept in memory at one time. When
                                                                                       261



262  Chapter 6  CPU Scheduling
                                     ·
                                     ·
                                     ·
                     load store
                     add store                     CPU burst
                     read from file
                               wait for I/O        I/O burst
                     store increment
                     index                         CPU burst
                     write to file
                               wait for I/O        I/O burst
                     load store
                     add store                     CPU burst
                     read from file
                               wait for I/O        I/O burst
                                     ·
                                     ·
                                     ·
                Figure 6.1     Alternating sequence of CPU and I/O bursts.
     one process has to wait, the operating system takes the CPU away from that
     process and gives the CPU to another process. This pattern continues. Every
     time one process has to wait, another process can take over use of the CPU.
     Scheduling  of  this      kind     is  a  fundamental  operating-system  function.
     Almost all computer resources are scheduled before use. The CPU is, of course,
     one of the primary computer resources. Thus, its scheduling is central to
     operating-system design.
     6.1.1  CPU ­ I/O Burst Cycle
     The success of CPU scheduling depends on an observed property of processes:
     process execution consists of a cycle of CPU execution and I/O wait. Processes
     alternate between these two states. Process execution begins with a CPU burst.
     That is followed by an I/O burst, which is followed by another CPU burst, then
     another I/O burst, and so on. Eventually, the final CPU burst ends with a system
     request to terminate execution (Figure 6.1).
     The durations of CPU bursts have been measured extensively. Although
     they vary greatly from process to process and from computer to computer,
     they tend to have a frequency curve similar to that shown in Figure 6.2. The
     curve is generally characterized as exponential or hyperexponential, with a
     large number of short CPU bursts and a small number of long CPU bursts.



                                                    6.1       