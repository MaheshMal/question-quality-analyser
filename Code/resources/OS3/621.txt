Application I/O Interface
      it interferes with system security and stability. The trend in general-purpose
      operating systems is to protect memory and devices so that the system can try
      to guard against erroneous or malicious applications.
      13.2.4     I/O Hardware Summary
      Although the hardware aspects of I/O are complex when considered at the
      level  of  detail    of  electronics-hardware  design,  the  concepts  that     we  have
      just described are sufficient to enable us to understand many I/O features
      of operating systems. Let's review the main concepts:
      ·   A bus
      ·   A controller
      ·   An I/O port and its registers
      ·   The handshaking relationship between the host and a device controller
      ·   The execution of this handshaking in a polling loop or via interrupts
      ·   The offloading of this work to a DMA controller for large transfers
          We gave a basic example of the handshaking that takes place between a
      device controller and the host earlier in this section. In reality, the wide variety
      of available devices poses a problem for operating-system implementers. Each
      kind of device has its own set of capabilities, control-bit definitions, and
      protocols for interacting with the host--and they are all different. How can
      the operating system be designed so that we can attach new devices to the
      computer without rewriting the operating system? And when the devices
      vary so widely, how can the operating system give a convenient, uniform I/O
      interface to applications? We address those questions next.
13.3  