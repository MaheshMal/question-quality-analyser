Recovery
      Files and directories are kept both in main memory and on disk, and care must
      be taken to ensure that a system failure does not result in loss of data or in data
      inconsistency. We deal with these issues in this section. We also consider how
      a system can recover from such a failure.
      A system crash can cause inconsistencies among on-disk file-system data
      structures,  such  as  directory  structures,  free-block  pointers,  and  free         FCB
      pointers. Many file systems apply changes to these structures in place. A
      typical operation, such as creating a file, can involve many structural changes
      within the file system on the disk. Directory structures are modified, FCBs are
      allocated, data blocks are allocated, and the free counts for all of these blocks
      are decreased. These changes can be interrupted by a crash, and inconsistencies
      among the structures can result. For example, the free FCB count might indicate
      that an FCB had been allocated, but the directory structure might not point to
      the FCB. Compounding this problem is the caching that operating systems do
      to optimize I/O performance. Some changes may go directly to disk, while
      others may be cached. If the cached changes do not reach disk before a crash
      occurs, more corruption is possible.
      In addition to crashes, bugs in file-system implementation, disk controllers,
      and even user applications can corrupt a file system. File systems have varying
      methods to deal with corruption, depending on the file-system data structures
      and algorithms. We deal with these issues next.
      12.7.1  Consistency Checking
      Whatever the cause of corruption, a file system must first detect the problems
      and then correct them. For detection, a scan of all the metadata on each file
      system can confirm or deny the consistency of the system. Unfortunately, this
      scan can take minutes or hours and should occur every time the system boots.
      Alternatively, a file system can record its state within the file-system metadata.
      At the start of any metadata change, a status bit is set to indicate that the
      metadata is in flux. If all updates to the metadata complete successfully, the file
      system can clear that bit. If, however, the status bit remains set, a consistency
      checker is run.
      The consistency checker--a systems program such as fsck in UNIX --
      compares the data in the directory structure with the data blocks on disk
      and tries to fix any inconsistencies it finds. The allocation and free-space-
      management algorithms dictate what types of problems the checker can find
      and how successful it will be in fixing them. For instance, if linked allocation is
      used and there is a link from any block to its next block, then the entire file can be



                                                   12.7  