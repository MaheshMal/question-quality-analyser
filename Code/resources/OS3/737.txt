History
                                       INDIRECTION
      "All  problems  in  computer     science  can  be  solved  by  another  level   of
      indirection" -- David Wheeler ". . . except for the problem of too many layers
      of indirection." -- Kevlin Henney
      ·  General-purpose operating systems that provide standard functions as
         well as VMM functions, including Microsoft Windows Server with HyperV
         and RedHat Linux with the KVM feature. Because such systems have a
         feature set similar to type 1 hypervisors, they are also known as type 1.
      ·  Applications that run on standard operating systems but provide VMM
         features to guest operating systems. These applications, which include
         VMware Workstation and Fusion, Parallels Desktop, and Oracle Virtual-
         Box, are type 2 hypervisors.
      ·  Paravirtualization, a technique in which the guest operating system is
         modified to work in cooperation with the VMM to optimize performance.
      ·  Programming-environment virtualization, in which VMMs do not virtu-
         alize real hardware but instead create an optimized virtual system. This
         technique is used by Oracle Java and Microsoft.Net.
      ·  Emulators that allow applications written for one hardware environment
         to run on a very different hardware environment, such as a different type
         of CPU.
      ·  Application containment, which is not virtualization at all but rather
         provides virtualization-like features by segregating applications from the
         operating system. Oracle Solaris Zones, BSD Jails, and IBM AIX WPARs
         "contain" applications, making them more secure and manageable.
         The variety of virtualization techniques in use today is a testament to
      the breadth, depth, and importance of virtualization in modern computing.
      Virtualization is invaluable for data-center operations, efficient application
      development, and software testing, among many other uses.
16.2  