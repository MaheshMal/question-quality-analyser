Memory Management
     is  an  active  entity.  A  single-threaded  process     has  one  program  counter
     specifying the next instruction to execute. (Threads are covered in Chapter
     4.) The execution of such a process must be sequential. The CPU executes one
     instruction of the process after another, until the process completes. Further,
     at any time, one instruction at most is executed on behalf of the process. Thus,
     although two processes may be associated with the same program, they are
     nevertheless considered two separate execution sequences. A multithreaded
     process has multiple program counters, each pointing to the next instruction
     to execute for a given thread.
         A process is the unit of work in a system. A system consists of a collection
     of processes, some of which are operating-system processes (those that execute
     system code) and the rest of which are user processes (those that execute
     user    code).  All  these  processes  can  potentially  execute   concurrently -- by
     multiplexing on a single CPU, for example.
         The operating system is responsible for the following activities in connec-
     tion with process management:
     ·     Scheduling processes and threads on the CPUs
     ·     Creating and deleting both user and system processes
     ·     Suspending and resuming processes
     ·     Providing mechanisms for process synchronization
     ·     Providing mechanisms for process communication
     We discuss process-management techniques in Chapters 3 through 5.
1.7  