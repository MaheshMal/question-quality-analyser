Deadlock Detection
     The content of the matrix Need is defined to be Max - Allocation and is as
     follows:
                                                 Need
                                                 ABC
                                            P0   743
                                            P1   122
                                            P2   600
                                            P3   011
                                            P4   431
        We claim that the system is currently in a safe state. Indeed, the sequence
     < P1 ,  P3,  P4,  P2,  P0>  satisfies  the  safety  criteria.  Suppose  now  that  process
     P1 requests one additional instance of resource type A and two instances of
     resource type C, so Req uest1 = (1,0,2). To decide whether this request can be
     immediately granted, we first check that Req uest1  Available--that is, that
     (1,0,2)  (3,3,2), which is true. We then pretend that this request has been
     fulfilled, and we arrive at the following new state:
                                 Allocation      Need         Available
                                 ABC             ABC                ABC
                            P0   010             743                230
                            P1   302             020
                            P2   302             600
                            P3   211             011
                            P4   002             431
        We must determine whether this new system state is safe. To do so, we
     execute our safety algorithm and find that the sequence <P1, P3, P4, P0, P2>
     satisfies the safety requirement. Hence, we can immediately grant the request
     of process P1.
        You should be able to see, however, that when the system is in this state, a
     request for (3,3,0) by P4 cannot be granted, since the resources are not available.
     Furthermore, a request for (0,2,0) by P0 cannot be granted, even though the
     resources are available, since the resulting state is unsafe.
        We leave it as a programming exercise for students to implement the
     banker's algorithm.
7.6  