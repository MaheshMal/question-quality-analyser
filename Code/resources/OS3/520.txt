Summary
      Disk drives are the major secondary storage I/O devices on most computers.
      Most secondary storage devices are either magnetic disks or magnetic tapes,
      although solid-state disks are growing in importance. Modern disk drives are
      structured as large one-dimensional arrays of logical disk blocks. Generally,
      these logical blocks are 512 bytes in size. Disks may be attached to a computer
      system in one of two ways: (1) through the local I/O ports on the host computer
      or (2) through a network connection.
           Requests for disk I/O are generated by the file system and by the virtual
      memory system. Each request specifies the address on the disk to be referenced,
      in the form of a logical block number. Disk-scheduling algorithms can improve
      the  effective  bandwidth,   the  average  response  time,   and  the   variance   in
      response time. Algorithms such as SSTF, SCAN, C-SCAN, LOOK, and C-LOOK
      are designed to make such improvements through strategies for disk-queue
      ordering.   Performance  of  disk-scheduling  algorithms     can  vary  greatly    on
      magnetic disks. In contrast, because solid-state disks have no moving parts,
      performance varies little among algorithms, and quite often a simple FCFS
      strategy is used.
           Performance can be harmed by external fragmentation. Some systems
      have utilities that scan the file system to identify fragmented files; they then
      move blocks around to decrease the fragmentation. Defragmenting a badly
      fragmented file system can significantly improve performance, but the system
      may have reduced performance while the defragmentation is in progress.
      Sophisticated file systems, such as the UNIX Fast File System, incorporate
      many strategies to control fragmentation during space allocation so that disk
      reorganization is not needed.
           The operating system manages the disk blocks. First, a disk must be low-
      level-formatted to create the sectors on the raw hardware --new disks usually
      come preformatted. Then, the disk is partitioned, file systems are created, and



                                                       Practice Exercises           497
boot blocks are allocated to store the system's bootstrap program. Finally, when
a block is corrupted, the system must have a way to lock out that block or to
replace it logically with a spare.
Because an efficient swap space is a key to good performance, systems
usually bypass the file system and use raw-disk access for paging I/O. Some
systems dedicate a raw-disk partition to swap space, and others use a file
within the file system instead. Still other systems allow the user or system
administrator to make the decision by providing both options.
Because of the amount of storage required on large systems, disks are
frequently made redundant via RAID algorithms. These algorithms allow more
than one disk to be used for a given operation and allow continued operation
and even automatic recovery in the face of a disk failure. RAID algorithms
are organized into different levels; each level provides some combination of
reliability and high transfer rates.
Practice Exercises
10.1  Is disk scheduling, other than FCFS scheduling, useful in a single-user
      environment? Explain your answer.
10.2  Explain why SSTF scheduling tends to favor middle cylinders over the
      innermost and outermost cylinders.
10.3  Why is rotational latency usually not considered in disk scheduling?
      How would you modify SSTF, SCAN, and C-SCAN to include latency
      optimization?
10.4  Why is it important to balance file-system I/O among the disks and
      controllers on a system in a multitasking environment?
10.5  What are the tradeoffs involved in rereading code pages from the file
      system versus using swap space to store them?
10.6  Is there any way to implement truly stable storage? Explain your
      answer.
10.7  It is sometimes said that tape is a sequential-access medium, whereas
      a magnetic disk is a random-access medium. In fact, the suitability
      of a storage device for random access depends on the transfer size.
      The term "streaming transfer rate" denotes the rate for a data transfer
      that is underway, excluding the effect of access latency. In contrast,
      the "effective transfer rate" is the ratio of total bytes per total seconds,
      including overhead time such as access latency.
      Suppose we have a computer with the following characteristics: the
      level-2 cache has an access latency of 8 nanoseconds and a streaming
      transfer rate of 800 megabytes per second, the main memory has an
      access latency of 60 nanoseconds and a streaming transfer rate of 80
      megabytes per second, the magnetic disk has an access latency of 15
      milliseconds and a streaming transfer rate of 5 megabytes per second,
      and a tape drive has an access latency of 60 seconds and a streaming
      transfer rate of 2 megabytes per second.



498  Chapter 10  Mass-Storage Structure
            a.    Random access causes the effective transfer rate of a device to
                  decrease, because no data are transferred during the access time.
                  For the disk described, what is the effective transfer rate if an
                  average access is followed by a streaming transfer of (1) 512 bytes,
                  (2) 8 kilobytes, (3) 1 megabyte, and (4) 16 megabytes?
            b.    The utilization of a device is the ratio of effective transfer rate to
                  streaming transfer rate. Calculate the utilization of the disk drive
                  for each of the four transfer sizes given in part a.
            c.    Suppose that a utilization of 25 percent (or higher) is considered
                  acceptable. Using the performance figures given, compute the
                  smallest transfer size for disk that gives acceptable utilization.
            d.    Complete     the  following     sentence:  A  disk     is a random-access
                  device for transfers larger than              bytes    and is a sequential-
                  access device for smaller transfers.
            e.    Compute the minimum transfer sizes that give acceptable utiliza-
                  tion for cache, memory, and tape.
            f.    When     is  a  tape  a  random-access        device,  and     when  is   it  a
                  sequential-access device?
     10.8   Could a RAID level 1 organization achieve better performance for read
            requests than a RAID level 0 organization (with nonredundant striping
            of data)? If so, how?
Exercises
     10.9   None  of    the  disk-scheduling      disciplines,  except   FCFS,   is  truly  fair
            (starvation may occur).
            a.    Explain why this assertion is true.
            b.    Describe a way to modify algorithms such as SCAN to ensure
                  fairness.
            c.    Explain    why    fairness  is  an  important  goal    in   a  time-sharing
                  system.
            d.    Give three or more examples of circumstances in which it is
                  important that the operating system be unfair in serving I/O
                  requests.
     10.10  Explain why SSDs often use an FCFS disk-scheduling algorithm.
     10.11  Suppose that a disk drive has 5,000 cylinders, numbered 0 to 4,999. The
            drive is currently serving a request at cylinder 2,150, and the previous
            request was at cylinder 1,805. The queue of pending requests, in FIFO
            order, is:
                  2,069, 1,212, 2,296, 2,800, 544, 1,618, 356, 1,523, 4,965, 3681



                                                                           Exercises     499
       Starting from the current head position, what is the total distance (in
       cylinders) that the disk arm moves to satisfy all the pending requests
       for each of the following disk-scheduling algorithms?
       a.     FCFS
       b.     SSTF
       c.     SCAN
       d.     LOOK
       e.     C-SCAN
       f.     C-LOOK
10.12  Elementary physics states that when an object is subjected to a constant
       acceleration a, the relationship between distance d and time t is given
       by  d  =  1  a  t2  .  Suppose  that,  during  a  seek,  the  disk  in  Exercise  10.11
                 2
       accelerates the disk arm at a constant rate for the first half of the seek,
       then decelerates the disk arm at the same rate for the second half of the
       seek. Assume that the disk can perform a seek to an adjacent cylinder
       in 1 millisecond and a full-stroke seek over all 5,000 cylinders in 18
       milliseconds.
       a.     The distance of a seek is the number of cylinders over which the
              head moves. Explain why the seek time is proportional to the
              square root of the seek distance.
       b.     Write an equation for the seek time as a function of the seek
              distance. This equation should be of the form t = x + y             L, where
              t is the time in milliseconds and L is the seek distance in cylinders.
       c.     Calculate the total seek time for each of the schedules in Exercise
              10.11. Determine which schedule is the fastest (has the smallest
              total seek time).
       d.     The percentage speedup is the time saved divided by the original
              time. What is the percentage speedup of the fastest schedule over
              FCFS?
10.13  Suppose that the disk in Exercise 10.12 rotates at 7,200 RPM.
       a.     What is the average rotational latency of this disk drive?
       b.     What seek distance can be covered in the time that you found for
              part a?
10.14  Describe     some      advantages      and  disadvantages     of    using  SSDs   as  a
       caching tier and as a disk-drive replacement compared with using only
       magnetic disks.
10.15  Compare the performance of C-SCAN and SCAN scheduling, assuming
       a uniform distribution of requests. Consider the average response time
       (the time between the arrival of a request and the completion of that
       request's service), the variation in response time, and the effective



500  Chapter 10  Mass-Storage Structure
            bandwidth. How does performance depend on the relative sizes of
            seek time and rotational latency?
     10.16  Requests are not usually uniformly distributed. For example, we can
            expect a cylinder containing the file-system metadata to be accessed
            more frequently than a cylinder containing only files. Suppose you
            know that 50 percent of the requests are for a small, fixed number of
            cylinders.
            a.   Would any of the scheduling algorithms discussed in this chapter
                 be particularly good for this case? Explain your answer.
            b.   Propose a disk-scheduling algorithm that gives even better per-
                 formance by taking advantage of this "hot spot" on the disk.
     10.17  Consider a RAID level 5 organization comprising five disks, with the
            parity for sets of four blocks on four disks stored on the fifth disk. How
            many blocks are accessed in order to perform the following?
            a.   A write of one block of data
            b.   A write of seven continuous blocks of data
     10.18  Compare the throughput achieved by a RAID level 5 organization with
            that achieved by a RAID level 1 organization for the following:
            a.   Read operations on single blocks
            b.   Read operations on multiple contiguous blocks
     10.19  Compare the performance of write operations achieved by a RAID level
            5 organization with that achieved by a RAID level 1 organization.
     10.20  Assume that you have a mixed configuration comprising disks orga-
            nized as RAID level 1 and RAID level 5 disks. Assume that the system
            has flexibility in deciding which disk organization to use for storing a
            particular file. Which files should be stored in the RAID level 1 disks
            and which in the RAID level 5 disks in order to optimize performance?
     10.21  The reliability of a hard-disk drive is typically described in terms of
            a quantity called mean time between failures (MTBF). Although this
            quantity is called a "time," the MTBF actually is measured in drive-hours
            per failure.
            a.   If a system contains 1,000 disk drives, each of which has a 750,000-
                 hour MTBF, which of the following best describes how often a
                 drive failure will occur in that disk farm: once per thousand years,
                 once per century, once per decade, once per year, once per month,
                 once per week, once per day, once per hour, once per minute, or
                 once per second?
            b.   Mortality statistics indicate that, on the average, a U.S. resident
                 has about 1 chance in 1,000 of dying between the ages of 20 and 21.
                 Deduce the MTBF hours for 20-year-olds. Convert this figure from
                 hours to years. What does this MTBF tell you about the expected
                 lifetime of a 20-year-old?



                                                     Bibliographical Notes          501
       c.      The manufacturer guarantees a 1-million-hour MTBF for a certain
               model of disk drive. What can you conclude about the number of
               years for which one of these drives is under warranty?
10.22  Discuss the relative advantages and disadvantages of sector sparing
       and sector slipping.
10.23  Discuss the reasons why the operating system might require accurate
       information on how blocks are stored on a disk. How could the oper-
       ating system improve file-system performance with this knowledge?
Programming Problems
10.24  Write a program that implements the following disk-scheduling algo-
       rithms:
       a.      FCFS
       b.      SSTF
       c.      SCAN
       d.      C-SCAN
       e.      LOOK
       f.      C-LOOK
       Your program will service a disk with 5,000 cylinders numbered 0 to
       4,999. The program will generate a random series of 1,000 cylinder
       requests and service them according to each of the algorithms listed
       above. The program will be passed the initial position of the disk head
       (as a parameter on the command line) and report the total amount of
       head movement required by each algorithm.
Bibliographical Notes
[Services (2012)] provides an overview of data storage in a variety of modern
computing      environments.   [Teorey  and  Pinkerton  (1972)]  present    an  early
comparative analysis of disk-scheduling algorithms using simulations that
model a disk for which seek time is linear in the number of cylinders crossed.
Scheduling optimizations that exploit disk idle times are discussed in [Lumb
et al. (2000)]. [Kim et al. (2009)] discusses disk-scheduling algorithms for SSDs.
Discussions of redundant arrays of independent disks (RAIDs) are pre-
sented by [Patterson et al. (1988)].
[Russinovich and Solomon (2009)], [McDougall and Mauro (2007)], and
[Love  (2010)]  discuss  file  system   details  in  Windows,  Solaris,  and  Linux,
respectively.
The I/O size and randomness of the workload influence disk performance
considerably. [Ousterhout et al. (1985)] and [Ruemmler and Wilkes (1993)]
report numerous interesting workload characteristics--for example, most files
are small, most newly created files are deleted soon thereafter, most files that



502  Chapter 10     Mass-Storage Structure
     are opened for reading are read sequentially in their entirety, and most seeks
     are short.
     The concept of a storage hierarchy has been studied for more than forty
     years.  For  instance,     a   1970  paper  by  [Mattson      et  al.  (1970)]  describes   a
     mathematical approach to predicting the performance of a storage hierarchy.
Bibliography
     [Kim et al. (2009)]      J. Kim, Y. Oh, E. Kim, J. C. D. Lee, and S. Noh, "Disk schedulers
     for solid state drivers" (2009), pages 295­304.
     [Love (2010)]      R. Love, Linux Kernel Development, Third Edition, Developer's
     Library (2010).
     [Lumb et al. (2000)]       C.  Lumb,  J.  Schindler,  G.  R.  Ganger,  D.  F.   Nagle,  and
     E. Riedel, "Towards Higher Disk Head Utilization: Extracting Free Bandwidth
     From Busy Disk Drives", Symposium on Operating Systems Design and Implemen-
     tation (2000).
     [Mattson et al. (1970)]        R. L. Mattson, J. Gecsei, D. R. Slutz, and I. L. Traiger,
     "Evaluation Techniques for Storage Hierarchies", IBM Systems Journal, Volume
     9, Number 2 (1970), pages 78­117.
     [McDougall and Mauro (2007)]          R. McDougall and J. Mauro, Solaris Internals,
     Second Edition, Prentice Hall (2007).
     [Ousterhout et al. (1985)]     J. K. Ousterhout, H. D. Costa, D. Harrison, J. A. Kunze,
     M. Kupfer, and J. G. Thompson, "A Trace-Driven Analysis of the UNIX 4.2 BSD
     File System", Proceedings of the ACM Symposium on Operating Systems Principles
     (1985), pages 15­24.
     [Patterson et al. (1988)]      D. A. Patterson, G. Gibson, and R. H. Katz, "A Case
     for Redundant Arrays of Inexpensive Disks (RAID)", Proceedings of the ACM
     SIGMOD International Conference on the Management of Data (1988), pages 109­
     116.
     [Ruemmler and Wilkes (1993)]          C. Ruemmler and J. Wilkes, "Unix Disk Access
     Patterns", Proceedings of the Winter USENIX Conference (1993), pages 405­420.
     [Russinovich and Solomon (2009)]            M. E. Russinovich and D. A. Solomon, Win-
     dows Internals: Including Windows Server 2008 and Windows Vista, Fifth Edition,
     Microsoft Press (2009).
     [Services (2012)]     E. E. Services, Information Storage and Management: Storing,
     Managing, and Protecting Digital Information in Classic, Virtualized, and Cloud
     Environments, Wiley (2012).
     [Teorey and Pinkerton (1972)]         T. J. Teorey and T. B. Pinkerton, "A Comparative
     Analysis of Disk Scheduling Policies", Communications of the ACM, Volume 15,
     Number 3 (1972), pages 177­184.
