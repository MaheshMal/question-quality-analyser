Kernel I/O Subsystem
      Kernels provide many services related to I/O. Several services--scheduling,
      buffering,  caching,  spooling,  device  reservation,  and   error  handling -- are
      provided by the kernel's I/O subsystem and build on the hardware and device-
      driver infrastructure. The I/O subsystem is also responsible for protecting itself
      from errant processes and malicious users.
      13.4.1  I/O Scheduling
      To schedule a set of I/O requests means to determine a good order in which to
      execute them. The order in which applications issue system calls rarely is the
      best choice. Scheduling can improve overall system performance, can share
      device access fairly among processes, and can reduce the average waiting time
      for I/O to complete. Here is a simple example to illustrate. Suppose that a disk
      arm is near the beginning of a disk and that three applications issue blocking
      read calls to that disk. Application 1 requests a block near the end of the disk,
      application 2 requests one near the beginning, and application 3 requests one
      in the middle of the disk. The operating system can reduce the distance that the
      disk arm travels by serving the applications in the order 2, 3, 1. Rearranging
      the order of service in this way is the essence of I/O scheduling.
      Operating-system developers implement scheduling by maintaining a wait
      queue of requests for each device. When an application issues a blocking I/O
      system call, the request is placed on the queue for that device. The I/O scheduler
      rearranges the order of the queue to improve the overall system efficiency
      and the average response time experienced by applications. The operating
      system may also try to be fair, so that no one application receives especially
      poor service, or it may give priority service for delay-sensitive requests. For
      instance, requests from the virtual memory subsystem may take priority over
      application requests. Several scheduling algorithms for disk I/O are detailed
      in Section 10.4.
      When a kernel supports asynchronous I/O, it must be able to keep track
      of many I/O requests at the same time. For this purpose, the operating system
      might attach the wait queue to a device-status table. The kernel manages this
      table, which contains an entry for each I/O device, as shown in Figure 13.9.



                                               13.4        