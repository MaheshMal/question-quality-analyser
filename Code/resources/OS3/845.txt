Security
       representing multiple destinations. The FIB is organized as a set of hash tables
       indexed by destination address; the tables representing the most specific routes
       are always searched first. Successful lookups from this table are added to
       the route-caching table, which caches routes only by specific destination. No
       wildcards are stored in the cache, so lookups can be made quickly. An entry in
       the route cache expires after a fixed period with no hits.
               At various stages, the IP software passes packets to a separate section
       of code for firewall management--selective filtering of packets according
       to  arbitrary  criteria,  usually  for  security  purposes.  The    firewall  manager
       maintains a number of separate firewall chains and allows a skbuff to be
       matched against any chain. Chains are reserved for separate purposes: one is
       used for forwarded packets, one for packets being input to this host, and one
       for data generated at this host. Each chain is held as an ordered list of rules,
       where a rule specifies one of a number of possible firewall-decision functions
       plus some arbitrary data for matching purposes.
               Two other functions performed by the IP driver are disassembly and
       reassembly of large packets. If an outgoing packet is too large to be queued to
       a device, it is simply split up into smaller fragments, which are all queued to
       the driver. At the receiving host, these fragments must be reassembled. The IP
       driver maintains an ipfrag object for each fragment awaiting reassembly and
       an ipq for each datagram being assembled. Incoming fragments are matched
       against each known ipq. If a match is found, the fragment is added to it;
       otherwise, a new ipq is created. Once the final fragment has arrived for a
       ipq, a completely new skbuff is constructed to hold the new packet, and this
       packet is passed back into the IP driver.
               Packets identified by the IP as destined for this host are passed on to one
       of the other protocol drivers. The UDP and TCP protocols share a means of
       associating packets with source and destination sockets: each connected pair
       of sockets is uniquely identified by its source and destination addresses and
       by the source and destination port numbers. The socket lists are linked to
       hash tables keyed on these four address and port values for socket lookup on
       incoming packets. The TCP protocol has to deal with unreliable connections, so
       it maintains ordered lists of unacknowledged outgoing packets to retransmit
       after a timeout and of incoming out-of-order packets to be presented to the
       socket when the missing data have arrived.
18.11  