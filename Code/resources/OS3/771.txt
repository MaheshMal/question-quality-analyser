Network Structure
      17.2.2.3  Process Migration
      A logical extension of computation migration is process migration. When a
      process is submitted for execution, it is not always executed at the site at which
      it is initiated. The entire process, or parts of it, may be executed at different
      sites. This scheme may be used for several reasons:
      ·  Load balancing. The processes (or subprocesses) may be distributed across
         the network to even the workload.
      ·  Computation speedup. If a single process can be divided into a number
         of subprocesses that can run concurrently on different sites, then the total
         process turnaround time can be reduced.
      ·  Hardware preference. The process may have characteristics that make it
         more suitable for execution on some specialized processor (such as matrix
         inversion on an array processor) rather than on a microprocessor.
      ·  Software preference. The process may require software that is available
         at only a particular site, and either the software cannot be moved, or it is
         less expensive to move the process.
      ·  Data access. Just as in computation migration, if the data being used in the
         computation are numerous, it may be more efficient to have a process run
         remotely than to transfer all the data.
         We use two complementary techniques to move processes in a computer
      network. In the first, the system can attempt to hide the fact that the process has
      migrated from the client. The client then need not code her program explicitly
      to accomplish the migration. This method is usually employed for achieving
      load balancing and computation speedup among homogeneous systems, as
      they do not need user input to help them execute programs remotely.
         The other approach is to allow (or require) the user to specify explicitly
      how the process should migrate. This method is usually employed when the
      process must be moved to satisfy a hardware or software preference.
         You have probably realized that the World Wide Web has many aspects of
      a distributed computing environment. Certainly it provides data migration
      (between  a  web  server  and  a  web   client).  It    also  provides  computation
      migration. For instance, a web client could trigger a database operation on
      a web server. Finally, with Java, Javascript, and similar languages, it provides
      a form of process migration: Java applets and Javascript scripts are sent from
      the server to the client, where they are executed. A network operating system
      provides most of these features, but a distributed operating system makes them
      seamless and easily accessible. The result is a powerful and easy-to-use facility
      --one of the reasons for the huge growth of the World Wide Web.
17.3  