Operations on Processes
                           MULTITASKING IN MOBILE SYSTEMS
     Because of the constraints imposed on mobile devices, early versions of iOS
     did not provide user-application multitasking; only one application runs in
     the foreground and all other user applications are suspended. Operating-
     system tasks were multitasked because they were written by Apple and well
     behaved. However, beginning with iOS 4, Apple now provides a limited
     form of multitasking for user applications, thus allowing a single foreground
     application to run concurrently with multiple background applications. (On
     a mobile device, the foreground application is the application currently
     open and appearing on the display. The background application remains
     in memory, but does not occupy the display screen.) The iOS 4 programming
     API provides support for multitasking, thus allowing a process to run in
     the background without being suspended. However, it is limited and only
     available for a limited number of application types, including applications
     ·    running a single, finite-length task (such as completing a download of
          content from a network);
     ·    receiving  notifications   of  an  event     occurring  (such  as  a  new  email
          message);
     ·    with long-running background tasks (such as an audio player.)
          Apple probably limits multitasking due to battery life and memory use
     concerns. The CPU certainly has the features to support multitasking, but
     Apple chooses to not take advantage of some of them in order to better
     manage resource use.
          Android does not place such constraints on the types of applications that
     can run in the background. If an application requires processing while in
     the background, the application must use a service, a separate application
     component       that  runs  on  behalf  of   the  background  process.     Consider  a
     streaming audio application: if the application moves to the background, the
     service continues to send audio files to the audio device driver on behalf of
     the background application. In fact, the service will continue to run even if the
     background application is suspended. Services do not have a user interface
     and have a small memory footprint, thus providing an efficient technique for
     multitasking in a mobile environment.
3.3  