Free-Space Management
          Indexed allocation is more complex. If the index block is already in memory,
      then the access can be made directly. However, keeping the index block in
      memory requires considerable space. If this memory space is not available,
      then we may have to read first the index block and then the desired data
      block. For a two-level index, two index-block reads might be necessary. For an
      extremely large file, accessing a block near the end of the file would require
      reading in all the index blocks before the needed data block finally could
      be read. Thus, the performance of indexed allocation depends on the index
      structure, on the size of the file, and on the position of the block desired.
          Some systems combine contiguous allocation with indexed allocation by
      using contiguous allocation for small files (up to three or four blocks) and
      automatically switching to an indexed allocation if the file grows large. Since
      most files are small, and contiguous allocation is efficient for small files, average
      performance can be quite good.
          Many other optimizations are in use. Given the disparity between CPU
      speed   and  disk  speed,  it  is  not  unreasonable  to  add  thousands       of  extra
      instructions to the operating system to save just a few disk-head movements.
      Furthermore, this disparity is increasing over time, to the point where hundreds
      of  thousands  of  instructions    could  reasonably  be  used  to  optimize       head
      movements.
12.5  