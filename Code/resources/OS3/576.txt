Directory Implementation
      The selection of directory-allocation and directory-management algorithms
      significantly  affects  the  efficiency,  performance,    and  reliability  of  the    file
      system. In this section, we discuss the trade-offs involved in choosing one
      of these algorithms.
      12.3.1  Linear List
      The simplest method of implementing a directory is to use a linear list of file
      names with pointers to the data blocks. This method is simple to program
      but time-consuming to execute. To create a new file, we must first search the
      directory to be sure that no existing file has the same name. Then, we add a
      new entry at the end of the directory. To delete a file, we search the directory for
      the named file and then release the space allocated to it. To reuse the directory
      entry, we can do one of several things. We can mark the entry as unused (by
      assigning it a special name, such as an all-blank name, or by including a usedÂ­
      unused bit in each entry), or we can attach it to a list of free directory entries. A
      third alternative is to copy the last entry in the directory into the freed location
      and to decrease the length of the directory. A linked list can also be used to
      decrease the time required to delete a file.
      The real disadvantage of a linear list of directory entries is that finding a
      file requires a linear search. Directory information is used frequently, and users
      will notice if access to it is slow. In fact, many operating systems implement a
      software cache to store the most recently used directory information. A cache
      hit avoids the need to constantly reread the information from disk. A sorted
      list allows a binary search and decreases the average search time. However, the
      requirement that the list be kept sorted may complicate creating and deleting
      files, since we may have to move substantial amounts of directory information
      to maintain a sorted directory. A more sophisticated tree data structure, such
      as a balanced tree, might help here. An advantage of the sorted list is that a
      sorted directory listing can be produced without a separate sort step.
      12.3.2  Hash Table
      Another data structure used for a file directory is a hash table. Here, a linear
      list stores the directory entries, but a hash data structure is also used. The hash
      table takes a value computed from the file name and returns a pointer to the file
