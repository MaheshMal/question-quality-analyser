RC 4000
20.5  THE
      The THE operating system was designed at the Technische Hogeschool in
      Eindhoven in the Netherlands in the mid-1960's. It was a batch system running
      on a Dutch computer, the EL X8, with 32 KB of 27-bit words. The system was
      mainly noted for its clean design, particularly its layer structure, and its use of
      a set of concurrent processes employing semaphores for synchronization.
            Unlike the processes in the XDS-940 system, the set of processes in the
      THE system was static. The operating system itself was designed as a set of
      cooperating processes. In addition, five user processes were created that served
      as the active agents to compile, execute, and print user programs. When one
      job was finished, the process would return to the input queue to select another
      job.
            A priority CPU-scheduling algorithm was used. The priorities were recom-
      puted every 2 seconds and were inversely proportional to the amount of CPU
      time used recently (in the last 8 to 10 seconds). This scheme gave higher priority
      to I/O-bound processes and to new processes.
            Memory management was limited by the lack of hardware support. How-
      ever, since the system was limited and user programs could be written only in
      Algol, a software paging scheme was used. The Algol compiler automatically
      generated calls to system routines, which made sure the requested information
      was in memory, swapping if necessary. The backing store was a 512-KB-word
      drum. A 512-word page was used, with an LRU page-replacement strategy.
            Another major concern of the THE system was deadlock control. The
      banker's algorithm was used to provide deadlock avoidance.
            Closely related to the THE system is the Venus system. The Venus system
      was also a layer-structured design, using semaphores to synchronize processes.
      The lower levels of the design were implemented in microcode, however,
      providing a much faster system. Paged-segmented memory was used for
      memory management. In addition, the system was designed as a time-sharing
      system, rather than a batch system.
20.6  