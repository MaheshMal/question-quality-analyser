Overview
      The fundamental idea behind a virtual machine is to abstract the hardware
      of a single computer (the CPU, memory, disk drives, network interface cards,
      and so forth) into several different execution environments, thereby creating
      the illusion that each separate environment is running on its own private
      computer. This concept may seem similar to the layered approach of operating
      system implementation (see Section 2.7.2), and in some ways it is. In the case of
      virtualization, there is a layer that creates a virtual system on which operating
      systems or applications can run.
                                                                                         711



712  Chapter 16  Virtual Machines
        Virtual machine implementations involve several components. At the base
     is the host, the underlying hardware system that runs the virtual machines.
     The virtual machine manager (VMM) (also known as a hypervisor) creates and
     runs virtual machines by providing an interface that is identical to the host
     (except in the case of paravirtualization, discussed later). Each guest process
     is provided with a virtual copy of the host (Figure 16.1). Usually, the guest
     process is in fact an operating system. A single physical machine can thus run
     multiple operating systems concurrently, each in its own virtual machine.
        Take a moment to note that with virtualization, the definition of "operating
     system" once again blurs. For example, consider VMM software such as VMware
     ESX. This virtualization software is installed on the hardware, runs when the
     hardware boots, and provides services to applications. The services include
     traditional ones, such as scheduling and memory management, along with
     new types, such as migration of applications between systems. Furthermore,
     the applications are in fact guest operating systems. Is the VMware ESX VMM
     an operating system that, in turn, runs other operating systems? Certainly it
     acts like an operating system. For clarity, however, we call the component that
     provides virtual environments a VMM.
        The implementation of VMMs varies greatly. Options include the following:
     ·  Hardware-based solutions that provide support for virtual machine cre-
        ation and management via firmware. These VMMs, which are commonly
        found in mainframe and large to midsized servers, are generally known
        as type 0 hypervisors. IBM LPARs and Oracle LDOMs are examples.
     ·  Operating-system-like software built to provide virtualization, including
        VMware ESX(mentioned above), Joyent SmartOS, and Citrix XenServer.
        These VMMs are known as type 1 hypervisors.
                                              processes
                                                         processes
        processes                                                         processes
                                 programming  kernel     kernel           kernel
                                 interface
                 kernel                       VM1        VM2              VM3
                                                         virtual machine
                                                         manager
        hardware                                         hardware
                 (a)                                     (b)
        Figure 16.1      System  models. (a) Nonvirtual machine. (b) Virtual machine.
