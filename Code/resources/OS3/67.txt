Open-Source Operating Systems
      1.11.8  Real-Time Embedded Systems
      Embedded computers are the most prevalent form of computers in existence.
      These devices are found everywhere, from car engines and manufacturing
      robots to DVDs and microwave ovens. They tend to have very specific tasks.
      The systems they run on are usually primitive, and so the operating systems
      provide limited features. Usually, they have little or no user interface, preferring
      to spend their time monitoring and managing hardware devices, such as
      automobile engines and robotic arms.
            These embedded systems vary considerably. Some are general-purpose
      computers,   running  standard     operating  systems -- such  as  Linux -- with
      special-purpose applications to implement the functionality. Others are hard-
      ware devices with a special-purpose embedded operating system providing
      just the functionality desired. Yet others are hardware devices with application-
      specific integrated circuits (ASICs) that perform their tasks without an operat-
      ing system.
            The use of embedded systems continues to expand. The power of these
      devices, both as standalone units and as elements of networks and the web,
      is sure to increase as well. Even now, entire houses can be computerized, so
      that a central computer--either a general-purpose computer or an embedded
      system--can control heating and lighting, alarm systems, and even coffee
      makers. Web access can enable a home owner to tell the house to heat up
      before she arrives home. Someday, the refrigerator can notify the grocery store
      when it notices the milk is gone.
            Embedded systems almost always run real-time operating systems. A
      real-time system is used when rigid time requirements have been placed on
      the operation of a processor or the flow of data; thus, it is often used as a
      control device in a dedicated application. Sensors bring data to the computer.
      The computer must analyze the data and possibly adjust controls to modify
      the sensor inputs. Systems that control scientific experiments, medical imaging
      systems, industrial control systems, and certain display systems are real-
      time systems. Some automobile-engine fuel-injection systems, home-appliance
      controllers, and weapon systems are also real-time systems.
            A real-time system has well-defined, fixed time constraints. Processing
      must be done within the defined constraints, or the system will fail. For
      instance, it would not do for a robot arm to be instructed to halt after it had
      smashed into the car it was building. A real-time system functions correctly
      only if it returns the correct result within its time constraints. Contrast this
      system with a time-sharing system, where it is desirable (but not mandatory)
      to respond quickly, or a batch system, which may have no time constraints at
      all.
            In Chapter 6, we consider the scheduling facility needed to implement
      real-time functionality in an operating system. In Chapter 9, we describe the
      design of memory management for real-time computing. Finally, in Chapters
      18 and 19, we describe the real-time components of the Linux and Windows 7
      operating systems.
1.12  