here is another well known problem in algorithmics. given n items of known weights w w . . . wn and values v v . . . vn and a knapsack of capacity w find the most valuable subset of the items that fit into the knapsack. if you do not like the idea of putting yourself in the shoes of a thief who wants to steal the most a b c d to ur l e ng th a b c d a i a b d c a i optimal a c b d a i a c d b a i optimal a d b c a i a d c b a i figure . solution to a small instance of the traveling salesman problem by exhaustive search. valuable loot that fits into his knapsack think about a transport plane that has to deliver the most valuable set of items to a remote location without exceeding the plane's capacity. figure . a presents a small instance of the knapsack problem. the exhaustive search approach to this problem leads to generating all the subsets of the set of n items given computing the total weight of each subset in order to identify feasible subsets i.e. the ones with the total weight not exceeding the knapsack capacity and finding a subset of the largest value among them. as an example the solution to the instance of figure . a is given in figure . b. since the number of subsets of an n element set is n the exhaustive search leads to a n algorithm no matter how efficiently individual subsets are generated. thus for both the traveling salesman and knapsack problems considered above exhaustive search leads to algorithms that are extremely inefficient on every input. in fact these two problems are the best known examples of socalled np hard problems. no polynomial time algorithm is known for any nphard problem. moreover most computer scientists believe that such algorithms do not exist although this very important conjecture has never been proven. more sophisticated approaches backtracking and branch and bound see sections . and . enable us to solve some but not all instances of these and w w w w v v v v knapsack item item item item a subset total weight total value not feasible not feasible not feasible not feasible not feasible not feasible not feasible b figure . a instance of the knapsack problem. b its solution by exhaustive search. the information about the optimal selection is in bold. similar problems in less than exponential time. alternatively we can use one of many approximation algorithms such as those described in section . . 