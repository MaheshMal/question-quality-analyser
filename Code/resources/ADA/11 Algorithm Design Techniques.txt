now with all the components of the algorithmic problem solving in place how do you design an algorithm to solve a given problem? this is the main question this book seeks to answer by teaching you several general design techniques. what is an algorithm design technique? an algorithm design technique or strategy or paradigm is a general approach to solving problems algorithmically that is applicable to a variety of problems from different areas of computing. check this book's table of contents and you will see that a majority of its chapters are devoted to individual design techniques. they distill a few key ideas that have proven to be useful in designing algorithms. learning these techniques is of utmost importance for the following reasons. first they provide guidance for designing algorithms for new problems i.e. problems for which there is no known satisfactory algorithm. therefore to use the language of a famous proverb learning such techniques is akin to learning to fish as opposed to being given a fish caught by somebody else. it is not true of course that each of these general techniques will be necessarily applicable to every problem you may encounter. but taken together they do constitute a powerful collection of tools that you will find quite handy in your studies and work. second algorithms are the cornerstone of computer science. every science is interested in classifying its principal subject and computer science is no exception. algorithm design techniques make it possible to classify algorithms according to an underlying design idea therefore they can serve as a natural way to both categorize and study algorithms. 