another problem that can be solved by gaussian elimination is computing a determinant. the determinant of an n n matrix a denoted det a or a is a number whose value can be defined recursively as follows. if n i.e. if a consists of a single element a det a is equal to a for n det a is computed by the recursive formula n det a sj a j det aj j where sj is if j is odd and if j is even a j is the element in row and column j and aj is the n n matrix obtained from matrix a by deleting its row and column j . in particular for a matrix the definition implies a formula that is easy to remember det a a a det a a det a a a a a . a a in other words the determinant of a matrix is simply equal to the difference between the products of its diagonal elements. for a matrix we get a a a det a a a a a a a det a a a det a a a det a a a a a a a a a a a a a a a a a a a a a a a a a a . incidentally this formula is very handy in a variety of applications. in particular we used it twice already in section . as a part of the quickhull algorithm. but what if we need to compute a determinant of a large matrix? although this is a task that is rarely needed in practice it is worth discussing nevertheless. using the recursive definition can be of little help because it implies computing the sum of n!terms. here gaussian elimination comes to the rescue again. the central point is the fact that the determinant of an upper triangular matrix is equal to the product of elements on its main diagonal and it is easy to see how elementary operations employed by the elimination algorithm influence the determinant's value. basically it either remains unchanged or changes a sign or is multiplied by the constant used by the elimination algorithm. as a result we can compute the determinant of an n n matrix in cubic time. determinants play an important role in the theory of systems of linear equations. specifically a system of n linear equations in n unknowns ax b has a unique solution if and only if the determinant of its coefficient matrix det a is not equal to zero. moreover this solution can be found by the formulas called cramer's rule x det a . . . xj det aj . . . xn det an det a det a det a where det aj is the determinant of the matrix obtained by replacing the j th column of a by the column b. you are asked to investigate in the exercises whether using cramer's rule is a good algorithm for solving systems of linear equations. exercises . . solve the following system by gaussian elimination x x x x x x x x x . . a. solve the system of the previous question by the lu decomposition method. b. from the standpoint of general algorithm design techniques how would you classify the lu decomposition method? . solve the system of problem by computing the inverse of its coefficient matrix and then multiplying it by the vector on the right hand side. . would it be correct to get the efficiency class of the forward elimination stage of gaussian elimination as follows? n n n n c n n i n i i j i k i i n n n i n i i n n n n n n i i . i i i since s n ni n n n s n in n i n and s n n i n s n s n s n n . i . write pseudocode for the back substitution stage of gaussian elimination and show that its running time is in n . . assuming that division of two numbers takes three times longer than their multiplication estimate how much faster betterforwardelimination is than forwardelimination. of course you should also assume that a compiler is not going to eliminate the inefficiency in forwardelimination. . a. give an example of a system of two linear equations in two unknowns that has a unique solution and solve it by gaussian elimination. b. give an example of a system of two linear equations in two unknowns that has no solution and apply gaussian elimination to it. c. give an example of a system of two linear equations in two unknowns that has infinitely many solutions and apply gaussian elimination to it. . the gauss jordan elimination method differs from gaussian elimination in that the elements above the main diagonal of the coefficient matrix are made zero at the same time and by the same use of a pivot row as the elements below the main diagonal. a. apply the gauss jordan method to the system of problem of these exercises. b. what general design strategy is this algorithm based on? c. in general how many multiplications are made by this method in solving a system of n equations in n unknowns? how does this compare with the number of multiplications made by the gaussian elimination method in both its elimination and back substitution stages? . a system ax b of n linear equations in n unknowns has a unique solution if and only if det a . is it a good idea to check this condition before applying gaussian elimination to the system? . a. apply cramer's rule to solve the system of problem of these exercises. b. estimate how many times longer it will take to solve a system of n linear equations in n unknowns by cramer's rule than by gaussian elimination. assume that all the determinants in cramer's rule formulas are computed independently by gaussian elimination. . lights out this one person game is played on an n n board composed of light panels. each panel has a switch that can be turned on and off thereby toggling the on off state of this and four vertically and horizontally adjacent panels. of course toggling a corner square affects a total of three panels and toggling a noncorner panel on the board's border affects a total of four squares. given an initial subset of lighted squares the goal is to turn all the lights off. a. show that an answer can be found by solving a system of linear equations with coefficients and right hand sides using the modulo arithmetic. b. use gaussian elimination to solve the all ones instance of this problem where all the panels of the board are initially lit. c. use gaussian elimination to solve the all ones instance of this problem where all the panels of the board are initially lit. 