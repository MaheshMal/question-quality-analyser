one of the oldest and most interesting areas in algorithmics is graph algorithms. informally a graph can be thought of as a collection of points called vertices some of which are connected by line segments called edges. a more formal definition is given in the next section. graphs are an interesting subject to study for both theoretical and practical reasons. graphs can be used for modeling a wide variety of applications including transportation communication social and economic networks project scheduling and games. studying different technical and social aspects of the internet in particular is one of the active areas of current research involving computer scientists economists and social scientists see e.g. eas . basic graph algorithms include graph traversal algorithms how can one reach all the points in a network? shortest path algorithms what is the best route between two cities? and topological sorting for graphs with directed edges is a set of courses with their prerequisites consistent or self contradictory? . fortunately these algorithms can be considered illustrations of general design techniques accordingly you will find them in corresponding chapters of the book. some graph problems are computationally very hard the most well known examples are the traveling salesman problem and the graph coloring problem. the traveling salesman problem tsp is the problem of finding the shortest tour through n cities that visits every city exactly once. in addition to obvious applications involving route planning it arises in such modern applications as circuit board and vlsi chip fabrication x ray crystallography and genetic engineering. the graph coloring problem seeks to assign the smallest number of colors to the vertices of a graph so that no two adjacent vertices are the same color. this problem arises in several applications such as event scheduling if the events are represented by vertices that are connected by an edge if and only if the corresponding events cannot be scheduled at the same time a solution to the graph coloring problem yields an optimal schedule. 