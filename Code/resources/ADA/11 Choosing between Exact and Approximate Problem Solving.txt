the next principal decision is to choose between solving the problem exactly or solving it approximately. in the former case an algorithm is called an exact algorithm in the latter case an algorithm is called an approximation algorithm. why would one opt for an approximation algorithm? first there are important problems that simply cannot be solved exactly for most of their instances examples include extracting square roots solving nonlinear equations and evaluating definite integrals. second available algorithms for solving a problem exactly can be unacceptably slow because of the problem's intrinsic complexity. this happens in particular for many problems involving a very large number of choices you will see examples of such difficult problems in chapters and . third an approximation algorithm can be a part of a more sophisticated algorithm that solves a problem exactly. 