informally an np complete problem is a problem in np that is as difficult as any other problem in this class because by definition any other problem in np can be reduced to it in polynomial time shown symbolically in figure . . here are more formal definitions of these concepts. definition a decision problem d is said to be polynomially reducible to a decision problem d if there exists a function t that transforms instances of d to instances of d such that . t maps all yes instances of d to yes instances of d and all no instances of d to no instances of d . t is computable by a polynomial time algorithm this definition immediately implies that if a problem d is polynomially reducible to some problem d that can be solved in polynomial time then problem d can also be solved in polynomial time why? . definition a decision problem d is said to be np complete if . it belongs to class np . every problem in np is polynomially reducible to d the fact that closely related decision problems are polynomially reducible to each other is not very surprising. for example let us prove that the hamiltonian circuit problem is polynomially reducible to the decision version of the traveling np problems np complete problem figure . notion of an np complete problem. polynomial time reductions of np problems to an np complete problem are shown by arrows. salesman problem. the latter can be stated as the existence problem of a hamiltonian circuit not longer than a given positive integer m in a given complete graph with positive integer weights. we can map a graph g of a given instance of the hamiltonian circuit problem to a complete weighted graph g representing an instance of the traveling salesman problem by assigning as the weight to each edge in g and adding an edge of weight between any pair of nonadjacent vertices in g. as the upper bound m on the hamiltonian circuit length we take m n where n is the number of vertices in g and g . obviously this transformation can be done in polynomial time. let g be a yes instance of the hamiltonian circuit problem. then g has a hamiltonian circuit and its image in g will have length n making the image a yes instance of the decision traveling salesman problem. conversely if we have a hamiltonian circuit of the length not larger than n in g then its length must be exactly n why? and hence the circuit must be made up of edges present in g making the inverse image of the yes instance of the decision traveling salesman problem be a yes instance of the hamiltonian circuit problem. this completes the proof. the notion of np completeness requires however polynomial reducibility of all problems in np both known and unknown to the problem in question. given the bewildering variety of decision problems it is nothing short of amazing that specific examples of np complete problems have been actually found. nevertheless this mathematical feat was accomplished independently by stephen cook in the united states and leonid levin in the former soviet union. in his paper cook coo showed that the so called cnf satisfiability problem is npcomplete. the cnf satisfiability problem deals with boolean expressions. each boolean expression can be represented in conjunctive normal form such as the following expression involving three boolean variables x x and x and their negations denoted x x and x respectively x x x x x x x x . the cnf satisfiability problem asks whether or not one can assign values true and false to variables of a given boolean expression in its cnf form to make the entire expression true. it is easy to see that this can be done for the above formula if x true x true and x false the entire expression is true. since the cook levin discovery of the first known np complete problems computer scientists have found many hundreds if not thousands of other examples. in particular the well known problems or their decision versions mentioned above hamiltonian circuit traveling salesman partition bin packing and graph coloring are all np complete. it is known however that if p np there must exist np problems that neither are in p nor are np complete. . as it often happens in the history of science breakthrough discoveries are made independently and almost simultaneously by several scientists. in fact levin introduced a more general notion than npcompleteness which was not limited to decision problems but his paper lev was published two years after cook's. for a while the leading candidate to be such an example was the problem of determining whether a given integer is prime or composite. but in an important theoretical breakthrough professor manindra agrawal and his students neeraj kayal and nitin saxena of the indian institute of technology in kanpur announced in a discovery of a deterministic polynomial time algorithm for primality testing agr . their algorithm does not solve however the related problem of factoring large composite integers which lies at the heart of the widely used encryption method called the rsa algorithm riv . showing that a decision problem is np complete can be done in two steps. first one needs to show that the problem in question is in np i.e. a randomly generated string can be checked in polynomial time to determine whether or not it represents a solution to the problem. typically this step is easy. the second step is to show that every problem in np is reducible to the problem in question in polynomial time. because of the transitivity of polynomial reduction this step can be done by showing that a known np complete problem can be transformed to the problem in question in polynomial time see figure . . although such a transformation may need to be quite ingenious it is incomparably simpler than proving the existence of a transformation for every problem in np. for example if we already know that the hamiltonian circuit problem is np complete its polynomial reducibility to the decision traveling salesman problem implies that the latter is also np complete after an easy check that the decision traveling salesman problem is in class np . the definition of np completeness immediately implies that if there exists a deterministic polynomial time algorithm for just one np complete problem then every problem in np can be solved in polynomial time by a deterministic algorithm and hence p np. in other words finding a polynomial time algorithm np problems known np complete problem candidate for np completeness figure . proving np completeness by reduction. for one np complete problem would mean that there is no qualitative difference between the complexity of checking a proposed solution and finding it in polynomial time for the vast majority of decision problems of all kinds. such implications make most computer scientists believe that p np although nobody has been successful so far in finding a mathematical proof of this intriguing conjecture. surprisingly in interviews with the authors of a book about the lives and discoveries of prominent computer scientists sha cook seemed to be uncertain about the eventual resolution of this dilemma whereas levin contended that we should expect the p np outcome. whatever the eventual answer to the p ? np question proves to be knowing that a problem is np complete has important practical implications for today. it means that faced with a problem known to be np complete we should probably not aim at gaining fame and fortune by designing a polynomial time algorithm for solving all its instances. rather we should concentrate on several approaches that seek to alleviate the intractability of such problems. these approaches are outlined in the next chapter of the book. exercises . . a game of chess can be posed as the following decision problem given a legal positioning of chess pieces and information about which side is to move determine whether that side can win. is this decision problem decidable? . a certain problem can be solved by an algorithm whose running time is in o nlog n . which of the following assertions is true? a. the problem is tractable. b. the problem is intractable. c. impossible to tell. . give examples of the following graphs or explain why such examples cannot exist. a. graph with a hamiltonian circuit but without an eulerian circuit b. graph with an eulerian circuit but without a hamiltonian circuit c. graph with both a hamiltonian circuit and an eulerian circuit d. graph with a cycle that includes all the vertices but with neither a hamiltonian circuit nor an eulerian circuit . in the clay mathematics institute cmi of cambridge massachusetts designated a million prize for the solution to this problem. . for each of the following graphs find its chromatic number. a. a e b. a c. a f e b d b f b g d c e c g c h d h . design a polynomial time algorithm for the graph coloring problem determine whether vertices of a given graph can be colored in no more than two colors so that no two adjacent vertices are colored the same color. . consider the following brute force algorithm for solving the composite number problem check successive integers from to n as possible divisors of n. if one of them divides n evenly return yes i.e. the number is composite if none of them does return no. why does this algorithm not put the problem in class p ? . state the decision version for each of the following problems and outline a polynomial time algorithm that verifies whether or not a proposed solution solves the problem. you may assume that a proposed solution represents a legitimate input to your verification algorithm. a. knapsack problem b. bin packing problem . show that the partition problem is polynomially reducible to the decision version of the knapsack problem. . show that the following three problems are polynomially reducible to each other. i determine for a given graph g v e and a positive integer m v whether g contains a clique of size m or more. a clique of size k in a graph is its complete subgraph of k vertices. ii determine for a given graph g v e and a positive integer m v whether there is a vertex cover of size m or less for g. a vertex cover of size k for a graph g v e is a subset v v such that v k and for each edge u v e at least one of u and v belongs to v . iii determine for a given graph g v e and a positive integer m v whether g contains an independent set of size m or more. an independent set of size k for a graph g v e is a subset v v such that v k and for all u v v vertices u and v are not adjacent in g. . determine whether the following problem is np complete. given several sequences of uppercase and lowercase letters is it possible to select a letter from each sequence without selecting both the upper and lowercase versions of any letter? for example if the sequences are abc bc ab and ac it is possible to choose a from the first sequence b from the second and third and c from the fourth. an example where there is no way to make the required selections is given by the four sequences ab ab ab and ab. kar . which of the following diagrams do not contradict the current state of our knowledge about the complexity classes p np and npc np complete problems ? a. b. p np p np npc npc c. np d. np p npc p npc e. np p npc . king arthur expects knights for an annual dinner at camelot. unfortunately some of the knights quarrel with each other and arthur knows who quarrels with whom. arthur wants to seat his guests around a table so that no two quarreling knights sit next to each other. a. which standard problem can be used to model king arthur's task? b. as a research project find a proof that arthur's problem has a solution if each knight does not quarrel with at least other knights. 