in our third example of a problem that can be solved by exhaustive search there are n people who need to be assigned to execute n jobs one person per job. that is each person is assigned to exactly one job and each job is assigned to exactly one person. the cost that would accrue if the ith person is assigned to the j th job is a known quantity c i j for each pair i j . . . n. the problem is to find an assignment with the minimum total cost. a small instance of this problem follows with the table entries representing the assignment costs c i j job job job job person person person person it is easy to see that an instance of the assignment problem is completely specified by its cost matrix c. in terms of this matrix the problem is to select one element in each row of the matrix so that all selected elements are in different columns and the total sum of the selected elements is the smallest possible. note that no obvious strategy for finding a solution works here. for example we cannot select the smallest element in each row because the smallest elements may happen to be in the same column. in fact the smallest element in the entire matrix need not be a component of an optimal solution. thus opting for the exhaustive search may appear as an unavoidable evil. we can describe feasible solutions to the assignment problem as n tuples j . . . jn in which the ith component i . . . n indicates the column of the element selected in the ith row i.e. the job number assigned to the ith person . for example for the cost matrix above indicates the assignment of person to job person to job person to job and person to job . the requirements of the assignment problem imply that there is a one to one correspondence between feasible assignments and permutations of the first n integers. therefore the exhaustive search approach to the assignment problem would require generating all the permutations of integers . . . n computing the total cost of each assignment by summing up the corresponding elements of the cost matrix and finally selecting the one with the smallest sum. a few first iterations of applying this algorithm to the instance given above are shown in figure . you are asked to complete it in the exercises. cost cost c cost cost etc. cost cost figure . first few iterations of solving a small instance of the assignment problem by exhaustive search. since the number of permutations to be considered for the general case of the assignment problem is n! exhaustive search is impractical for all but very small instances of the problem. fortunately there is a much more efficient algorithm for this problem called the hungarian method after the hungarian mathematicians ko nig and egerva ry whose work underlies the method see e.g. kol . this is good news the fact that a problem domain grows exponentially or faster does not necessarily imply that there can be no efficient algorithm for solving it. in fact we present several other examples of such problems later in the book. however such examples are more of an exception to the rule. more often than not there are no known polynomial time algorithms for problems whose domain grows exponentially with instance size provided we want to solve them exactly. and as we mentioned above such algorithms quite possibly do not exist. exercises . . a. assuming that each tour can be generated in constant time what will be the efficiency class of the exhaustive search algorithm outlined in the text for the traveling salesman problem? b. if this algorithm is programmed on a computer that makes ten billion additions per second estimate the maximum number of cities for which the problem can be solved in i. hour. ii. hours. iii. year. iv. century. . outline an exhaustive search algorithm for the hamiltonian circuit problem. . outline an algorithm to determine whether a connected graph represented by its adjacency matrix has an eulerian circuit. what is the efficiency class of your algorithm? . complete the application of exhaustive search to the instance of the assignment problem started in the text. . give an example of the assignment problem whose optimal solution does not include the smallest element of its cost matrix. . consider the partition problem given n positive integers partition them into two disjoint subsets with the same sum of their elements. of course the problem does not always have a solution. design an exhaustive search algorithm for this problem. try to minimize the number of subsets the algorithm needs to generate. . consider the clique problem given a graph g and a positive integer k determine whether the graph contains a clique of size k i.e. a complete subgraph of k vertices. design an exhaustive search algorithm for this problem. . explain how exhaustive search can be applied to the sorting problem and determine the efficiency class of such an algorithm. . eight queens problem consider the classic puzzle of placing eight queens on an chessboard so that no two queens are in the same row or in the same column or on the same diagonal. how many different positions are there so that a. no two queens are on the same square? b. no two queens are in the same row? c. no two queens are in the same row or in the same column? also estimate how long it would take to find all the solutions to the problem by exhaustive search based on each of these approaches on a computer capable of checking billion positions per second. . magic squares a magic square of order n is an arrangement of the integers from to n in an n n matrix with each number occurring exactly once so that each row each column and each main diagonal has the same sum. a. prove that if a magic square of order n exists the sum in question must be equal to n n . b. design an exhaustive search algorithm for generating all magic squares of order n. c. go to the internet or your library and find a better algorithm for generating magic squares. d. implement the two algorithms the exhaustive search and the one you have found and run an experiment to determine the largest value of n for which each of the algorithms is able to find a magic square of order n in less than minute on your computer. . famous alphametic a puzzle in which the digits in a correct mathematical expression such as a sum are replaced by letters is called cryptarithm if in addition the puzzle's words make sense it is said to be an alphametic. the most well known alphametic was published by the renowned british puzzlist henry e. dudeney s end more money two conditions are assumed first the correspondence between letters and decimal digits is one to one i.e. each letter represents one digit only and different letters represent different digits. second the digit zero does not appear as the left most digit in any of the numbers. to solve an alphametic means to find which digit each letter represents. note that a solution's uniqueness cannot be assumed and has to be verified by the solver. a. write a program for solving cryptarithms by exhaustive search. assume that a given cryptarithm is a sum of two words. b. solve dudeney's puzzle the way it was expected to be solved when it was first published in . 