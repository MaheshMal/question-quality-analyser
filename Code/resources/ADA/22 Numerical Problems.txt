numerical problems another large special area of applications are problems that involve mathematical objects of continuous nature solving equations and systems of equations computing definite integrals evaluating functions and so on. the majority of such mathematical problems can be solved only approximately. another principal difficulty stems from the fact that such problems typically require manipulating real numbers which can be represented in a computer only approximately. moreover a large number of arithmetic operations performed on approximately represented numbers can lead to an accumulation of the round off error to a point where it can drastically distort an output produced by a seemingly sound algorithm. many sophisticated algorithms have been developed over the years in this area and they continue to play a critical role in many scientific and engineering applications. but in the last years or so the computing industry has shifted its focus to business applications. these new applications require primarily algorithms for information storage retrieval transportation through networks and presentation to users. as a result of this revolutionary change numerical analysis has lost its formerly dominating position in both industry and computer science programs. still it is important for any computer literate person to have at least a rudimentary idea about numerical algorithms. we discuss several classical numerical algorithms in sections . . and . . exercises . . consider the algorithm for the sorting problem that sorts an array by counting for each of its elements the number of smaller elements and then uses this information to put the element in its appropriate position in the sorted array algorithm comparisoncountingsort a ..n sorts an array by comparison counting input array a ..n of orderable values output array s ..n of a's elements sorted in nondecreasing order for i to n do count i for i to n do for j i to n do if a i a j count j count j else count i count i for i to n do s count i a i return s a. apply this algorithm to sorting the list . b. is this algorithm stable? c. is it in place? . name the algorithms for the searching problem that you already know. give a good succinct description of each algorithm in english. if you know no such algorithms use this opportunity to design one. . design a simple algorithm for the string matching problem. . ko nigsberg bridges the ko nigsberg bridge puzzle is universally accepted as the problem that gave birth to graph theory. it was solved by the great swiss born mathematician leonhard euler . the problem asked whether one could in a single stroll cross all seven bridges of the city of ko nigsberg exactly once and return to a starting point. following is a sketch of the river with its two islands and seven bridges a. state the problem as a graph problem. b. does this problem have a solution? if you believe it does draw such a stroll if you believe it does not explain why and indicate the smallest number of new bridges that would be required to make such a stroll possible. . icosian game a century after euler's discovery see problem another famous puzzle this one invented by the renowned irish mathematician sir william hamilton was presented to the world under the name of the icosian game. the game's board was a circular wooden board on which the following graph was carved find a hamiltonian circuit a path that visits all the graph's vertices exactly once before returning to the starting vertex for this graph. . consider the following problem design an algorithm to determine the best route for a subway passenger to take from one designated station to another in a well developed subway system similar to those in such cities as washington d.c. and london uk. a. the problem's statement is somewhat vague which is typical of real life problems. in particular what reasonable criterion can be used for defining the best route? b. how would you model this problem by a graph? . a. rephrase the traveling salesman problem in combinatorial object terms. b. rephrase the graph coloring problem in combinatorial object terms. . consider the following map b a d c e f a. explain how we can use the graph coloring problem to color the map so that no two neighboring regions are colored the same. b. use your answer to part a to color the map with the smallest number of colors. . design an algorithm for the following problem given a set of n points in the cartesian plane determine whether all of them lie on the same circumference. . write a program that reads as its inputs the x y coordinates of the endpoints of two line segments p q and p q and determines whether the segments have a common point. 