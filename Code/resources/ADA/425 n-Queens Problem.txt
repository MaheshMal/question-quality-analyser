as our first example we use a perennial favorite of textbook writers the n queens problem. the problem is to place n queens on an n n chessboard so that no two queens attack each other by being in the same row or in the same column or on the same diagonal. for n the problem has a trivial solution and it is easy to see that there is no solution for n and n . so let us consider the four queens problem and solve it by the backtracking technique. since each of the four queens has to be placed in its own row all we need to do is to assign a column for each queen on the board presented in figure . . we start with the empty board and then place queen in the first possible position of its row which is in column of row . then we place queen after trying unsuccessfully columns and in the first acceptable position for it which is square the square in row and column . this proves to be a dead end because there is no acceptable position for queen . so the algorithm backtracks and puts queen in the next possible position at . then queen is placed at which proves to be another dead end. the algorithm then backtracks all the way to queen and moves it to . queen then goes to queen to and queen to which is a solution to the problem. the state space tree of this search is shown in figure . . if other solutions need to be found how many of them are there for the fourqueens problem? the algorithm can simply resume its operations at the leaf at which it stopped. alternatively we can use the board's symmetry for this purpose. queen queen queen queen figure . board for the four queens problem. q q q q q q q q q q q q q q q q q q solution figure . state space tree of solving the four queens problem by backtracking. denotes an unsuccessful attempt to place a queen in the indicated column. the numbers above the nodes indicate the order in which the nodes are generated. finally it should be pointed out that a single solution to the n queens problem for any n can be found in linear time. in fact over the last years mathematicians have discovered several alternative formulas for nonattacking positions of n queens bel . such positions can also be found by applying some general algorithm design strategies problem in this section's exercises . 