that's the secret to life . . . replace one worry with another. charles m. schulz american cartoonist the creator of peanuts this chapter deals with a group of design methods that are based on the idea of transformation. we call this general technique transform and conquer because these methods work as two stage procedures. first in the transformation stage the problem's instance is modified to be for one reason or another more amenable to solution. then in the second or conquering stage it is solved. there are three major variations of this idea that differ by what we transform a given instance to figure . transformation to a simpler or more convenient instance of the same problem we call it instance simplification. transformation to a different representation of the same instance we call it representation change. transformation to an instance of a different problem for which an algorithm is already available we call it problem reduction. in the first three sections of this chapter we encounter examples of the instance simplification variety. section . deals with the simple but fruitful idea of presorting. many algorithmic problems are easier to solve if their input is sorted. of course the benefits of sorting should more than compensate for the simpler instance or problem's another representation solution instance or another problem's instance figure . transform and conquer strategy. time spent on it otherwise we would be better off dealing with an unsorted input directly. section . introduces one of the most important algorithms in applied mathematics gaussian elimination. this algorithm solves a system of linear equations by first transforming it to another system with a special property that makes finding a solution quite easy. in section . the ideas of instance simplification and representation change are applied to search trees. the results are avl trees and multiway balanced search trees of the latter we consider the simplest case trees. section . presents heaps and heapsort. even if you are already familiar with this important data structure and its application to sorting you can still benefit from looking at them in this new light of transform and conquer design. in section . we discuss horner's rule a remarkable algorithm for evaluating polynomials. if there were an algorithm hall of fame horner's rule would be a serious candidate for induction based on the algorithm's elegance and efficiency. we also consider there two interesting algorithms for the exponentiation problem both based on the representation change idea. the chapter concludes with a review of several applications of the third variety of transform and conquer problem reduction. this variety should be considered the most radical of the three one problem is reduced to another i.e. transformed into an entirely different problem. this is a very powerful idea and it is extensively used in the complexity theory chapter . its application to designing practical algorithms is not trivial however. first we need to identify a new problem into which the given problem should be transformed. then we must make sure that the transformation algorithm followed by the algorithm for solving the new problem is time efficient compared to other algorithmic alternatives. among several examples we discuss an important special case of mathematical modeling or expressing a problem in terms of purely mathematical objects such as variables functions and equations. 