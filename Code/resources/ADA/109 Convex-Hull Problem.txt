on to the other problem that of computing the convex hull. finding the convex hull for a given set of points in the plane or a higher dimensional space is one of the most important some people believe the most important problems in computational geometry. this prominence is due to a variety of applications in which this problem needs to be solved either by itself or as a part of a larger task. several such applications are based on the fact that convex hulls provide convenient approximations of object shapes and data sets given. for example in computer animation replacing objects by their convex hulls speeds up collision detection the same idea is used in path planning for mars mission rovers. convex hulls are used in computing accessibility maps produced from satellite images by geographic information systems. they are also used for detecting outliers by some statistical techniques. an efficient algorithm for computing a diameter of a set of points which is the largest distance between two of the points needs the set's convex hull to find the largest distance between two of its extreme points see below . finally convex hulls are important for solving many optimization problems because their extreme points provide a limited set of solution candidates. we start with a definition of a convex set. definition a set of points finite or infinite in the plane is called convex if for any two points p and q in the set the entire line segment with the endpoints at p and q belongs to the set. all the sets depicted in figure . a are convex and so are a straight line a triangle a rectangle and more generally any convex polygon a circle and the entire plane. on the other hand the sets depicted in figure . b any finite set of two or more distinct points the boundary of any convex polygon and a circumference are examples of sets that are not convex. now we are ready for the notion of the convex hull. intuitively the convex hull of a set of n points in the plane is the smallest convex polygon that contains all of them either inside or on its boundary. if this formulation does not fire up your enthusiasm consider the problem as one of barricading n sleeping tigers by a fence of the shortest length. this interpretation is due to d. harel har it is somewhat lively however because the fenceposts have to be erected right at the spots where some of the tigers sleep! there is another much tamer interpretation of this notion. imagine that the points in question are represented by nails driven into a large sheet of plywood representing the plane. take a rubber band and stretch it to include all the nails then let it snap into place. the convex hull is the area bounded by the snapped rubber band figure . . a formal definition of the convex hull that is applicable to arbitrary sets including sets of points that happen to lie on the same line follows. definition the convex hull of a set s of points is the smallest convex set containing s. the smallest requirement means that the convex hull of s must be a subset of any convex set containing s. if s is convex its convex hull is obviously s itself. if s is a set of two points its convex hull is the line segment connecting these points. if s is a set of three . by a triangle a rectangle and more generally any convex polygon we mean here a region i.e. the set of points both inside and on the boundary of the shape in question. a b figure . a convex sets. b sets that are not convex. figure . rubber band interpretation of the convex hull. points not on the same line its convex hull is the triangle with the vertices at the three points given if the three points do lie on the same line the convex hull is the line segment with its endpoints at the two points that are farthest apart. for an example of the convex hull for a larger set see figure . . a study of the examples makes the following theorem an expected result. theorem the convex hull of any set s of n points not all on the same line is a convex polygon with the vertices at some of the points of s. if all the points do lie on the same line the polygon degenerates to a line segment but still with the endpoints at two points of s. p p p p p p p p figure . the convex hull for this set of eight points is the convex polygon with vertices at p p p p and p . the convex hull problem is the problem of constructing the convex hull for a given set s of n points. to solve it we need to find the points that will serve as the vertices of the polygon in question. mathematicians call the vertices of such a polygon extreme points. by definition an extreme point of a convex set is a point of this set that is not a middle point of any line segment with endpoints in the set. for example the extreme points of a triangle are its three vertices the extreme points of a circle are all the points of its circumference and the extreme points of the convex hull of the set of eight points in figure . are p p p p and p . extreme points have several special properties other points of a convex set do not have. one of them is exploited by the simplex method a very important algorithm discussed in section . . this algorithm solves linear programming problems which are problems of finding a minimum or a maximum of a linear function of n variables subject to linear constraints see problem in this section's exercises for an example and sections . and . for a general discussion . here however we are interested in extreme points because their identification solves the convex hull problem. actually to solve this problem completely we need to know a bit more than just which of n points of a given set are extreme points of the set's convex hull we need to know which pairs of points need to be connected to form the boundary of the convex hull. note that this issue can also be addressed by listing the extreme points in a clockwise or a counterclockwise order. so how can we solve the convex hull problem in a brute force manner? if you do not see an immediate plan for a frontal attack do not be dismayed the convexhull problem is one with no obvious algorithmic solution. nevertheless there is a simple but inefficient algorithm that is based on the following observation about line segments making up the boundary of a convex hull a line segment connecting two points pi and pj of a set of n points is a part of the convex hull's boundary if and only if all the other points of the set lie on the same side of the straight line through these two points. verify this property for the set in figure . . repeating this test for every pair of points yields a list of line segments that make up the convex hull's boundary. a few elementary facts from analytical geometry are needed to implement this algorithm. first the straight line through two points x y x y in the coordinate plane can be defined by the equation ax by c where a y y b x x c x y y x . second such a line divides the plane into two half planes for all the points in one of them ax by c while for all the points in the other ax by c. for the points on the line itself of course ax by c. thus to check whether certain points lie on the same side of the line we can simply check whether the expression ax by c has the same sign for each of these points. we leave the implementation details as an exercise. what is the time efficiency of this algorithm? it is in o n for each of n n pairs of distinct points we may need to find the sign of ax by c for each of the other n points. there are much more efficient algorithms for this important problem and we discuss one of them later in the book. exercises . . assuming that sqrt takes about times longer than each of the other operations in the innermost loop of bruteforceclosestpoints which are assumed to take the same amount of time estimate how much faster the algorithm will run after the improvement discussed in section . . . can you design a more efficient algorithm than the one based on the bruteforce strategy to solve the closest pair problem for n points x x . . . xn on the real line? . let x x . . . xn be real numbers representing coordinates of n villages located along a straight road. a post office needs to be built in one of these villages. a. design an efficient algorithm to find the post office location minimizing the average distance between the villages and the post office. b. design an efficient algorithm to find the post office location minimizing the maximum distance from a village to the post office. . for the sake of simplicity we assume here that no three points of a given set lie on the same line. a modification needed for the general case is left for the exercises. . a. there are several alternative ways to define a distance between two points p x y and p x y in the cartesian plane. in particular the manhattan distance is defined as dm p p x x y y . prove that dm satisfies the following axioms which every distance function must satisfy i. dm p p for any two points p and p and dm p p if and only if p p ii. dm p p dm p p iii. dm p p dm p p dm p p for any p p and p b. sketch all the points in the cartesian plane whose manhattan distance to the origin is equal to . do the same for the euclidean distance. c. true or false a solution to the closest pair problem does not depend on which of the two metrics de euclidean or dm manhattan is used? . the hamming distance between two strings of equal length is defined as the number of positions at which the corresponding symbols are different. it is named after richard hamming a prominent american scientist and engineer who introduced it in his seminal paper on error detecting and error correcting codes. a. does the hamming distance satisfy the three axioms of a distance metric listed in problem ? b. what is the time efficiency class of the brute force algorithm for the closestpair problem if the points in question are strings of m symbols long and the distance between two of them is measured by the hamming distance? . odd pie fight there are n people positioned on a field euclidean plane so that each has a unique nearest neighbor. each person has a cream pie. at a signal everybody hurls his or her pie at the nearest neighbor. assuming that n is odd and that nobody can miss his or her target true or false there always remains at least one person not hit by a pie. car . the closest pair problem can be posed in the k dimensional space in which the euclidean distance between two points p x . . . xk and p x . . . xk is defined as d p p k . s xs xs what is the time efficiency class of the brute force algorithm for the kdimensional closest pair problem? . find the convex hulls of the following sets and identify their extreme points if they have any a. a line segment b. a square c. the boundary of a square d. a straight line . design a linear time algorithm to determine two extreme points of the convex hull of a given set of n points in the plane. . what modification needs to be made in the brute force algorithm for the convex hull problem to handle more than two points on the same straight line? . write a program implementing the brute force algorithm for the convex hull problem. . consider the following small instance of the linear programming problem maximize x y subject to x y x y x y . a. sketch in the cartesian plane the problem's feasible region defined as the set of points satisfying all the problem's constraints. b. identify the region's extreme points. c. solve this optimization problem by using the following theorem a linear programming problem with a nonempty bounded feasible region always has a solution which can be found at one of the extreme points of its feasible region. 