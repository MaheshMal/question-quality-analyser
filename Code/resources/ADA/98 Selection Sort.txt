we start selection sort by scanning the entire given list to find its smallest element and exchange it with the first element putting the smallest element in its final position in the sorted list. then we scan the list starting with the second element to find the smallest among the last n elements and exchange it with the second element putting the second smallest element in its final position. generally on the ith pass through the list which we number from to n the algorithm searches for the smallest item among the last n i elements and swaps it with ai a a . . . ai ai . . . amin . . . an in their final positions the last n i elements after n passes the list is sorted. here is pseudocode of this algorithm which for simplicity assumes that the list is implemented as an array algorithm selectionsort a ..n sorts a given array by selection sort input an array a ..n of orderable elements output array a ..n sorted in nondecreasing order for i to n do min i for j i to n do if a j a min min j swap a i and a min as an example the action of the algorithm on the list is illustrated in figure . . the analysis of selection sort is straightforward. the input size is given by the number of elements n the basic operation is the key comparison a j a min . the number of times it is executed depends only on the array size and is given by the following sum n n n n c n n i n i . i j i i i figure . example of sorting with selection sort. each line corresponds to one iteration of the algorithm i.e. a pass through the list's tail to the right of the vertical bar an element in bold indicates the smallest element found. elements to the left of the vertical bar are in their final positions and are not considered in this and subsequent iterations. since we have already encountered the last sum in analyzing the algorithm of example in section . you should be able to compute it now on your own. whether you compute this sum by distributing the summation symbol or by immediately getting the sum of decreasing integers the answer of course must be the same n n n n n . c n n i i j i i thus selection sort is a n algorithm on all inputs. note however that the number of key swaps is only n or more precisely n one for each repetition of the i loop . this property distinguishes selection sort positively from many other sorting algorithms. 