as we pointed out in section . many problems can be solved by a reduction to one of the standard graph problems. this is true in particular for a variety of puzzles and games. in these applications vertices of a graph typically represent possible states of the problem in question and edges indicate permitted transitions among such states. one of the graph's vertices represents an initial state and another represents a goal state of the problem. there might be several vertices of the latter kind. such a graph is called a state space graph. thus the transformation just described reduces the problem to the question about a path from the initial state vertex to a goal state vertex. pwgc pg wc pg p pwc g pw c pwg pc pg pgc w w pgc pc pg pwg c pw g pwc p pg wc pg pwgc figure . state space graph for the peasant wolf goat and cabbage puzzle. example let us revisit the classic river crossing puzzle that was included in the exercises for section . . a peasant finds himself on a river bank with a wolf a goat and a head of cabbage. he needs to transport all three to the other side of the river in his boat. however the boat has room only for the peasant himself and one other item either the wolf the goat or the cabbage . in his absence the wolf would eat the goat and the goat would eat the cabbage. find a way for the peasant to solve his problem or prove that it has no solution. the state space graph for this problem is given in figure . . its vertices are labeled to indicate the states they represent p w g c stand for the peasant the wolf the goat and the cabbage respectively the two bars denote the river for convenience we also label the edges by indicating the boat's occupants for each crossing. in terms of this graph we are interested in finding a path from the initial state vertex labeled pwgc to the final state vertex labeled pwgc. it is easy to see that there exist two distinct simple paths from the initialstate vertex to the final state vertex what are they? . if we find them by applying breadth first search we get a formal proof that these paths have the smallest number of edges possible. hence this puzzle has two solutions requiring seven river crossings which is the minimum number of crossings needed. our success in solving this simple puzzle should not lead you to believe that generating and investigating state space graphs is always a straightforward task. to get a better appreciation of them consult books on artificial intelligence ai the branch of computer science in which state space graphs are a principal subject. in this book we deal with an important special case of state space graphs in sections . and . . exercises . . a. prove the equality lcm m n m.n gcd m n that underlies the algorithm for computing lcm m n . b. euclid's algorithm is known to be in o log n . if it is the algorithm that is used for computing gcd m n what is the efficiency of the algorithm for computing lcm m n ? . you are given a list of numbers for which you need to construct a min heap. a min heap is a complete binary tree in which every key is less than or equal to the keys in its children. how would you use an algorithm for constructing a max heap a heap as defined in section . to construct a min heap? . prove that the number of different paths of length k from the ith vertex to the j th vertex in a graph undirected or directed equals the i j th element of ak where a is the adjacency matrix of the graph. . a. design an algorithm with a time efficiency better than cubic for checking whether a graph with n vertices contains a cycle of length man . b. consider the following algorithm for the same problem. starting at an arbitrary vertex traverse the graph by depth first search and check whether its depth first search forest has a vertex with a back edge leading to its grandparent. if it does the graph contains a triangle if it does not the graph does not contain a triangle as its subgraph. is this algorithm correct? . given n points p x y . . . pn xn yn in the coordinate plane design an algorithm to check whether all the points lie within a triangle with its vertices at three of the points given. you can either design an algorithm from scratch or reduce the problem to another one with a known algorithm. . consider the problem of finding for a given positive integer n the pair of integers whose sum is n and whose product is as large as possible. design an efficient algorithm for this problem and indicate its efficiency class. . the assignment problem introduced in section . can be stated as follows there are n people who need to be assigned to execute n jobs one person per job. that is each person is assigned to exactly one job and each job is assigned to exactly one person. the cost that would accrue if the ith person is assigned to the j th job is a known quantity c i j for each pair i j . . . n. the problem is to assign the people to the jobs to minimize the total cost of the assignment. express the assignment problem as a linear programming problem. . solve the instance of the linear programming problem given in section . maximize . x . y . z subject to x y z x y z . x y x y z . . the graph coloring problem is usually stated as the vertex coloring problem assign the smallest number of colors to vertices of a given graph so that no two adjacent vertices are the same color. consider the edge coloring problem assign the smallest number of colors possible to edges of a given graph so that no two edges with the same endpoint are the same color. explain how the edge coloring problem can be reduced to a vertex coloring problem. . consider the two dimensional post office location problem given n points x y . . . xn yn in the cartesian plane find a location x y for a post ni xi x yi y the average manhattan disoffice that minimizes n tance from the post office to these points. explain how this problem can be efficiently solved by the problem reduction technique provided the post office does not have to be located at one of the input points. . jealous husbands there are n married couples who need to cross a river. they have a boat that can hold no more than two people at a time. to complicate matters all the husbands are jealous and will not agree on any crossing procedure that would put a wife on the same bank of the river with another woman's husband without the wife's husband being there too even if there are other people on the same bank. can they cross the river under such constraints? a. solve the problem for n . b. solve the problem for n which is the classical version of this problem. c. does the problem have a solution for n ? if it does indicate how many river crossings it will take if it does not explain why. . double n dominoes dominoes are small rectangular tiles with dots called spots or pips embossed at both halves of the tiles. a standard double six domino set has tiles one for each unordered pair of integers from to . in general a double n domino set would consist of domino tiles for each unordered pair of integers from to n n . determine all values of n for which one constructs a ring made up of all the tiles in a double n domino set. summary transform and conquer is the fourth general algorithm design and problemsolving strategy discussed in the book. it is in fact a group of techniques based on the idea of transformation to a problem that is easier to solve. there are three principal varieties of the transform and conquer strategy instance simplification representation change and problem reduction. instance simplification is transforming an instance of a problem to an instance of the same problem with some special property that makes the problem easier to solve. list presorting gaussian elimination and rotations in avl trees are good examples of this strategy. representation change implies changing one representation of a problem's instance to another representation of the same instance. examples discussed in this chapter include representation of a set by a tree heaps and heapsort horner's rule for polynomial evaluation and two binary exponentiation algorithms. problem reduction calls for transforming a given problem to another problem that can be solved by a known algorithm. among examples of applying this idea to algorithmic problem solving see section . reductions to linear programming and reductions to graph problems are especially important. some examples used to illustrate transform and conquer happen to be very important data structures and algorithms. they are heaps and heapsort avl and trees gaussian elimination and horner's rule. a heap is an essentially complete binary tree with keys one per node satisfying the parental dominance requirement. though defined as binary trees heaps are normally implemented as arrays. heaps are most important for the efficient implementation of priority queues they also underlie heapsort. heapsort is a theoretically important sorting algorithm based on arranging elements of an array in a heap and then successively removing the largest element from a remaining heap. the algorithm's running time is in n log n both in the worst case and in the average case in addition it is in place. avl trees are binary search trees that are always balanced to the extent possible for a binary tree. the balance is maintained by transformations of four types called rotations. all basic operations on avl trees are in o log n it eliminates the bad worst case efficiency of classic binary search trees. trees achieve a perfect balance in a search tree by allowing a node to contain up to two ordered keys and have up to three children. this idea can be generalized to yield very important b trees discussed later in the book. gaussian elimination an algorithm for solving systems of linear equations is a principal algorithm in linear algebra. it solves a system by transforming it to an equivalent system with an upper triangular coefficient matrix which is easy to solve by back substitutions. gaussian elimination requires about n multiplications. horner's rule is an optimal algorithm for polynomial evaluation without coefficient preprocessing. it requires only n multiplications and n additions to evaluate an n degree polynomial at a given point. horner's rule also has a few useful byproducts such as the synthetic division algorithm. two binary exponentiation algorithms for computing an are introduced in section . . both of them exploit the binary representation of the exponent n but they process it in the opposite directions left to right and right to left. linear programming concerns optimizing a linear function of several variables subject to constraints in the form of linear equations and linear inequalities. there are efficient algorithms capable of solving very large instances of this problem with many thousands of variables and constraints provided the variables are not required to be integers. the latter called integer linear programming constitute a much more difficult class of problems. 