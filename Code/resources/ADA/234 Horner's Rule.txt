horner's rule is an old but very elegant and efficient algorithm for evaluating a polynomial. it is named after the british mathematician w. g. horner who published it in the early th century. but according to knuth knuii p. the method was used by isaac newton years before horner. you will appreciate this method much more if you first design an algorithm for the polynomial evaluation problem by yourself and investigate its efficiency see problems and in this section's exercises . horner's rule is a good example of the representation change technique since it is based on representing p x by a formula different from . . this new formula is obtained from . by successively taking x as a common factor in the remaining polynomials of diminishing degrees p x . . . anx an x . . . x a . . for example for the polynomial p x x x x x we get p x x x x x x x x x x x x x x x x x . . it is in formula . that we will substitute a value of x at which the polynomial needs to be evaluated. it is hard to believe that this is a way to an efficient algorithm but the unpleasant appearance of formula . is just that an appearance. as we shall see there is no need to go explicitly through the transformation leading to it all we need is an original list of the polynomial's coefficients. the pen and pencil calculation can be conveniently organized with a tworow table. the first row contains the polynomial's coefficients including all the coefficients equal to zero if any listed from the highest an to the lowest a . except for its first entry which is an the second row is filled left to right as follows the next entry is computed as the x's value times the last entry in the second row plus the next coefficient from the first row. the final entry computed in this fashion is the value being sought. example evaluate p x x x x x at x . coefficients x . . . . thus p . on comparing the table's entries with formula . you will see that . is the value of x at x . is the value of x x at x . is the value of x x x at x and finally . is the value of x x x x p x at x . pseudocode of this algorithm is the shortest one imaginable for a nontrivial algorithm algorithm horner p ..n x evaluates a polynomial at a given point by horner's rule input an array p ..n of coefficients of a polynomial of degree n stored from the lowest to the highest and a number x output the value of the polynomial at x p p n for i n downto do p x p p i return p the number of multiplications and the number of additions are given by the same sum n m n a n n. i to appreciate how efficient horner's rule is consider only the first term of a polynomial of degree n anxn. just computing this single term by the bruteforce algorithm would require n multiplications whereas horner's rule computes in addition to this term n other terms and it still uses the same number of multiplications! it is not surprising that horner's rule is an optimal algorithm for polynomial evaluation without preprocessing the polynomial's coefficients. but it took scientists years after horner's publication to come to the realization that such a question was worth investigating. horner's rule also has some useful byproducts. the intermediate numbers generated by the algorithm in the process of evaluating p x at some point x turn out to be the coefficients of the quotient of the division of p x by x x and the final result in addition to being p x is equal to the remainder of this division. thus according to example the quotient and the remainder of the division of x x x x by x are x x x and respectively. this division algorithm known as synthetic division is more convenient than socalled long division. 