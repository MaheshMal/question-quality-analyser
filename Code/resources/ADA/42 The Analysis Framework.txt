in this section we outline a general framework for analyzing the efficiency of algorithms. we already mentioned in section . that there are two kinds of efficiency time efficiency and space efficiency. time efficiency also called time complexity indicates how fast an algorithm in question runs. space efficiency also called space complexity refers to the amount of memory units required by the algorithm in addition to the space needed for its input and output. in the early days of electronic computing both resources time and space were at a premium. half a century of relentless technological innovations have improved the computer's speed and memory size by many orders of magnitude. now the amount of extra space required by an algorithm is typically not of as much concern with the caveat that there is still of course a difference between the fast main memory the slower secondary memory and the cache. the time issue has not diminished quite to the same extent however. in addition the research experience has shown that for most problems we can achieve much more spectacular progress in speed than in space. therefore following a well established tradition of algorithm textbooks we primarily concentrate on time efficiency but the analytical framework introduced here is applicable to analyzing space efficiency as well. 