in this section we discuss several algorithms for solving nonlinear equations in one unknown f x . . there are several reasons for this choice among subareas of numerical analysis. first of all this is an extremely important problem from both a practical and theoretical point of view. it arises as a mathematical model of numerous phenomena in the sciences and engineering both directly and indirectly. recall for example that the standard calculus technique for finding extremum points of a function f x is based on finding its critical points which are the roots of the equation f x . second it represents the most accessible topic in numerical analysis and at the same time exhibits its typical tools and concerns. third some methods for solving equations closely parallel algorithms for array searching and hence provide examples of applying general algorithm design techniques to problems of continuous mathematics. let us start with dispelling a misconception you might have about solving equations. your experience with equation solving from middle school to calculus courses might have led you to believe that we can solve equations by factoring or by applying a readily available formula. sorry to break it to you but you have been deceived with the best of educational intentions of course you were able to solve all those equations only because they had been carefully selected to make it possible. in general we cannot solve equations exactly and need approximation algorithms to do so. this is true even for solving the quadratic equation ax bx c because the standard formula for its roots x b b ac a requires computing the square root which can be done only approximately for most positive numbers. in addition as we discussed in section . this canonical formula needs to be modified to avoid the possibility of low accuracy solutions. what about formulas for roots of polynomials of degrees higher than two? such formulas for third and fourth degree polynomials exist but they are too cumbersome to be of practical value. for polynomials of degrees higher than four there can be no general formula for their roots that would involve only the polynomial's coefficients arithmetical operations and radicals taking roots . this remarkable result was published first by the italian mathematician and physician paolo ruffini in and rediscovered a quarter century later by the norwegian mathematician niels abel it was developed further by the french mathematician evariste galois . the impossibility of such a formula can hardly be considered a great disappointment. as the great german mathematician carl friedrich gauss put it in his thesis of the algebraic solution of an equation was no better than devising a symbol for the root of the equation and then saying that the equation had a root equal to the symbol oco . we can interpret solutions to equation . as points at which the graph of the function f x intersects with the x axis. the three algorithms we discuss in this section take advantage of this interpretation. of course the graph of f x may intersect the x axis at a single point e.g. x at multiple or even infinitely many points sin x or at no point ex . equation . would then have a single root several roots and no roots respectively. it is a good idea to sketch a graph of the function before starting to approximate its roots. it can help to determine the number of roots and their approximate locations. in general it is a good idea to isolate roots i.e. to identify intervals containing a single root of the equation in question. 