Blocking of Records
                   In unbuffered processing of a file by a process, the time spent in performing
                   I/O operations may dominate the elapsed time of the process. Even in buffered



                                                                      Chapter 14  Implementation of File Operations  585
processing     of a file, tw     >  0  if tio  >  tp,     or  tio  >  tc + tp  [see Eqs. (14.3) and
(14.6)]. Thus both unbuffered and buffered processing of files would benefit from
a reduction in tio. The technique of blocking of records reduces the effective I/O
time per record by reading or writing many records in a single I/O operation.
From Eq. (14.1), tio = ta + tx. Hence, a program that processes two records from
a file that does not employ blocking would incur the total I/O time of 2 ×(ta +tx).
If blocking is employed and a process reads or writes two records in a single I/O
operation, the total I/O time would reduce to ta + 2 × tx.
Logical and Physical Records           When several records are read or written together,
it is necessary to differentiate between how file data is accessed and processed in
a process, and how it is written on an I/O device. A logical record is the unit of
file data for accessing and processing in a process. A physical record, also called a
block, is the unit of data for transfer to or from an I/O device. The blocking factor
of a file is the number of logical records in one physical record. A file is said to
employ blocking of records if the blocking factor is greater than 1. Figure 14.19
shows a file that uses a blocking factor of 3. Note that when blocking is employed,
interrecord gaps on the I/O media separate physical records, i.e., blocks, rather
than logical records.
Deblocking Actions     A read operation on a file containing blocked records trans-
fers m logical records to memory, where m is the blocking factor. Actions for
extracting a logical record from a block for use in a process are collectively called
deblocking actions.
Figure 14.20 shows a program that manipulates a file with blocked records in
an unbuffered manner. The main loop of the program reads one physical record
in each iteration. It contains an inner loop that extracts logical records from a
physical record and processes them. Thus, an I/O operation is initiated only after
                    Interrecord                                            Interrecord
                       gap                                                 gap
                                    Logical      Logical      Logical
                                    record        record           record
                                       Physical record (i.e., block)
Figure  14.19  A file with blocking factor = 3.
               start an I/O operation for read (F, Rec_area);
               await I/O completion;
               while (not end_of_file(F ))
                    for i := 1 to m
                       { extract i th record in Rec_area and process it }
                    start an I/O operation for read (F, Rec_area);
                    await I/O completion;
               end
Figure  14.20  Processing of a file with blocked records in an unbuffered manner.



586  Part 4  File Systems
                   m records are processed. A similar logic can be incorporated into the programs of
                   Figures 14.17(b), (c) to achieve buffered processing of a file containing blocked
                   records.
                   Choice of Blocking Factor         Generalizing on the previous discussion,we can say
                   that if slr and spr represent the size of a logical and a physical record, respectively,
                   spr  =   m × slr.    The    I/O  time  per  physical     record,     (tio )pr ,  and   the  I/O      time  per
                   logical record, (tio)lr, are given by
                                                          (tio)pr = ta + m × tx                                         (14.8)
                                                          (tio)lr  =   ta   +  tx                                       (14.9)
                                                                       m
                        Thus blocking reduces the effective I/O time per logical record, which would
                   benefit   both    buffered  and   unbuffered        processing       of  a  file.  If  tx  <  tp,    with  an
                   appropriate choice of m it is possible to reduce (tio)lr such that (tio)lr  tp. Once
                   it is achieved, from Eqs. (14.3) and (14.6) it follows that buffering can be used
                   to reduce the wait time per record to tc. The next example illustrates how (tio)lr
                   varies with the blocking factor.
·
     Example 14.5  Blocking of Records
                   Table 14.5 shows the variation of (tio)lr with m for a disk device with ta = 10 ms,
                   transfer rate of 800 kB/s, where 1 kB/s = 1000 bytes per second, and slr = 200
                                                                                   200
                   bytes.  tx,  the  transfer  time  per  logical  record,     is       ms,  i.e.,  0.25  ms.  (tio)pr  and
                                                                                   800
                   (tio)lr are computed according to Eqs. (14.8) and (14.9). If tp = 3 ms, m  4
                   makes (tio)lr < tp.
                   ·
                        The value of m is bounded on the lower side by the desire to make (tio)lr  tp.
                   On the higher side, it is bounded by the memory commitment for file buffers, and
                   the size of a disk track or sector. A practical value of the blocking factor is the
                   smallest value of m that makes (tio)lr  tp. The next example illustrates processing
                   of a file employing both blocking and buffering of records.
                            Table 14.5         Variation       of  (tio)lr  with Blocking Factor
                                Blocking                           ta          m × tx          (tio)pr         (tio)lr
                             factor (m)        Block size          ms              ms          ms              ms
                                     1               200           10          0.25            10.25           10.25
                                     2               400           10          0.50            10.50           5.25
                                     3               600           10          0.75            10.75           3.58
                                     4               800           10          1.00            11.00           2.75
