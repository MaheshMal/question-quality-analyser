Managing The Memory Hierarchy
As discussed earlier in Chapter 2, a memory hierarchy comprises cache memo-
ries like the L1 and L3 caches, the memory management unit (MMU), memory,
and a disk. Its purpose is to create an illusion of a fast and large memory at a
low cost. The upper half of Figure 11.1 illustrates the memory hierarchy. The
                                                                                           363



364  Part 3  Memory Management
                                                            CPU
                                                 L1 cache
                                                 MMU
                                                 L3 cache
                                                 Memory
                                                                  Virtual
                                                                  memory
                                                            Disk
             Levels       How managed                             Performance issues
             Caches       Allocation and use is managed by        Ensuring high hit ratios
                          hardware
             Memory       Allocation is managed by the kernel     (1) Accommodating more process
                          and use of allocated memory is managed  in memory, (2) Ensuring high hit ratios
                          by run-time libraries
             Disk         Allocation and use is managed by        Quick loading and storing of parts of
                          the kernel                              process address spaces
             Figure 11.1  Managing the memory hierarchy.
             CPU refers to the fastest memory, the cache, when it needs to access an instruc-
             tion or data. If the required instruction or data is not available in the cache,
             it is fetched from the next lower level in the memory hierarchy, which could
             be a slower cache or the random access memory (RAM), simply called mem-
             ory in this book. If the required instruction or data is also not available in
             the next lower level memory, it is fetched there from a still lower level, and so
             on. Performance of a process depends on the hit ratios in various levels of the
             memory hierarchy, where the hit ratio in a level indicates what fraction of instruc-
             tions or data bytes that were looked for in that level were actually present in it.
             Eq. (2.1) of Chapter 2 indicates how the effective memory access time depends on a
             hit ratio.
             The caches are managed entirely in the hardware. The kernel employs special
             techniques to provide high cache hit ratios for a process. For example, the kernel
             switches between threads of the same process whenever possible to benefit from
             presence of parts of the process address space in the cache, and it employs affinity
