Model of a Distributed System
A system model is employed to determine useful properties of a distributed
system, such as the impact of faults on its functioning and the latency and
cost of message communication. A distributed system is typically modeled as a
graph
                                   S = (N, E)
where N and E are sets of nodes and edges, respectively. Each node may represent
a host, i.e., a computer system, and each edge may represent a communication
link connecting two nodes; however, as discussed later, nodes and edges may also
have other connotations. The degree of a node is the number of edges connected
to it. Each node is assumed to have an import list describing nonlocal resources
and services that the node can utilize, and an export list describing local resources
of the node that are accessible to other nodes. For simplicity, we do not include
the name server (see Section 16.4.1) in the system model.
Two kinds of graph models of a distributed system are useful in practice. A
physical model is used to represent the arrangement of physical entities in a dis-
tributed system. In this model, nodes and edges have the implications described
earlier, i.e., a node is a computer system and an edge is a communication link.
A logical model is an abstraction. Nodes in a logical model represent logical
entities like processes and edges represent relationships between entities. A log-
ical model may use undirected or directed edges. An undirected edge represents
a symmetric relationship like two-way interprocess communication. A directed
edge represents an asymmetric relationship like the parent­child relationship
between processes or one-way interprocess communication. Note that nodes and
edges in a logical model may not have a one-to-one correspondence with physical
entities in a distributed system.
A system model is analyzed to determine useful properties of a system such
as the ones described in Table 16.8. One important property is the resiliency of
a system, which is its ability to withstand faults without facing disruption. A
k-resilient system can withstand any combination of up to k  faults. If n  is the
smallest degree of a node, at least n faults must occur for a node to get isolated;
however, fewer faults may be able to partition a system (see Exercise 16.7). As
illustrated in Example 16.1, analysis of the system model can be used as a network
design technique as well.



686  Part 5  Distributed Operating Systems
                   Table 16.8           System  Properties Determined by Analyzing
                   a System Model
                      Property                   Description
                      Impact of faults           Faults can isolate a node from the rest of the system or
                                                 partition a system, i.e., split it into two or more parts
                                                 such that a node in one part cannot be reached from a
                                                 node in another part.
                      Resiliency                 A system is said to be k-resilient, where k is a constant,
                                                 if k is the largest number of faults that the system can
                                                 withstand without disruption.
                      Latency between two        The minimum latency of a communication path
                      nodes                      depends on the minimum latency of each
                                                 communication link in it. The minimum latency
                                                 between two nodes is the smallest of the minimum
                                                 latencies across all paths between the nodes.
                      Cost of sending            The cost of this operation depends on topology of the
                      information to every       system and the algorithm used for sending the
                      node                       information. In a fully connected system containing n
                                                 nodes, the cost can be as low as n - 1 messages. The
                                                 cost may be more if the system is not fully connected.
·
     Example 16.1  Resiliency of a System
                   If it is expected that only one or two sites in a system may suffer faults simul-
                   taneously, and faults never occur in communication links, availability of a
                   resource is guaranteed if three units of the resource exist in three different sites
                   in the system. If communication links can also suffer faults but the total num-
                   ber of faults does not exceed two, three units of each resource must exist and
                   each site must have at least three communication links connected to it. In such
                   a system, a resource becomes unavailable only if three or more faults occur.
                   ·
                      When a node wishes to send some information to all other nodes in the
                   system, it can send the information to each of its neighbors in the form of a
                   message and each neighbor receiving such a message for the first time can send
                   similar messages to its neighbors, and so on. In this method, a node would receive
                   the information as many times as the number of edges connected to it, so a
                   total of e messages are required, where e is the number of edges in the system.
                   However, because a node needs to receive a message only once, it is possible to use
                   knowledge of the system's topology to manage with fewer messages. For example,
                   if the system is fully connected, it is possible to use a simpler protocol in which
                   only the originator node sends messages to its neighbors. This operation would
                   require only n - 1 messages.
