Nonpreemptive Scheduling Policies
In nonpreemptive scheduling, a server always services a scheduled request to
completion. Thus, scheduling is performed only when servicing of a previously
scheduled request is completed and so preemption of a request as shown in
Figure 7.1 never occurs. Nonpreemptive scheduling is attractive because of its
simplicity--the scheduler does not have to distinguish between an unserviced
request and a partially serviced one.
     Since a request is never preempted, the scheduler's only function in improving
user service or system performance is reordering of requests. We discuss three
nonpreemptive scheduling policies in this section:
·  First-come, first-served (FCFS) scheduling
·  Shortest request next (SRN) scheduling
·  Highest response ratio next (HRN) scheduling
     We illustrate the operation and performance of various scheduling policies
with the help of the five processes shown in Table 7.2. For simplicity we assume
that these processes do not perform I/O operations.
7.2.1 FCFS Scheduling
Requests are scheduled in the order in which they arrive in the system. The list
of pending requests is organized as a queue. The scheduler always schedules the
first request in the list. An example of FCFS scheduling is a batch processing
system in which jobs are ordered according to their arrival times (or arbitrarily,
     Table 7.2                      Processes for Scheduling
                    Process            P1    P2     P3  P4    P5
                    Admission time     0     2      3   4     8
                    Service time       3     3      5   2     3



234  Part 2  Process Management
                                     Completed process           Processes in system      Scheduled
                              Time   id    ta        w           (in FCFS order)          process
                                  0  ­     ­         ­           P1                       P1
                                  3  P1    3       1.00          P2, P3                   P2
                                  6  P2    4       1.33          P3, P4                   P3
                                 11  P3    8       1.60          P4, P5                   P4
                                 13  P4    9       4.50          P5                       P5
                                 16  P5    8       2.67          ­                        ­
                                                        ta = 6.40 seconds
                                                         w = 2.22
                              P1
                              P2
                              P3
                              P4
                              P5
                                  0            5                     10               15     Time
                  Figure 7.2  Scheduling using the FCFS policy.
                  if they arrive at exactly the same time) and results of a job are released to the
                  user immediately on completion of the job. The following example illustrates
                  operation of an FCFS scheduler.
·
     Example 7.1  FCFS Scheduling
                  Figure 7.2 illustrates the scheduling decisions made by the FCFS scheduling
                  policy for the processes of Table 7.2. Process P1 is scheduled at time 0. The
                  pending list contains P2 and P3 when P1 completes at 3 seconds, so P2 is
                  scheduled. The Completed column shows the id of the completed process and
                  its turnaround time (ta) and weighted turnaround (w). The mean values of ta
                  and w (i.e., ta and w) are shown below the table. The timing chart of Figure 7.2
                  shows how the processes operated.
                  ·
                     From Example 7.1, it is seen that considerable variation exists in the weighted
                  turnarounds provided by FCFS scheduling. This variation would have been larger
                  if processes subject to large turnaround times were short--e.g., the weighted
                  turnaround of P4 would have been larger if its execution requirement had been
                  1 second or 0.5 second.
                  7.2.2 Shortest Request Next (SRN) Scheduling
                  The SRN scheduler always schedules the request with the smallest service time.
                  Thus, a request remains pending until all shorter requests have been serviced.



                                                                             Chapter 7  Scheduling       235
                         Completed process  Processes         Scheduled
                   Time  id     ta  w       in system         process
                   0     ­      ­   ­       {P1}              P1
                   3     P1     3   1.00    {P2, P3}          P2
                   6     P2     4   1.33    {P3, P4}          P4
                   8     P4     4   2.00    {P3, P5}          P5
                   11    P5     3   1.00    {P3}              P3
                   16    P3     13  2.60    {}                ­
                                    ta = 5.40 seconds
                                    w = 1.59
            P1
            P2
            P3
            P4
            P5
                0            5              10                    15   Time
Figure 7.3  Scheduling using the shortest request next (SRN)  policy.
                                                                                                         ·
Shortest Request Next (SRN) Scheduling                                                  Example     7.2
Figure 7.3 illustrates the scheduling decisions made by the SRN scheduling
policy for the processes of Table 7.2, and the operation of the processes. At
time 0, P1 is the only process in the system, so it is scheduled. It completes at
time 3 seconds. At this time, processes P2 and P3 exist in the system, and P2
is shorter than P3. So P2 is scheduled, and so on.
The mean turnaround time and the mean weighted turnaround are bet-
ter than in FCFS scheduling because short requests tend to receive smaller
turnaround times and weighted turnarounds than in FCFS scheduling. This
feature degrades the service that long requests receive; however, their weighted
turnarounds do not increase much because their service times are large. The
throughput is higher than in FCFS scheduling in the first 10 seconds of the
schedule because short processes are being serviced; however, it is identical at
the end of the schedule because the same processes have been serviced.
                                                                                   ·
Use of the SRN policy faces several difficulties in practice. Service times of
processes are not known to the operating system a priori, hence the OS may expect
users to provide estimates of service times of processes. However, scheduling
performance would be erratic if users do not possess sufficient experience in
estimating service times, or they manipulate the system to obtain better service
by giving low service time estimates for their processes. The SRN policy offers
