Summary
During a file processing activity, the file system            I/O operation has completed, which enables the
implements sharing and protection of files, while             kernel to switch the CPU to another process. It
the input output control system (IOCS) actually               uses disk scheduling to perform the I/O operations
implements  file  operations.     The   IOCS   is  itself     directed at a disk in an order that would reduce the
structured into two layers called access methods              movement of read­write heads of the disk, which
and physical IOCS that ensure good performance                increases the throughput of the disk and reduces
of a file processing activity, and good throughput            the average wait time of I/O operations.
of I/O devices, respectively. In this chapter, we stud-       An access method improves the performance of
ied the techniques employed by the access methods             a file processing activity within a process through
and the physical IOCS.                                        the techniques of buffering and blocking of records.
     Good throughput of an I/O device is achieved             A buffer is a memory area used to temporarily hold
through joint actions of the I/O device and the               data that has been read off a device or that is to be
IOCS.  The  I/O   device  is  designed   such      that  it   written on it. For an input file, the technique of
is reliable, and I/O operations incur short access            buffering tries to prefetch the data so that it would
time--which is the time spent in positioning the              be available to a process without having to perform
I/O media or the read­write heads prior to data               an I/O operation, which reduces or eliminates the
transfer--and  achieve    high    data   transfer  rates.     wait time. For an output file, it copies the data into
Data staggering techniques, disk attachment tech-             the buffer and lets the process continue its oper-
nologies, and redundant arrays of inexpensive disks           ation; the actual writing is performed later. The
(RAID) are relevant in this context.                          technique of blocking reads more data off a device
     Even with fast access and high data trans-               in a single I/O operation than required by a process
fer rates of I/O devices, a process performing an             at a time; it reduces the number of I/O operations
I/O operation incurs considerable wait time until             to be performed.
the I/O operation completes. The physical IOCS                Caching is the technique of keeping some of
provides  two  basic  capabilities   to  enhance     sys-     the file data in memory, so that it can be accessed
tem  performance:     It  blocks  a  process  until      its  without     having  to  perform  an  I/O       operation.



600           Part 4      File Systems
Caching reduces the number of I/O operations                              The virtual memory handler also uses a cache
performed to access data stored in files, thereby                    called a page cache, which contains pages of pro-
improving performance of file processing activi-                     cesses, to improve virtual memory performance.
ties in processes and also improving performance                     However, since the swap areas of processes are
of the system. The physical IOCS implements a                        implemented on a disk, use of the page cache
disk cache to reduce the number of I/O opera-                        and  the  disk  cache  involves        copying    of   pages
tions performed for accessing the files stored on                    between the two caches, which consumes CPU time
a disk. An access method implements a file cache                     and ties up memory because of multiple copies of a
to reduce the number of I/O operations performed                     page. Operating systems therefore use a unified disk
during the processing of an individual file in a                     cache to reduce copying and eliminate the need for
process.                                                             multiple copies of pages.
TEST  YOUR CONCEPTS                                                                                                             ·
14.1  Classify each of the following statements as true                        ii. Increase the capacity of a disk
      or false:                                                                iii. None of (i)­(ii)
      a. When parity bits are used for reliable record-                   b.   Data staggering techniques are used to
              ing/reading of data, an error correction code                    i. Reduce the number of disk operations
              requires more parity bits than an error detec-                   while a file is processed
              tion code.                                                       ii. Reduce disk head movement between disk
          b. Restricting the disk space allocation for a file                  blocks having adjoining addresses
              to a cylinder group--which is a group of con-                    iii. Reduce  rotational      delays   while      disk
              secutive cylinders on a disk--reduces disk                       blocks       having    adjoining   addresses     are
              head movement while the file is processed.                       accessed.
          c. RAID level 4, which uses block-interleaved                        iv. Improve  effectiveness   of   buffering      and
              parity,   provides     parallelism  between     small            blocking of file records
              I/O operations.                                             c.   Disk scheduling
      d. Blocking of records speeds up processing of                           i. Reduces the number of I/O operations
              sequential files.                                                performed on a disk
          e. Buffering of records speeds up processing of                      ii. Reduces the average disk head movement
              direct-access files.                                             per I/O operation
          f.  The  SCAN        disk  scheduling    policy   suffers            iii. Aims at speeding up processing of a file
              from starvation.                                            d.   A program executes a read statement on a
      g. The physical IOCS provides a method to                                file alpha 100 times during its execution;
              avoid the busy wait condition while a process                    however only 50 I/O operations are actually
              awaits completion of its I/O operation.                          performed to read data from the file alpha.
      h. If tx     <     tp, it is possible to reduce tw      to tc            This is possible if
              through appropriate buffering and blocking.                      i. The   access      method  used    for    the  file
          i. Using a blocking factor of m reduces the                          alpha        employs         buffering    without
              effective   I/O  time  per  logical     record  by  a            blocking
              factor of m.                                                     ii. The  access      method  does    not    employ
14.2  Select       the   correct    alternative   in  each  of  the            blocking and the physical IOCS does not
      following questions:                                                     employ a disk cache
      a. A disk cache is used to                                               iii. Either the access method employs block-
              i. Reduce the number of I/O operations on                        ing or the physical IOCS employs a disk
              a disk                                                           cache



                                                            Chapter 14  Implementation of File Operations        601
EXERCISES                                                                                                                  ·
14.1  Explain how (and whether) buffering and block-               algorithm on the conventional disk described in
      ing of records is beneficial for the following kinds         Example 14.3?
      of files:                                             14.8   A process manipulates a sequential-access file.
      a. A sequential-access file                                  The I/O and processing times for each record in
      b. An index sequential-access file                           the file are as follows:
      c. A direct-access file                                           Access time of device       = 10 ms
14.2  An update file is one that is read and modified                   Transfer time per record    = 6 ms
      during processing--a program reads a record,                      Largest number of records = 5 records
      modifies it in memory, and writes it back into                    required together
      the file.                                                         Processing time per record = 10 ms
      a. Which I/O device is best suited for recording
      an update file?                                                   a. If two buffers are used, find the value of the
      b. Is buffering and blocking of records useful                    smallest blocking factor that can minimize
      for an update file?                                               the wait time per record.
      Justify your answers.                                             b. If two buffers and a blocking factor of 5
14.3  Discuss how the throughput of a disk device                       are used, what is the minimum number of
      can be optimized in a file system that performs                   records that are present in memory at any
      noncontiguous allocation of disk blocks to files.                 time? (Assume that a process initiates an I/O
      (Hint: Think of organization of blocks in the free                operation on a buffer after processing the last
      list, data staggering, and cylinder groups.)                      record in it--see Figure 14.20.)
14.4  A sectored disk has the following characteristics:    14.9   A sequential file is recorded by using blocking.
      Time for 1 revolution = 8 ms                                 A process manipulates it by using two buffers.
      tsect                        = 1 ms                          The I/O and processing times are as follows:
      tst                          = 3 ms                               Access time (average)       = 20 ms
      Sector size                  = 1024 bytes                         Transfer time per record    = 5 ms
      Plot the peak disk throughput against the sector                  Largest number of records = 5 records
      interleaving factor (Fint).                                       required together
14.5  Comment on the effectiveness of (a) a disk cache                  Processing time per record = 10 ms
      and (b) a RAM disk for speeding up processing                Determine optimal values of the blocking fac-
      of sequential-access and direct-access files.                tor and the number of buffers. What changes, if
14.6  Requests for I/O operations on the following                 any, would you make in your design if the largest
      tracks are pending at time = 160 ms.                         number of records that the process is likely to
                 7, 45, 98, 70, 68, 180                            require together is (i) 3 records, (ii) 8 records?
                                                                   (Hint: See Example 14.4.)
      If the requests are made in the above order, con-     14.10  One buffer is used in processing the file info of
      struct a table analogous to Table 14.16 for the              Exercise 13.6. Calculate the elapsed time of the
      disk of Example 14.3.                                        process if the copying time per record is 0.5 ms.
14.7  A biased disk is a hypothetical disk device whose            Explain your calculations.
      seek time for track n is a linear function in n (for  14.11  Classify the following statement as true or false:
      example, seek time = 0.1 × n). {seqi} is the set             "By judicious selection of the blocking factor
      of I/O operations requested over a certain period            and the number of buffers, it is always possible
      of time. Is the order in which I/O operations are            to reduce the wait time to tc."
      scheduled on a biased disk by the SSTF algo-          14.12  A process is expected to open a file before access-
      rithm identical to the order in which the same               ing it. If it tries to access a file without opening,
      I/O operations would be scheduled by a SCAN                  the file system performs an open before



602         Part 4    File Systems
         implementing the access. A system program-                         with the special I/O technique. In Section 14.8,
         mers' handbook warns all programmers to open                       the speedup factor due to buffering was shown
         a file before accessing it or suffer a performance                 to have an upper bound of 2. Develop a for-
         penalty. Explain the nature and causes of the                      mula for speedup factor when a process does
         performance penalty.                                               not use buffers while processing a file containing
14.13    How do different disk scheduling algorithms                        blocked records. Can the value of this speedup
         influence the effectiveness of I/O buffering?                      factor exceed 2? If so, give an example.
14.14    A process manipulates an input file using many              14.18  Develop a formula for speedup factor when a
         buffers. Which of the following statements are                     process uses two buffers while processing a file
         accurate? Explain your reasoning.                                  containing blocked records and tp  tx.
         a. "Of all the disk scheduling algorithms, FCFS             14.19  Describe the implications of a file or disk cache
            disk scheduling is likely to provide the best                   for file system reliability. Unix supports a sys-
            elapsed time performance for the process."                      tem call flush () that forces the kernel to write
         b. "Data     staggering      is  effective  only  during           buffered output onto the disk. Can a program-
            reading of the first few records in the file; it is             mer use flush () to improve the reliability of his
            not effective during reading of other records                   files?
            in the file."                                            14.20  The lseek command of Unix indicates the off-
14.15    A  magnetic       tape  has  a   recording  density     of         set of the next byte in a sequential-access file
         80 bits/cm along a track. The tape moves at                        to be read or written. When a process wishes
         a velocity of 2 meters per second while read-                      to perform a read or write operation, it issues an
         ing/writing data. The inter-record gap is 0.5 cm                   lseek command. This command is followed by
         wide, and the access time of the tape is 5 ms. A                   an actual read or write command.
         sequential file containing 5000 records, each of                   a. What are the advantages of using the lseek
         size 400 bytes, is stored on this magnetic tape.                       command?
         Calculate the length of the magnetic tape occu-                    b. What is the sequence of actions the file system
         pied by the file and the total I/O time required                       and the IOCS should execute when a process
         to read the file if the file is recorded (a) without                   issues an lseek command.
         blocking and (b) with a blocking factor of 4.               14.21  Show that division of the binary polynomial
14.16    A process uses many buffers while manipulating                     formed from nd + nc bits in a record, where
         a file containing blocked records. A system fail-                  nd  is    the  number  of  data     bits  and  nc  is  the
         ure occurs during its execution. Is it possible to                 number of CRC bits, by the CRC polynomial
         resume execution of the process from the point                     will yield a 0 remainder. (Hint: A term of xi,
         of failure?                                                        i = 1, . . . , nd - 1, in the polynomial for the nd
14.17    The speedup factor resulting from the use of a                     bits of data is the term of xi+nc in the polyno-
         special I/O technique is the ratio of the elapsed                  mial for the nd + nc bits in the record. Also note
         time of a process without blocking or buffering                    that modulo-2 addition and subtraction produce
         of records to the elapsed time of the same process                 identical results.)
BIBLIOGRAPHY                                                                                                                       ·
Tanenbaum (1990) describes I/O hardware. Ruemmler                    disk drives. Lumb et al. (2000) discusses how back-
and Wilkes (1994) presents a disk drive model that can               ground activities like disk reorganization can be per-
be used for performance analysis and tuning. Teorey                  formed during mechanical positioning of disk heads
and Pinkerton (1972) and Hofri (1980) compare var-                   for   servicing  foreground   activities,  and   the  effect  of
ious  disk  scheduling     algorithms,    while      Worthington     disk  scheduling      algorithms  on  effectiveness       of  this
et  al.  (1994)  discusses  disk      scheduling     for   modern    approach.



                                                             Chapter 14  Implementation of File Operations           603
    Chen and Patterson (1990) and Chen et al. (1994)         6.   Chau, A., and A. W. Fu (2000): "A gracefully
describe RAID organizations, while Wilkes et al. (1996)           degradable declustered RAID architecture with
and Yu et al. (2000) discuss enhancements to RAID sys-            near optimal maximal read and write
tems. Alvarez et al. (1996) discusses how multiple failures       parallelism," Cluster Computing, 5 (1), 97­105.
can be tolerated in a RAID architecture, while Chau          7.   Chen, P. M., and D. Patterson (1990):
and Fu (2000) discusses a new layout method to evenly             "Maximizing performance in a striped disk
distribute  parity  information  for  declustered  RAID.          array," Proceedings of 17th Annual International
Gibson et al. (1997) discusses file servers for network-          Symposium on Computer Architecture,
attached disks. Nagle et al. (1999) discusses integration         May 1990.
of user-level networking with network-attached storage       8.   Chen, P. M., E. K. Lee, G. A. Gibson,
(NAS). Curtis Preston (2002) discusses NAS and stor-              R. H. Katz, and D. A. Patterson (1994):
age area networks (SANs), while Clark (2003) is devoted           "RAID--high performance, reliable secondary
to the SAN technology. Toigo (2000) discusses modern              storage," Computing Surveys, 26 (2), 145­186.
disks and future storage technologies.                       9.   Clark, T. (2003): Designing Storage Area
    Disk    caching  is   discussed     in  Smith  (1985).        Networks: A Practical Reference for Implementing
Braunstein et al. (1989) discusses how file accesses are          Fibre Channel and IP SANS, 2nd ed., Addison
speeded up when virtual memory hardware is used to                Wesley Professional.
look up the file buffer cache.                               10.  Curtis Preston, W. (2002): Using SANs and NAS,
    McKusick et al. (1996) discusses the Berkeley fast            O'Reilly, Sebastopol,Calif.
file system for Unix 4.4BSD. Bach (1986) and Vahalia         11.  Custer, H. (1994): Inside the Windows NT File
(1996) discuss other Unix file systems. Ruemmler and              System, Microsoft Press, Redmond,Wash.
Wilkes (1993) presents performance studies concerning        12.  Gibson, G. A., D. Nagle, K. Amiri, F. W. Chang,
various characteristics of disk accesses made in the Unix         E. M. Feinberg, H. Gobioff, C. Lee, B. Ozceri,
file system. Beck et al. (2002) and Bovet and Cesati              E. Riedel, D. Rochberg, and J. Zelenka (1997):
(2005) discuss the I/O schedulers of Linux. Love (2004,           "File server scaling with network-attached secure
2005) describes the I/O schedulers in Linux 2.6. Custer           disks," Measurement and Modeling of Computer
(1994) describes the Windows NT file system, while                Systems, 272­284.
Russinovich and Solomon (2005) discusses NTFS for            13.  Hofri, M. (1980): "Disk scheduling: FCFS vs.
Windows.                                                          SSTF revisited," Communications of the ACM,
                                                                  23 (11), 645­53.
1.  Alvarez, G. A., W. A. Burkhard, F. Cristian              14.  Iyer, S., and P. Druschel (2001): "Anticipatory
    (1996): "Tolerating multiple failures in RAID                 scheduling: a disk scheduling framework to
    architectures with optimal storage and uniform                overcome deceptive idleness in synchronous I/O,"
    declustering," Proceedings of the 24th Annual                 Proceedings of the 18th ACM Symposium on
    International Symposium on Computer                           Operating Systems Principles.
    Architecture, 62­72.                                     15.  Lampson, B. (1981): "Atomic transactions," in
2.  Bach, M. J. (1986): The design of the Unix                    Distributed Systems--Architecture and
    operating system, Prentice-Hall, Englewood                    Implementation: An Advanced Course, Goos, G.
    Cliffs, N.J.                                                  and J. Hartmanis (eds.), Springer Verlag, Berlin,
3.  Beck, M., H. Bohme, M. Dziadzka, U. Kunitz,                   246­265.
    R. Magnus, C. Schroter, and D. Verworner                 16.  Love, R. (2004): "I/O schedulers," Linux Journal,
    (2002): Linux Kernel Programming, Pearson                     118.
    Education, New York.                                     17.  Love, R. (2005): Linux Kernel Development, 2nd
4.  Bovet, D. P., and M. Cesati (2005): Understanding             ed., Novell Press.
    the Linux Kernel, 3rd ed., O'Reilly, Sebastopol,         18.  Lumb, C. R., J. Schindler, G. R. Ganger, and
    Calif.                                                        D. F. Nagle (2000): "Towards higher disk head
5.  Braunstein, A., M. Riley, and J. Wilkes (1989):               utilization: extracting free bandwidth from busy
    "Improving the efficiency of Unix buffer caches,"             disk drives," Proceedings of the 4th Symposium on
    ACM Symposium on OS Principles, 71­82.                        Operating Systems Design and Implementation.



604  Part 4          File Systems
19.  McKusick, M. K., K. Bostic, M. J. Karels, and     26.  Teorey, T. J., and T. B. Pinkerton (1972):
     J. S. Quarterman (1996): The Design and                "A comparative analysis of disk scheduling
     Implementation of the 4.4BSD Operating System,         policies," Communications of the ACM, 15 (3),
     Addison Wesley, Reading, Mass.                         177­184.
20.  Nagle D., G. Ganger, J. Butler, G. Gibson, and    27.  Toigo, J. (2000): "Avoiding a data crunch,"
     C. Sabol (1999): "Network support for                  Scientific American, 282 (5), 58­74.
     network-attached storage," Proceedings of Hot     28.  Vahalia, U. (1996): Unix Internals--The New
     Interconnects.                                         Frontiers, Prentice Hall, Englewood Cliffs, N. J.
21.  Ruemmler, C., and J. Wilkes (1993): "Unix disk    29.  Wilkes, J., R. Golding, C. Staelin, and T. Sullivan
     access patterns," Proceedings of the Winter 1993       (1996): "The HP autoRAID hierarchical storage
     USENIX Conference, 405­420.                            system," ACM Transactions on Computer
22.  Ruemmler, C., and J. Wilkes (1994): "An                Systems, 14 (1), 108­136.
     introduction to disk drive modeling," IEEE        30.  Worthington, B. L., G. R. Ganger, and Y. N. Patt
     Computer, 27 (3), 17­29.                               (1994): "Scheduling algorithms for modern disk
23.  Russinovich, M. E., and D. A. Solomon (2005):          drives," Proceedings of the 1994 ACM Sigmetrics
     Microsoft Windows Internals, 4th ed., Microsoft        Conference on Measurement and Modeling of
     Press, Redmond, Wash.                                  Computer Systems, 241­251.
24.  Smith, A. J. (1985): "Disk cache-miss ratio       31.  Yu, X., B. Gum, Y. Chen, R. Y. Wang, K. Li,
     analysis and design considerations," ACM               A. Krishnamurthy, and T. E. Anderson (2000):
     Transactions on Computer Systems, 3 (3),               "Trading capacity for performance in a disk
     161­203.                                               array," Proceedings of the 2000 Symposium on
25.  Tanenbaum, A. S. (1990): Structured Computer           Operating Systems Design and Implementation,
     Organization, 3rd ed., Prentice Hall, Englewood        243­258.
     Cliffs, N. J.
