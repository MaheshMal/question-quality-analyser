Encryption
Encryption is application of an algorithmic transformation to data. When data
is stored in its encrypted form, only a user or his process that knows how to
recover the original form of data can use it. This feature helps in preserving
confidentiality of data. Protection and security mechanisms use encryption to
guard information concerning users and their resources; however, it could also
be used to guard information belonging to users. Cryptography is the branch of
science dealing with encryption techniques.
Table 15.5 summarizes key terms and definitions used in cryptography. The
original form of data is called the plaintext form and the transformed form is
called the encrypted or ciphertext form. We use the following notation:
                      Pd  Plaintext form of data d
                      Cd  Ciphertext form of data d
where Pd  d. Encryption is performed by applying an encryption algorithm E
with a specific encryption key k to data. Data is recovered by applying a decryp-
tion algorithm D with a key k . In the simplest form of encryption called symmetric
encryption, decryption is performed by using the same key k. In advanced encryp-
tion techniques called asymmetric encryption, a different key k is used to decrypt
a ciphertext.
Figure 15.3 illustrates symmetric encryption. We represent encryption and
decryption of data by using algorithms E and D with key k as application of
functions Ek and Dk, respectively. Thus,
                          Cd = Ek(d)
                          Pd = Dk(Cd )
Obviously the functions Ek and Dk must satisfy the relation
                          Dk(Ek(d)) = d, for all d
Thus a process must be able to perform the transformation Dk in order to obtain
the plaintext form of encrypted data.
In practice, encryption is performed by standard algorithms E and D. Hence,
effectiveness of encryption depends on whether an intruder can determine the
encryption key through trial and error. Later in this section, we see how it is
impractical for an intruder to discover the encryption key because of the large
number of trials involved; however, theoretically, it is not impossible to do so.
This property makes encryption effective in a probabilistic sense, though not in
an absolute sense. Confidentiality of encrypted data follows from this property.
Confidentiality provided through encryption also helps to verify integrity of
data. If the encrypted form of data is tampered with by an intruder, its decryp-
tion by a process having the correct decryption algorithm and key would yield
unintelligible data, which would reveal that it has been altered in an unauthorized
manner. Because of this property of encrypted data, we use the term "decryp-
tion is unsuccessful" for the situation where decryption by the correct key yields
unintelligible data.



618  Part 4  File  Systems and I/O Management
                   Table 15.5     Cryptography Terms and Definitions
                   Term           Description
                   Encryption     Encryption is application of an algorithmic transformation Ek to
                                  data, where E is an encryption algorithm and k is an encryption
                                  key. It is used to protect confidentiality of data. The original data
                                  is recovered by applying a transformation Dk , where D is a
                                  decryption algorithm and k     is a decryption key. A scheme using
                                  k=k          is called symmetric encryption, and one using k = k  is
                                  called asymmetric encryption.
                   Plaintext      Data to be encrypted.
                   Ciphertext     Encrypted form of plaintext.
                   Confusion      Shannon's principle of confusion requires that changes caused in
                                  a ciphertext due to a change in a plaintext should not be easy to
                                  find.
                   Diffusion      Shannon's principle of diffusion requires that the effect of a small
                                  substring in the plaintext should be spread widely in the
                                  ciphertext.
                   Attacks on     An attack is a series of attempts by an intruder to find a
                   cryptographic  decryption function Dk. In a ciphertext only attack, the intruder
                   systems        can examine only a set of ciphertexts to determine Dk. In a known
                                  plaintext attack, the intruder has an opportunity to examine
                                  the plaintext and ciphertext form of some data, whereas in a
                                  chosen plaintext attack the intruder can choose a plaintext and
                                  obtain its ciphertext form to perform the attack.
                   One-way        A function, computation of whose inverse is expensive enough to
                   function       be considered impractical. Its use as an encryption function
                                  makes cryptographic attacks difficult.
                   Block cipher   A block cipher technique substitutes fixed-size blocks of plaintext
                                  by blocks of ciphertext. It introduces some confusion, but does
                                  not introduce sufficient diffusion.
                   Stream cipher  Both a plaintext and the encryption key are considered to be bit
                                  streams. Bits in the plaintext are encrypted by using an equal
                                  number of bits in the encryption key. A stream cipher does not
                                  introduce confusion and introduces limited diffusion; however,
                                  some of its variants can introduce a high level of diffusion.
                   DES            The Data Encryption Standard of the National Bureau of
                                  Standards, adopted in 1976, uses a block cipher technique and
                                  provides cipher block chaining as an option. It contains 16
                                  iterations, which perform complex transformations on the
                                  plaintext or the intermediate ciphertext.
                   AES            The Advanced Encryption Standard is the new standard adopted
                                  by the National Institute of Standards and Technology (formerly
                                  known as the National Bureau of Standards) in 2001. It performs
                                  between 10 and 14 rounds of operations, each involving only
                                  substitutions and permutations, on plaintext blocks of 128, 192,
                                  or 256 bits.



                                                                Chapter 15  Security and Protection  619
                        Encryption                  Decryption
                        key (k)                     key (k)
             Plaintext  Encryption  Ciphertext      Decryption  Plaintext
             (Pd)       algorithm                   algorithm   (Pd)
                        (E)                   (Cd)  (D)
Figure 15.3  Symmetric encryption of data d.
15.4.1 Attacks on Cryptographic Systems
An attack on a cryptographic system consists of a series of attempts to find the
decryption function Dk. Since Dk(Ek(d)) = d, Dk is the inverse of Ek. Hence
an attack implies finding the inverse of Ek. If we define the quality of encryption
to mean its ability to withstand attacks, the aim of an encryption technique is to
perform high-quality encryption at a low cost. The encryption quality is best if
the function Ek is a one-way function, i.e., if computation of its inverse through
an attack involves an impractical amount of effort and time.
An intruder, who may be within an OS or outside it, can launch a vari-
ety of attacks on a cryptographic system. The nature of an attack depends on
the position that an intruder can occupy within the system. If an intruder can-
not invoke the encryption function and can only examine data in the ciphertext
form, he has to depend on guesswork. This is a trial-and-error approach in which
the function Dk is guessed repeatedly until its application to a ciphertext pro-
duces intelligible output. This attack is called an exhaustive attack because all
possibilities for Dk may have to be tried out.
An exhaustive attack involves a very large number of trials. For example, 255
trials would be needed to break an encryption scheme employing a 56-bit key by
using an exhaustive attack. The huge number was believed to make such a scheme
computationally secure, and the quality of encryption was believed to improve
with an increase in the number of bits in an encryption key. However, powerful
mathematical techniques like differential analysis may be employed to find Dk
much more easily than in an exhaustive attack. Intruders may also employ the
attacks described below that involve fewer trials than an exhaustive attack. We
see examples of these attacks when we discuss password security in Section 15.5.
In the ciphertext only attack, an intruder has access only to a collection of
ciphertexts. Consequently, to make the attack more efficient than an exhaus-
tive attack, the intruder relies on clues extracted through analysis of strings in
ciphertexts and information about features of plaintexts, such as whether they
consist only of words in a dictionary. In the known plaintext attack, an intruder
knows the plaintext corresponding to a ciphertext. This attack is feasible if an
intruder can gain a position within the OS from which both a plaintext and
the corresponding ciphertext can be observed. Collecting a sufficient number of
plaintextÂ­ciphertext pairs provides clues for determining Dk. In the chosen plain-
text attack, an intruder is able to supply a plaintext and observe its encrypted
form, i.e., choose a d and observe Ek(d). It allows the intruder to systematically



620  Part 4  File Systems and I/O Management
             build a collection of plaintextÂ­ciphertext pairs to support guessing and refinement
             of guesses during the attack.
             15.4.2 Encryption Techniques
             Encryption techniques differ in the way they try to defeat intruder attempts at
             finding Dk. The fundamental approach is to mask the features of a plaintext--i.e.,
             ensure that a ciphertext does not reveal features of the corresponding plaintext--
             without incurring a very high cost of encryption.
             Consider the simplest encryption technique, the classical substitution cipher,
             which substitutes each letter in a plaintext by some other letter of the alphabet. It
             does not mask features of a plaintext well enough; so frequency analysis provides
             a simple method for finding Dk : Arrange letters of the alphabet in the order of
             decreasing frequency of usage in a collection of ciphertexts. Take standard data
             for frequency of letters in English texts, and organize the letters in the order of
             decreasing frequency. Now, a good guess for Dk is a function that simply maps a
             letter of the first list into the corresponding letter of the second list.
             So how to mask features of a plaintext during encryption? Shannon (1949)
             formulated two principles for design of high-quality encryption techniques. These
             principles are called confusion and diffusion. The confusion principle recommends
             that it should not be easy to find what changes would occur in the ciphertext due
             to a change in a plaintext. The diffusion principle recommends that the effect
             of a small substring in the plaintext should be spread throughout the ciphertext.
             These principles ensure that features of a plaintext are masked effectively, because
             individual parts of a plaintext and its ciphertext would not have a strong corre-
             lation between them. In the following, we describe four encryption schemes and
             discuss their confusion and diffusion properties.
             Block Cipher  The block cipher is an extension of the classical substitution cipher.
             It performs substitution of fixed-size blocks of a plaintext by ciphertext blocks
             of equal size. For example, a block consisting of, say, n bits is encrypted with a
             key k to obtain an n-bit block of the ciphertext (see Figure 15.4). These blocks
             are assembled to obtain the ciphertext. The block cipher technique is simple to
             implement. However, the confusion and diffusion introduced by it is confined to a
             block in the ciphertext. Hence identical blocks in a plaintext yield identical blocks
             in the ciphertext. This feature makes it vulnerable to an attack based on frequency
             analysis and known plaintext or chosen plaintext attacks. Larger values of n can
             be used to make such attacks less practical.
                                              Encryption
                                              key (k)
                           Â·Â·                 Block             Â·Â·
                                              cipher
                           Plaintext                            Ciphertext
             Figure  15.4  Block cipher.



                                                                      Chapter 15  Security and Protection  621
Stream Cipher  A stream cipher considers a plaintext as well as the encryption
key to be streams of bits. Encryption is performed by using a transformation that
involves a few bits of the plaintext and an equal number of bits of the encryption
key. A popular choice of the transformation is a bit-by-bit transformation of a
plaintext, typically by performing an operation like exclusive-OR on a bit of the
plaintext and a bit of the encryption key.
A stream cipher is faster than a block cipher. It does not provide confusion
or diffusion when a bit-by-bit transformation is used. A variant of this cipher,
called a vernam cipher, uses a random stream of bits as the key stream, whose size
exactly matches the size of the plaintext. Hence identical substrings in a plaintext
do not lead to identical substrings in the ciphertext. The one-time pad that is
famous for its use during the Second World War was actually a vernam cipher
wherein a key stream was used to encode only one plaintext. It made the cipher
unbreakable.
Variants of the stream cipher have been designed to introduce diffusion. Such
a cipher operates as follows: An n-bit key stream is used to encrypt the first n bits
of the plaintext. The next n bits of the key stream are the n bits of the ciphertext
that were just produced, and so on until the complete plaintext is encrypted. Thus
a substring in the plaintext influences encryption of the rest of the plaintext, which
provides a high level of diffusion. This cipher is called a ciphertext autokey cipher
(see Figure 15.5). If the key stream generator uses n bits of the plaintext that were
just encrypted, instead of its ciphertext, the cipher is called a self-synchronizing
cipher. The diffusion introduced by it is confined only to the next n bits of the
ciphertext.
RC4 is a widely used stream cipher that uses a key stream that is a pseudoran-
dom stream of bits. It uses a pseudorandom stream generator that is initialized
by using a key generated by the key scheduling algorithm. It is fast, as it requires
only between 8 and 16 machine operations to generate 1 byte in the key stream.
It is used in the Wired Equivalent Privacy (WEP) protocol for security in wireless
networks and its successor the Wi-Fi Protected Access (WPA) protocol, and in
the Secure Sockets Layer (SSL) protocol for the Internet. The key scheduling
algorithm of RC4 was shown to possess weaknesses, which led to breaking of
the WEP and WPA protocols. However, its use in the SSL protocol is considered
secure because the SSL protocol itself generates the key used to initialize the
pseudorandom stream generator.
                                              Encryption
                                              key(k)
                                              Key stream
                                              generator
                          Plaintext           Stream      Ciphertext
                                              cipher
Figure  15.5  Ciphertext  autokey    cipher.



622  Part 4  File Systems and I/O Management
             Data Encryption Standard (DES)         DES was developed by IBM for the National
             Bureau of Standards. It uses a 56-bit key to encrypt 64-bit data blocks. Thus,
             it is a block cipher. However, to overcome the problem of poor diffusion, DES
             provides a cipher block chaining (CBC) mode. In this mode, the first block of
             plaintext is combined with an initial vector using an exclusive-OR operation
             and then enciphered. The resulting ciphertext is then combined with the second
             block of the plaintext using an exclusive-OR operation and then enciphered,
             and so on.
                   DES consists of three steps--the initial permutation step, the transforma-
             tion step, and the final permutation step. The transformation step consists of 16
             iterations. In each iteration the string input to the iteration is subjected to a com-
             plex transformation that involves a permutation operation on the string, which
             achieves diffusion, and a substitution operation through duplication and omis-
             sion of some bits, which achieves confusion. Figure 15.6 illustrates operations
             performed in each iteration. In the first iteration, the input string is the plaintext.
             In all other iterations, the input string is the output of the previous iteration. The
             input string is split into two halves of 32 bits each. The right half of the input
             string becomes the left half of the result string, and a complex transformation
             involving the left and right halves is performed to obtain the right half of the
             result string.
                   Transformation of the right half of the input string consists of the following
             steps: The right half is first expanded to 48 bits by permuting its bits and dupli-
             cating some of them. It is combined with key Ki using an exclusive-OR operation
             (see  the function f  in  Figure 15.6), where key Ki       is derived     by permuting   the
             encryption key k, using the iteration number i. The result of this operation is
             split into eight groups of 6 bits each. Each 6-bit group is input to an S-box that
             substitutes a 4-bit group for it. The results of substitution are concatenated to
             obtain a 32-bit string that is permuted to obtain another 32-bit string. This string
             is combined with the left half of the input string, using an exclusive-OR opera-
             tion to obtain the right half of the result string. The S-box introduces confusion.
             The permutation introduces diffusion, while the final exclusion-OR operation
             introduces confusion.
                   DES achieves both encryption and decryption by using the same sequence
             of steps, except that the keys are used in the reverse order during decryption; i.e.,
             iteration i uses key K17-i instead of key Ki. The 56-bit key length used in DES
             would have required 255 trials in an exhaustive attack, which was considered a
                                              Li-1  Ri-1  Input string
                                                    f     Ki =  (k, i)
                                                          Li-1 f(Ri-1, Ki)
                                              Li    Ri    Result string
             Figure 15.6  An iteration in DES ( indicates an exclusive-OR operation).
