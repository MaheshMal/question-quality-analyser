Overview of Security and Protection
Ensuring noninterference with the computations and resources of users is one
of the three fundamental goals of an OS mentioned in Section 1.2. A resource
could be a hardware resource such as an I/O device, a software resource such as
a program or data stored in a file, or a service offered by the OS. Several kinds
of interference can arise during operation of a computer system; we call each of
them a threat. Some of the threats depend on the nature of specific resources or
services and the manner of their use, while others are of a generic nature.
                                                                                               605



606  Part 4  File Systems and I/O Management
                Unauthorized access to resources is an obvious threat in an OS. Persons who
             are not registered users of a computer system may try to access its resources, while
             registered users may try to access resources that they have not been authorized
             to use. Such persons may maliciously try to corrupt or destroy a resource. This
             is a potent threat for programs and data stored in files. A less obvious threat
             is interference in legitimate access of resources and services by users. It tends to
             disrupt computational activities of users by preventing them from using resources
             and services of an OS. This threat is called denial of service. In this chapter, we
             discuss how an OS counters generic threats and threats concerning programs and
             data stored in files.
                Operating systems use two categories of techniques to counter threats to data
             and programs:
             ·  Security measures guard a user's data and programs against interference from
                persons or programs outside the operating system; we broadly refer to such
                persons and their programs as nonusers.
             ·  Protection measures guard a user's data and programs against interference
                from other users of the system.
                Table 15.1 describes two key methods used by operating systems for imple-
             menting security and protection. Authentication, which is aimed at security,
             consists of verifying the identity of a person. Computer-based authentication rests
             on either of two kinds of assumptions. One common assumption is that a person
             is the user he claims to be if he knows something that only the OS and the user
             are expected to know, e.g., a password. It is called authentication by knowledge.
             The other authentication method relies on things that only the user is assumed
             to possess. For example, biometric authentication is based on some unique and
             inalterable biological feature such as fingerprints, retina, or iris. Authorization is
             the key method of implementing protection. It consists of: (1) granting an access
             Table 15.1      Terminology Used in Security and Protection
             of Information
             Term                             Explanation
             Authentication                   Authentication is verification of a user's identity.
                                              Operating systems most often perform authentication by
                                              knowledge. That is, a person claiming to be some user X is
                                              called upon to exhibit some knowledge shared only
                                              between the OS and user X, such as a password.
             Authorization                    Authorization has two aspects:
                                              1. Granting a set of access privileges to a user; for
                                              example, some users may be granted read and write
                                              privileges for a file, while others are granted read-only
                                              privileges,
                                              2. Verifying a user's right to access a resource in a specific
                                              manner.



                                                                    Chapter 15          Security  and  Protection  607
                       Login id and
        User          authentication information
        + kernel                                    Authentication
                       Authentication               service
                       token
                                                                    Authentication
                       Process                                                database
        Requests and                                                          Security
        responses      Requests and                                           setup
                       responses                      Changes in
                                                      privileges              Protection
                                    Authentication                            setup
                                       token
                       Service and                  Authorization
                       resource        yes/no       service
                       manager
                                                                    Authorization
                                                                              database
Figure  15.1 Generic  security and protection setups in an operating system.
privilege for a resource to a user, which is a right to access the resource in the
specified manner (see Chapter 13), and (2) determining whether a user possesses
the right to access a resource in a specific manner.
Figure 15.1 shows a generic scheme for implementing security and protection
in an operating system. The security setup is shown in the dashed box in the upper
part of the figure. It consists of the authentication service and the authentication
database. The authentication database contains a pair of the form (login id, val-
idating information) for every registered user of the operating system, where the
validating information is typically an encrypted form of a user's password. To
log into the system, a person submits his login id and password to the kernel.
The kernel passes this information to the authentication service, which encrypts
the password and compares it with the validating information for the user stored
in the authentication database. If the check succeeds, the authentication service
generates an authentication token for the user and passes it back to the kernel.
The authentication token is typically the user id assigned to the user. Whenever
the user or a process initiated by the user makes a request to access a resource, the
kernel appends the user's authentication token to the request to facilitate making
of protection checks.
The protection setup is shown in the dashed box in the lower part of
Figure 15.1. It consists of the authorization service and the authorization database.
The authorization database contains triples of the form (authentication token,
resource id, privileges). When a user wishes to grant access privileges for one of
his files to some users, or withdraw some previously granted access privileges for
the file, he makes a request to the kernel. As shown in Figure 15.1, the kernel
passes on the request to the authorization service along with the authentication
token for the user. The authorization service now makes appropriate changes in
the authorization database. To access a resource, a user or his process makes a
resource request to the service and resource manager. The request contains the



608  Part 4  File Systems and I/O Management
             id of a resource, the kind of access desired to it, and the authentication token
             of the user. The service and resource manager passes the request to the autho-
             rization service, which determines whether the user possesses the privilege to use
             the resource in the desired manner and sends a yes/no reply to the service and
             resource manager. Depending on this reply, the service and resource manager
             decides whether the user's request should be granted.
             Not all operating systems incorporate all the elements shown in Figure 15.1
             in their security and protection setups. For example, in most modern operating
             systems, the authorization information is typically maintained and used by the
             file system, so the operating system does not maintain the authorization database
             and does not perform authorization.
             The distinction between security and protection provides a neat separation
             of concerns for the OS. In a conventional operating system, the security concern
             is limited to ensuring that only registered users can use the system. A security
             check is performed when a person logs in. It decides whether the person is a user
             of the OS and determines his user id. Following this check, all threats to infor-
             mation stored in the system are protection concerns; the OS uses the user id of a
             person to determine whether he can access a specific file in the OS. In a distributed
             system, however, security concerns are more complex because of the presence of
             the networking component (see Chapter 21). We confine the discussion in this
             chapter to conventional operating systems only.
             Mechanisms and Policies          Table 15.2 describes mechanisms and policies in secu-
             rity and protection. Security policies specify whether a person should be allowed
             to use a system. Protection policies specify whether a user should be allowed to
             access a specific file. Both these policies are applied outside the OS domain--a
             system administrator decides whether a person should be allowed to become a
             user of a system, and a user specifies what users may access his files. Security and
             protection mechanisms implement these policies by maintaining the authentica-
             tion and authorization databases and using their contents to make specific checks
             during system operation.
             Table 15.2  Policies and Mechanisms in Security and Protection
             Security    ·  Policy: Whether a person can become a user of the system.
                            The system administrator employs the policy while
                            registering new users.
                         ·  Mechanisms: Add or delete users, verify whether a person is a
                            registered user (i.e., perform authentication), perform
                            encryption to ensure confidentiality of passwords.
             Protection  ·  Policy: The file owner specifies the authorization policy for a
                            file. It decides which user can access a file and in what manner.
                         ·  Mechanisms: Set or change authorization information for a
                            file. Check whether a file processing request conforms to the
                            user's privileges.



                                                         Chapter 15    Security and Protection  609
Table 15.3    Goals of Computer Security and Protection
Goal          Description
Secrecy       Only authorized users should be able to access information.
              This goal is also called confidentiality.
Privacy       Information should be used only for the purposes for which it
              was intended and shared.
Authenticity  It should be possible to verify the source or sender of
              information, and also verify that the information has been
              preserved in the form in which it was created or sent.
Integrity     It should not be possible to destroy or corrupt information,
              for example, by erasing a disk.
15.1.1 Goals of Security and Protection
Table 15.3 describes the four goals of security and protection, namely, secrecy,
privacy, authenticity, and integrity of information.
Of the four goals, only privacy is exclusively a protection concern. An OS
addresses privacy through the authorization service and the service and resource
manager (see Figure 15.1). The authorization service verifies whether a user pos-
sesses the privilege to access a resource in a specific manner, and the service and
resource manager disallows requests that do not conform to a user's privileges.
It is up to users to ensure privacy of their information by using this setup. A user
who wishes to share his data and programs with a few other users should set
the authorization for his information according to the well-known need-to-know
principle: Only those persons who need to use some information for a legitimate
function should be authorized to access it.
Secrecy, authenticity, and integrity are both protection and security concerns.
As protection concerns, secrecy, authenticity, and integrity are easy to satisfy
because the identity of a user would have already been verified and the service
and resource manager would use the authorization information, which is a part of
the protection setup shown in Figure 15.1. However, elaborate arrangements are
needed to satisfy secrecy, authenticity, and integrity as security concerns. These
are discussed in Chapter 21.
15.1.2 Security and Protection Threats
To see how and when security and protection threats arise in an OS, first consider
a conventional OS. Its authentication procedures ensure that only registered users
can log into the system and initiate processes. Hence the OS knows which user has
initiated a specific process, and with that knowledge it can readily check whether a
process should be allowed to use a specific resource. When processes communicate
with other processes, OS actions concerning communication are also confined to
the same computer system. Hence an illegal access to a resource or a service by
