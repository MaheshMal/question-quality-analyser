Summary
As mentioned in the first chapter, a modern OS can     instructions in user programs at other times. It
service several user programs simultaneously. The      is achieved by sending a special signal, called an
OS achieves it by interacting with the computer        interrupt, to the CPU. Interrupts are sent at the
and user programs to perform several control func-     occurrence of a situation such as completion of an
tions. In this chapter we described relevant features  I/O operation, or a failure of some sort. A software
of a computer and discussed how they are used by       interrupt known as a system call is sent when a
the OS and user programs.                              program wishes to use a kernel service such as
     The operating system is a collection of rou-      allocation of a resource or opening of a file.
tines. The instructions in its routines must be exe-   The CPU contains a set of control registers
cuted on the CPU to realize its control functions.     whose contents govern its functioning. The pro-
Thus the CPU should execute instructions in the        gram status word (PSW) is the collection of control
OS when a situation that requires the operating sys-   registers of the CPU; we refer to each control
tem's attention occurs, whereas it should execute      register as a field of the PSW. A program whose



48           Part 1       Overview
execution was interrupted should be resumed at a                     larger random access memory (RAM)--which we
later time. To facilitate this, the kernel saves the                 will simply call memory--and a disk. The CPU
CPU state when an interrupt occurs. The CPU                          accesses only the cache. However, the cache con-
state consists of the PSW and program-accessible                     tains only some parts of a program's instructions
registers, which we call general-purpose registers                   and data. The other parts reside in memory; the
(GPRs). Operation of the interrupted program is                      hardware associated with the cache loads them into
resumed by loading back the saved CPU state into                     the cache whenever the CPU tries to access them.
the PSW and GPRs.                                                    The effective memory access time depends on what
    The CPU has two modes of operation con-                          fraction of instructions and data accessed by the
trolled by the mode (M) field of the PSW. When                       CPU was found in the cache; this fraction is called
the CPU is in the user mode, it cannot execute                       the hit ratio.
sensitive instructions like those that load informa-                 The input-output system is the slowest unit
tion into PSW fields like the mode field, whereas                    of a computer; the CPU can execute millions of
it can execute all instructions when it is in the                    instructions in the amount of time required to
kernel mode. The OS puts the CPU in the user                         perform an I/O operation. Some methods of per-
mode while it is executing a user program, and                       forming an I/O operation require participation of
puts the CPU in the kernel mode while it is execut-                  the CPU, which wastes valuable CPU time. Hence
ing instructions in the kernel. This arrangement                     the input-output system of a computer uses direct
prevents a program from executing instructions                       memory access (DMA) technology to permit the
that might interfere with other programs in the                      CPU and the I/O system to operate independently.
system.                                                              The operating system exploits this feature to let the
    The memory hierarchy of a computer pro-                          CPU execute instructions in a program while I/O
vides the same effect as a fast and large memory,                    operations of the same or different programs are
though   at  a       low  cost.  It   contains       a  very  fast   in progress. This technique reduces CPU idle time
and small memory called a cache, a slower and                        and improves system performance.
TEST     YOUR CONCEPTS                                                                                                      ·
    2.1  Classify each of the following statements as true                f. A memory protection violation leads to a
         or false:                                                        program interrupt.
         a.  The     condition   code  (i.e.,  flags)   set  by  an       g. The kernel becomes aware that an I/O opera-
             instruction   is    not   a  part  of      the   CPU         tion has completed when a program makes a
             state.                                                       system call to inform it that the I/O operation
         b. The state of the CPU changes when a pro-                      has ended.
             gram executes a no-op (i.e., no operation)              2.2  Which of the following should be privileged in-
             instruction.                                                 structions? Explain why.
         c. The      software    interrupt     (SI)     instruction       a. Put the CPU in kernel mode
             changes the mode of the CPU to kernel mode.                  b. Load the size register
         d. Branch instructions in a program may lead                     c. Load a value in a general-purpose register
             to low spatial locality, but may provide high                d. Mask off some interrupts
             temporal locality.                                           e. Forcibly terminate an I/O operation
         e. When a DMA is used, the CPU is involved in
             data transfers to an I/O device during an I/O
             operation.



                                                          Chapter 2  The OS, the Computer, and User Programs                  49
EXERCISES                                                                                                                         ·
     2.1  What use does the kernel make of the interrupt             2.9      A computer has two levels of cache memories,
          code field in the PSW?                                              which provide access times that are 0.01 and
     2.2  The CPU should be in the kernel mode while                          0.1 times the access time of memory. If the hit
          executing the kernel code and in the user mode                      ratio in each cache is 0.9, the memory has an
          while executing a user program. Explain how it                      access time of 10 microseconds, and the time
          is achieved during operation of an OS.                              required to load a cache block is 5 times the
     2.3  The kernel of an OS masks off all interrupts dur-                   access time of the slower memory, calculate the
          ing interrupt servicing. Discuss the advantages                     effective memory access time.
          and disadvantages of such masking.                         2.10     A computer has a CPU that can execute 10 mil-
     2.4  A  computer     system    has  the   clock-tick-based               lion instructions per second and a memory that
          timer arrangement described in Section 2.2.5.                       has a transfer rate of 100 million bytes/second.
          Explain how this arrangement can be used to                         When interrupt I/O is performed, the interrupt
          maintain the time of day. What are the limita-                      routine has to execute 50 instructions to trans-
          tions of this approach?                                             fer 1 byte between memory and an I/O device.
     2.5  An OS supports a system call sleep, which puts                      What is the maximum data transfer rate during
          the program making the call to sleep for the                        I/O operations implemented by using the follow-
          number of seconds indicated in the argument                         ing I/O modes: (a) interrupt I/O and (b) DMA-
          of the sleep call. Explain how this system call                     based I/O.
          is implemented.                                            2.11     Several units of an I/O device that has a peak
     2.6  A computer system organizes the saved PSW                           data transfer rate of 10 thousand bytes/second
          information     area  as  a  stack.  It  pushes  con-               and operates in the interrupt I/O mode are con-
          tents of the PSW onto this stack during Step 2                      nected to the computer in Exercise 2.10. How
          of the interrupt action (see Figure 2.6). Ex-                       many of these units can operate at full speed at
          plain the advantages of a stack for interrupt                       the same time?
          servicing.                                                 2.12     A hypothetical OS supports two system calls
     2.7  If the request made by a program through a                          for performing I/O operations. The system call
          system call cannot be satisfied straightaway, the                   init_io initiates an I/O operation, and the sys-
          kernel informs the scheduling component that                        tem call await_io ensures that the program would
          the program should not be selected for execu-                       execute further only after the I/O operation has
          tion until its request is met. Give examples of                     completed. Explain all actions that take place
          such requests.                                                      when the program makes these two system calls.
     2.8  A hypothetical OS provides a system call for                        (Hint: When none of the programs in the OS can
          requesting   allocation   of   memory.   An     experi-             execute on the CPU, the OS can put the CPU
          enced programmer offers the following advice:                       into an infinite loop in which it does nothing. It
          "If your program contains many requests for                         would come out of the loop when an interrupt
          memory, you can speed up its execution by com-                      occurs.)
          bining all these requests and making a single
          system call." Explain why this is so.
BIBLIOGRAPHY                                                                                                                      ·
Smith (1982) and Handy (1998) describe cache mem-                    computer  architecture   and  organization,  e.g.,  Hayes
ory  organizations.    Przybylski      (1990)  discusses   cache     (1997), Patterson and Hennessy (2005), Hennessy and
and memory hierarchy design. Memory hierarchy and                    Patterson (2002), Hamacher et al. (2002), and Stallings
I/O organization are also covered in most books on                   (2003).



50        Part 1  Overview
    Most books on operating systems discuss the sys-       8.   Hennessy, J., and D. Patterson (2002): Computer
tem calls interface. Bach (1986) contains a useful syn-         Architecture: A Quantitative Approach, 3rd ed.,
opsis of Unix system calls. O'Gorman (2003) describes           Morgan Kaufmann, San Mateo, Calif.
interrupt processing in Linux. Beck et al. (2002), Bovet   9.   Love, R. (2005): Linux Kernel Development,
and Cesati (2005), and Love (2005) contain extensive dis-       2nd ed., Novell Press.
cussions of Linux system calls. Mauro and McDougall        10.  Mauro, J., and R. McDougall (2006): Solaris
(2006) describes system calls in Solaris, while Russi-          Internals, 2nd ed., Prentice Hall, Englewood
novich and Solomon (2005) describes system calls in             Cliffs, N.J.
Windows.                                                   11.  Patterson, D., and J. Hennessy (2005): Computer
1.  Bach, M. J. (1986): The Design of the Unix                  Organization and Design: The Hardware/Software
    Operating System, Prentice-Hall, Englewood                  Interface, 3rd ed., Morgan Kaufman, San Mateo,
    Cliffs, N.J.                                                Calif.
2.  Beck, M., H. Bohme, M. Dziadzka, U. Kunitz,            12.  Przybylski, A. (1990): Cache and Memory
    R. Magnus, C. Schroter, and D. Verworner                    Hierarchy Design: A Performance-Directed
    (2002): Linux Kernel Programming, 3rd ed.,                  Approach, Morgan Kaufmann, San Mateo,
    Pearson Education, New York.                                Calif.
3.  Bovet, D. P., and M. Cesati (2005): Understanding      13.  Russinovich, M. E., and D. A. Solomon (2005):
    the Linux Kernel, 3rd ed., O'Reilly, Sebastopol.            Microsoft Windows Internals, 4th ed., Microsoft
4.  O'Gorman, J. (2003): Linux Process Manager:                 Press, Redmond, Wash.
    The internals of Scheduling, Interrupts and            14.  Smith, A. J. (1982): "Cache memories," ACM
    Signals, John Wiley, New York.                              Computing Surveys, 14, 473­530.
5.  Hamacher, C., Z. Vranesic, and S. Zaky (2002):         15.  Stallings, W. (2003): Computer Organization and
    Computer Organization, 5th ed., McGraw-Hill,                Architecture, 6th ed., Prentice Hall, Upper Saddle
    New York.                                                   River, N.J.
6.  Handy, J. (1998): The Cache Memory Book,               16.  Tanenbaum, A. (1998): Structured Computer
    2nd ed., Academic Press, New York.                          Organization, 4th ed., Prentice Hall, Englewood
7.  Hayes, J. (1997): Computer Architecture and                 Cliffs, N.J.
    Organization, 3rd ed., McGraw-Hill, New York.
