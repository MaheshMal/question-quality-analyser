Efficiency, System Performance, and User Service
            Measurement provides a method of assessing selected aspects of an operating sys-
            tem's functioning. In Chapter 1, we defined efficiency of use and user convenience
            as two of the fundamental goals of an OS. However, to a system administrator
            the performance of a system in its environment is more important than merely
            efficiency of use, hence in this section we discuss measures of efficiency, system
            performance, and user service. Table 3.3 summarizes these measures.
            Efficiency  The way to evaluate efficiency of use of a resource is to see how
            much of the resource is unused or wasted, and, in the amount of resource that is
            used, check how much of it is put to productive use. As an example of efficiency,
            consider use of the CPU. Some amount of CPU time is wasted because the CPU
            does not have enough work to do. This happens when all user processes in the
            system are either performing I/O operations or waiting for the users to supply
            data. Of the CPU time that is used, some amount of time is used by the OS itself
            in performing interrupt servicing and scheduling. This constitutes the overhead
            of OS operation. The remaining CPU time is used for executing user processes.
            To evaluate efficiency of CPU use, we should consider what fraction or percentage
            of the total CPU time is used for executing user processes. Efficiency of use of other
            resources such as memory and I/O devices can be similarly determined: Deduct
            the amount of unused resource and the OS overhead from the total resource and
            consider what fraction or percentage the result is of the total resource.
                      Using the notion of efficiency of use, we briefly discuss the fundamental
            trade-off between efficiency of use and user convenience: A multiprogramming
            system has several user programs at any time and switches between them to
            obtain efficient use of both the CPU and I/O devices. The CPU is given to the
            Table 3.3       Measures of Efficiency, System Performance,
            and User Service
            Aspect              Measure            Description
            Efficiency of use   CPU efficiency     Percent utilization of the CPU
                                Memory efficiency  Percent utilization of memory
            System performance  Throughput         Amount of work done per unit time
            User service        Turnaround time    Time to complete a job or a process
                                Response time      Time to implement one subrequest



                                                    Chapter 3    Overview of Operating  Systems  57
highest-priority program in the system whenever it wants, and it can use the CPU
for as long as it wants. A time-sharing system, however, restricts the amount
of CPU time a scheduled process can use. It preempts a process that uses too
much CPU time and schedules another process. The preempted process may
be scheduled again sometime in future. This feature increases the OS overhead
in interrupt servicing and scheduling, thereby affecting efficiency of CPU use.
However, it provides good response times to all processes, which is a feature
desired by users of the OS.
System Performance  Once we decide on the suitable combination of CPU effi-
ciency and user service, it is important to know how well the OS is performing.
The notion of performance depends on the computing environment and indicates
the rate at which a computer system accomplishes work during its operation.
An operating system typically uses a measure of efficiency to tune its func-
tioning for better performance. For example, if memory efficiency is low, the
operating system may load more user programs in memory. In turn, it may lead
to better performance of the system by increasing the rate at which the system
completes user computations. If CPU efficiency is low, the operating system may
investigate its causes--either too few programs in memory or programs spending
too much time in waiting for I/O to complete--and take corrective actions where
possible.
System performance is characterized as the amount of work done per unit
time. It is typically measured as throughput.
Definition 3.1 Throughput    The average number of jobs, programs, processes,
or subrequests completed by a system in unit time.
The unit of work used for measuring throughput depends on the computing
environment. In a noninteractive environment, throughput of an OS is measured
in terms of the number of jobs or programs completed per unit time. In an inter-
active environment, it may be measured in terms of the number of subrequests
completed per unit time. In a specialized computing environment, performance
may be measured in terms meaningful to the application; for example, in a bank-
ing environment, it could be the number of transactions per unit time. Throughput
can also be used as a measure of performance for I/O devices. For example, the
throughput of a disk can be measured as the number of I/O operations completed
per unit time or the number of bytes transferred per unit time.
User Service  Some aspects of user convenience are intangible and thus impos-
sible to measure numerically; e.g., a feature like user friendly interfaces cannot be
quantified. However, there are some measurable aspects of user convenience, so
we can define appropriate measures for them. User service, which indicates how
quickly a user's computation has been completed by the OS, is one such aspect.
We define two measures of user service--turnaround time, in noninteractive com-
puting environments, and response time, in interactive computing environments.
A smaller turnaround time or response time implies better user service.
